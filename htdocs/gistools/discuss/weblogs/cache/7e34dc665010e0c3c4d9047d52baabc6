O:9:"magpierss":20:{s:6:"parser";i:0;s:12:"current_item";a:0:{}s:5:"items";a:15:{i:0;a:10:{s:5:"title";s:44:"The ArcGIS Server Development Blog has moved";s:4:"link";s:121:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/archive/2007/05/09/The-ArcGIS-Server-Development-Blog-has-moved.aspx";s:7:"pubdate";s:29:"Wed, 09 May 2007 16:00:00 GMT";s:4:"guid";s:40:"b60b3f0a-e2bd-4be5-8a18-822c697649ab:209";s:2:"dc";a:1:{s:7:"creator";s:8:"Sterling";}s:5:"slash";a:1:{s:8:"comments";s:1:"0";}s:8:"comments";s:70:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/comments/209.aspx";s:3:"wfw";a:1:{s:10:"commentrss";s:79:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/commentrss.aspx?PostID=209";}s:11:"description";s:915:"<p>The ArcGIS Server Development Blog has moved to the ESRI blogs home at <a href="http://blogs.esri.com/arcgisserver">http://blogs.esri.com/arcgisserver</a>. Please update your bookmarks and RSS feeds to reference the new location.</p><p>As part of the move, any current accounts you&rsquo;ve created on this blog will be unavailable on the new site. Instead, you can use your <a href="https://webaccounts.esri.com/CAS/index.cfm">ESRI Global Account</a>&nbsp;if you wish to sign in to the new site. Creating an ESRI Global Account is free and available to everyone.</p><p>The blog will still be written by the ArcGIS Server development team, and you&rsquo;ll be able to see all previous posts and comments. We apologize for any inconvenience caused by this move, and look forward to your continued support and readership.</p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=209" width="1" height="1">";s:7:"summary";s:915:"<p>The ArcGIS Server Development Blog has moved to the ESRI blogs home at <a href="http://blogs.esri.com/arcgisserver">http://blogs.esri.com/arcgisserver</a>. Please update your bookmarks and RSS feeds to reference the new location.</p><p>As part of the move, any current accounts you&rsquo;ve created on this blog will be unavailable on the new site. Instead, you can use your <a href="https://webaccounts.esri.com/CAS/index.cfm">ESRI Global Account</a>&nbsp;if you wish to sign in to the new site. Creating an ESRI Global Account is free and available to everyone.</p><p>The blog will still be written by the ArcGIS Server development team, and you&rsquo;ll be able to see all previous posts and comments. We apologize for any inconvenience caused by this move, and look forward to your continued support and readership.</p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=209" width="1" height="1">";}i:1;a:11:{s:5:"title";s:77:"Follow-up to Extending the QueryAttributes Task: Zooming to selected features";s:4:"link";s:164:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/archive/2007/05/03/Follow_2D00_up-to-Extending-the-QueryAttributes-Task_3A00_-Zooming-to-selected-features.aspx";s:7:"pubdate";s:29:"Thu, 03 May 2007 19:15:00 GMT";s:4:"guid";s:40:"b60b3f0a-e2bd-4be5-8a18-822c697649ab:189";s:2:"dc";a:1:{s:7:"creator";s:8:"Sterling";}s:5:"slash";a:1:{s:8:"comments";s:1:"3";}s:8:"comments";s:70:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/comments/189.aspx";s:3:"wfw";a:1:{s:10:"commentrss";s:79:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/commentrss.aspx?PostID=189";}s:11:"description";s:22012:"<p>From Bryan Baker, a&nbsp;product engineer&nbsp;working on the .NET SDK:&nbsp;</p><p>I wrote an <a href="http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/archive/2007/02/12/Extending-the-QueryAttributesTask-to-highlight-selected-features.aspx">earlier post</a> that showed how to extend the QueryAttributes task so that all features are immediately highlighted. Several users have asked about also zooming to the selected features. I&#39;ll show that here, though keep in mind that the user can also zoom to the selected features by right-clicking on the node for the layer (Cities in the graphic at the top of the earlier post) and choosing to zoom to selected features.</p><p>It turns out that it&#39;s a little more difficult to zoom to the features than I originally thought, because the FullExtent property of the graphics layer is null for queries like this. Instead, we have to construct our own envelope around all the features by looping through them. This isn&#39;t that difficult, though of course it does require more processing.</p><p>I&rsquo;ve included code below that does the zooming. This code should be added to near the bottom of the existing code in the earlier post. If for some reason you didn&rsquo;t want to highlight all the features, you could omit or comment out the line in the loop that sets the selectedCol to true.</p><p>The code below first creates an envelope to use, then in the existing loop that selects each feature, it widens the envelope to surround each feature. Once it has the envelope, it gets a reference to the Map control so it can set the Map&rsquo;s extent. This takes some work, since the task itself has no reference to the Map. We have to get the ID of the Map and then search the page&rsquo;s control tree. Since the Map control could be nested within another control, such as in a FloatingPanel, we search for it recursively using a custom function (found at the bottom of this listing).</p><p>One more thing before we zoom the map: the task could be querying a point layer, and if only one point is found, the &ldquo;envelope&rdquo; around all features is a point. We can&rsquo;t zoom to a point, so instead we set the envelope to a percentage of the full extent of the Map (five percent&mdash;this value is hard-coded here, and you can change it depending on tightly you want to zoom in this one-point case).</p><p>Finally, we&rsquo;ve got an envelope that will work, and we set the Map to this extent, refresh the Map, and copy its CallbackResults to the task&rsquo;s CallbackResults. This last step is necessary because a callback only works with one control (the task in this case), and we need to tell another control (the Map) to update its contents.</p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; Set up the items to hold the extent of all features</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Dim</span> geom <span style="color:blue;">As</span> ESRI.ArcGIS.ADF.Web.Geometry.Geometry</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Dim</span> layerEnv <span style="color:blue;">As</span> <span style="color:blue;">New</span> _</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>ESRI.ArcGIS.ADF.Web.Geometry.Envelope( _</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Double</span>.MaxValue, <span style="color:blue;">Double</span>.MaxValue, _</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Double</span>.MinValue, <span style="color:blue;">Double</span>.MinValue)</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; Set each feature to selected (this loop is</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; at the end the code in my previous blog post)</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;color:blue;font-family:'Courier New';">For</span><span style="font-size:10pt;font-family:'Courier New';"> <span style="color:blue;">Each</span> row <span style="color:blue;">As</span> DataRow <span style="color:blue;">In</span> graphicsLayer.Rows</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp; </span>row(selectedCol) = <span style="color:blue;">True</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; Enlarge the overall envelope to </span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39;<span>&nbsp; </span>include the current feature</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp; </span>geom = graphicsLayer.GeometryFromRow(row)</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp; </span>layerEnv.Union(geom)</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;color:blue;font-family:'Courier New';">Next</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; If any records found, zoom to them</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;color:blue;font-family:'Courier New';">If</span><span style="font-size:10pt;font-family:'Courier New';"> graphicsLayer.Rows.Count &gt; 0 <span style="color:blue;">Then</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; Get a reference to the Map - have to search the Page since</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; <span>&nbsp;</span>task itself has no direct reference to the Map</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; (the task&#39;s TaskResults does have the ID of the map)</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Dim</span> mapCtrl <span style="color:blue;">As</span> Map = <span style="color:blue;">Nothing</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp; </span><span style="color:blue;">Dim</span> taskResultsId <span style="color:blue;">As</span> <span style="color:blue;">String</span> = </span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Me</span>.TaskResultsContainers(0).Name</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Dim</span> taskResults <span style="color:blue;">As</span> TaskResults = _</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span>&nbsp;&nbsp;&nbsp;</span><span style="color:blue;">CType</span>(FindControlRecursive( _</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Me</span>.Page, taskResultsId), TaskResults)</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp; </span><span style="color:blue;">If</span> <span style="color:blue;">Not</span> TaskResults <span style="color:blue;">Is</span> <span style="color:blue;">Nothing</span> <span style="color:blue;">Then</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>mapCtrl = <span style="color:blue;">CType</span>(FindControlRecursive( _</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Me</span>.Page, taskResults.Map), Map)</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp; </span><span style="color:blue;">End</span> <span style="color:blue;">If</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp; </span><span style="color:blue;">If</span> <span style="color:blue;">Not</span> mapCtrl <span style="color:blue;">Is</span> <span style="color:blue;">Nothing</span> <span style="color:blue;">Then</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; If only one point found, envelope will be a point</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39;<span>&nbsp;&nbsp; </span>-- set to a percentage of the full extent</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">If</span> layerEnv.XMin = layerEnv.XMax <span style="color:blue;">AndAlso</span> _</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>layerEnv.YMin = layerEnv.YMax <span style="color:blue;">AndAlso</span> _</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Not</span> IsNothing(mapCtrl) <span style="color:blue;">Then</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; Percentage of the full extent to use when zooming to point</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Dim</span> zoomToPointPercentage <span style="color:blue;">As</span> <span style="color:blue;">Integer</span> = 5</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Dim</span> NewWidth <span style="color:blue;">As</span> <span style="color:blue;">Double</span> = mapCtrl.GetFullExtent().Width _</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>* (zoomToPointPercentage / 100)</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Dim</span> NewHeight <span style="color:blue;">As</span> <span style="color:blue;">Double</span> = mapCtrl.GetFullExtent().Height _</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>* (zoomToPointPercentage / 100)</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>layerEnv.XMin -= NewWidth / 2</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>layerEnv.XMax += NewWidth / 2</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>layerEnv.YMin -= NewHeight / 2</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>layerEnv.YMax += NewHeight / 2</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">End</span> <span style="color:blue;">If</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; Now we can zoom the map to the extent of the features</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>mapCtrl.Extent = layerEnv</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>mapCtrl.Refresh()</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; We have to tell the client to refresh, using CallbackResults</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Me</span>.CallbackResults.CopyFrom(mapCtrl.CallbackResults)</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp; </span><span style="color:blue;">End</span> <span style="color:blue;">If</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;color:blue;font-family:'Courier New';">End</span><span style="font-size:10pt;font-family:'Courier New';"> <span style="color:blue;">If</span></span><span style="font-size:10pt;font-family:Arial;"></span></p><p>Below is the function called in the above code. This searches the page and its child controls for the control with the given ID. Put this after the end of the Execute method (End Sub), but inside the Class (before the End Class statement).</p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; Finds the control in the Page&#39;s control tree</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Public</span> <span style="color:blue;">Function</span> FindControlRecursive(<span style="color:blue;">ByVal</span> root <span style="color:blue;">As</span> _</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Control, <span style="color:blue;">ByVal</span> id <span style="color:blue;">As</span> <span style="color:blue;">String</span>) <span style="color:blue;">As</span> Control</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">If</span> root.ID = id <span style="color:blue;">Then</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Return</span> root</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">End</span> <span style="color:blue;">If</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Dim</span> c <span style="color:blue;">As</span> Control</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>&nbsp;&nbsp;</span><span style="color:blue;">For</span> <span style="color:blue;">Each</span> c <span style="color:blue;">In</span> root.Controls</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Dim</span> t <span style="color:blue;">As</span> Control = FindControlRecursive(c, id)</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">If</span> <span style="color:blue;">Not</span> t <span style="color:blue;">Is</span> <span style="color:blue;">Nothing</span> <span style="color:blue;">Then</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Return</span> t</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">End</span> <span style="color:blue;">If</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Next</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Return</span> <span style="color:blue;">Nothing</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">End</span> <span style="color:blue;">Function</span></span><span style="font-size:10pt;font-family:Arial;"></span></p><p>If you add the code above to the custom task as outlined in the earlier blog post, it should automatically zoom to the extent of all features found by the task.</p><p>&nbsp;</p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=189" width="1" height="1">";s:8:"category";s:24:"ADF.NETCode SnippetTasks";s:7:"summary";s:22012:"<p>From Bryan Baker, a&nbsp;product engineer&nbsp;working on the .NET SDK:&nbsp;</p><p>I wrote an <a href="http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/archive/2007/02/12/Extending-the-QueryAttributesTask-to-highlight-selected-features.aspx">earlier post</a> that showed how to extend the QueryAttributes task so that all features are immediately highlighted. Several users have asked about also zooming to the selected features. I&#39;ll show that here, though keep in mind that the user can also zoom to the selected features by right-clicking on the node for the layer (Cities in the graphic at the top of the earlier post) and choosing to zoom to selected features.</p><p>It turns out that it&#39;s a little more difficult to zoom to the features than I originally thought, because the FullExtent property of the graphics layer is null for queries like this. Instead, we have to construct our own envelope around all the features by looping through them. This isn&#39;t that difficult, though of course it does require more processing.</p><p>I&rsquo;ve included code below that does the zooming. This code should be added to near the bottom of the existing code in the earlier post. If for some reason you didn&rsquo;t want to highlight all the features, you could omit or comment out the line in the loop that sets the selectedCol to true.</p><p>The code below first creates an envelope to use, then in the existing loop that selects each feature, it widens the envelope to surround each feature. Once it has the envelope, it gets a reference to the Map control so it can set the Map&rsquo;s extent. This takes some work, since the task itself has no reference to the Map. We have to get the ID of the Map and then search the page&rsquo;s control tree. Since the Map control could be nested within another control, such as in a FloatingPanel, we search for it recursively using a custom function (found at the bottom of this listing).</p><p>One more thing before we zoom the map: the task could be querying a point layer, and if only one point is found, the &ldquo;envelope&rdquo; around all features is a point. We can&rsquo;t zoom to a point, so instead we set the envelope to a percentage of the full extent of the Map (five percent&mdash;this value is hard-coded here, and you can change it depending on tightly you want to zoom in this one-point case).</p><p>Finally, we&rsquo;ve got an envelope that will work, and we set the Map to this extent, refresh the Map, and copy its CallbackResults to the task&rsquo;s CallbackResults. This last step is necessary because a callback only works with one control (the task in this case), and we need to tell another control (the Map) to update its contents.</p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; Set up the items to hold the extent of all features</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Dim</span> geom <span style="color:blue;">As</span> ESRI.ArcGIS.ADF.Web.Geometry.Geometry</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Dim</span> layerEnv <span style="color:blue;">As</span> <span style="color:blue;">New</span> _</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>ESRI.ArcGIS.ADF.Web.Geometry.Envelope( _</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Double</span>.MaxValue, <span style="color:blue;">Double</span>.MaxValue, _</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Double</span>.MinValue, <span style="color:blue;">Double</span>.MinValue)</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; Set each feature to selected (this loop is</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; at the end the code in my previous blog post)</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;color:blue;font-family:'Courier New';">For</span><span style="font-size:10pt;font-family:'Courier New';"> <span style="color:blue;">Each</span> row <span style="color:blue;">As</span> DataRow <span style="color:blue;">In</span> graphicsLayer.Rows</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp; </span>row(selectedCol) = <span style="color:blue;">True</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; Enlarge the overall envelope to </span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39;<span>&nbsp; </span>include the current feature</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp; </span>geom = graphicsLayer.GeometryFromRow(row)</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp; </span>layerEnv.Union(geom)</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;color:blue;font-family:'Courier New';">Next</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; If any records found, zoom to them</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;color:blue;font-family:'Courier New';">If</span><span style="font-size:10pt;font-family:'Courier New';"> graphicsLayer.Rows.Count &gt; 0 <span style="color:blue;">Then</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; Get a reference to the Map - have to search the Page since</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; <span>&nbsp;</span>task itself has no direct reference to the Map</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; (the task&#39;s TaskResults does have the ID of the map)</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Dim</span> mapCtrl <span style="color:blue;">As</span> Map = <span style="color:blue;">Nothing</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp; </span><span style="color:blue;">Dim</span> taskResultsId <span style="color:blue;">As</span> <span style="color:blue;">String</span> = </span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Me</span>.TaskResultsContainers(0).Name</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Dim</span> taskResults <span style="color:blue;">As</span> TaskResults = _</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span>&nbsp;&nbsp;&nbsp;</span><span style="color:blue;">CType</span>(FindControlRecursive( _</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Me</span>.Page, taskResultsId), TaskResults)</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp; </span><span style="color:blue;">If</span> <span style="color:blue;">Not</span> TaskResults <span style="color:blue;">Is</span> <span style="color:blue;">Nothing</span> <span style="color:blue;">Then</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>mapCtrl = <span style="color:blue;">CType</span>(FindControlRecursive( _</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Me</span>.Page, taskResults.Map), Map)</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp; </span><span style="color:blue;">End</span> <span style="color:blue;">If</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp; </span><span style="color:blue;">If</span> <span style="color:blue;">Not</span> mapCtrl <span style="color:blue;">Is</span> <span style="color:blue;">Nothing</span> <span style="color:blue;">Then</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; If only one point found, envelope will be a point</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39;<span>&nbsp;&nbsp; </span>-- set to a percentage of the full extent</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">If</span> layerEnv.XMin = layerEnv.XMax <span style="color:blue;">AndAlso</span> _</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>layerEnv.YMin = layerEnv.YMax <span style="color:blue;">AndAlso</span> _</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Not</span> IsNothing(mapCtrl) <span style="color:blue;">Then</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; Percentage of the full extent to use when zooming to point</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Dim</span> zoomToPointPercentage <span style="color:blue;">As</span> <span style="color:blue;">Integer</span> = 5</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Dim</span> NewWidth <span style="color:blue;">As</span> <span style="color:blue;">Double</span> = mapCtrl.GetFullExtent().Width _</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>* (zoomToPointPercentage / 100)</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Dim</span> NewHeight <span style="color:blue;">As</span> <span style="color:blue;">Double</span> = mapCtrl.GetFullExtent().Height _</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>* (zoomToPointPercentage / 100)</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>layerEnv.XMin -= NewWidth / 2</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>layerEnv.XMax += NewWidth / 2</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>layerEnv.YMin -= NewHeight / 2</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>layerEnv.YMax += NewHeight / 2</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">End</span> <span style="color:blue;">If</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; Now we can zoom the map to the extent of the features</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>mapCtrl.Extent = layerEnv</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>mapCtrl.Refresh()</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; We have to tell the client to refresh, using CallbackResults</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Me</span>.CallbackResults.CopyFrom(mapCtrl.CallbackResults)</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp; </span><span style="color:blue;">End</span> <span style="color:blue;">If</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;color:blue;font-family:'Courier New';">End</span><span style="font-size:10pt;font-family:'Courier New';"> <span style="color:blue;">If</span></span><span style="font-size:10pt;font-family:Arial;"></span></p><p>Below is the function called in the above code. This searches the page and its child controls for the control with the given ID. Put this after the end of the Execute method (End Sub), but inside the Class (before the End Class statement).</p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; Finds the control in the Page&#39;s control tree</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Public</span> <span style="color:blue;">Function</span> FindControlRecursive(<span style="color:blue;">ByVal</span> root <span style="color:blue;">As</span> _</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Control, <span style="color:blue;">ByVal</span> id <span style="color:blue;">As</span> <span style="color:blue;">String</span>) <span style="color:blue;">As</span> Control</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">If</span> root.ID = id <span style="color:blue;">Then</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Return</span> root</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">End</span> <span style="color:blue;">If</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Dim</span> c <span style="color:blue;">As</span> Control</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>&nbsp;&nbsp;</span><span style="color:blue;">For</span> <span style="color:blue;">Each</span> c <span style="color:blue;">In</span> root.Controls</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Dim</span> t <span style="color:blue;">As</span> Control = FindControlRecursive(c, id)</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">If</span> <span style="color:blue;">Not</span> t <span style="color:blue;">Is</span> <span style="color:blue;">Nothing</span> <span style="color:blue;">Then</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Return</span> t</span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">End</span> <span style="color:blue;">If</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Next</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Return</span> <span style="color:blue;">Nothing</span></span></p><p class="MsoNormal" style="margin:0in 0in 0pt;"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">End</span> <span style="color:blue;">Function</span></span><span style="font-size:10pt;font-family:Arial;"></span></p><p>If you add the code above to the custom task as outlined in the earlier blog post, it should automatically zoom to the extent of all features found by the task.</p><p>&nbsp;</p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=189" width="1" height="1">";}i:2;a:11:{s:5:"title";s:31:"Customizing the Web Editor task";s:4:"link";s:108:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/archive/2007/05/02/Customizing-the-Web-Editor-task.aspx";s:7:"pubdate";s:29:"Wed, 02 May 2007 17:30:00 GMT";s:4:"guid";s:40:"b60b3f0a-e2bd-4be5-8a18-822c697649ab:184";s:2:"dc";a:1:{s:7:"creator";s:8:"Sterling";}s:5:"slash";a:1:{s:8:"comments";s:2:"17";}s:8:"comments";s:70:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/comments/184.aspx";s:3:"wfw";a:1:{s:10:"commentrss";s:79:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/commentrss.aspx?PostID=184";}s:11:"description";s:1334:"<p>&nbsp;James Goodrich, a developer on the .NET Web ADF team, contributed this information about some Service Pack 2 enhancements to the Editor task:</p><p>&nbsp;When the Editor task was released at version 9.2 of the Web ADF for the .NET Framework, a common question was &quot;How can I customize the Editor task?&quot;. Service Pack 2 provides an answer to this question. You can now customize the Editor task with custom tools and Editor Panels and we have added more events that allow you to hook into the Editor task. </p><p>In addition to these new customization options for developers, the Editor task has another key change at Service Pack 2 which it allows it to be configured with a pooled map service. You can edit non-versioned data using a pooled map service.</p><p>See the <a href="http://edndoc.esri.com/arcobjects/9.2/NET_Server_Doc/developer/ADF/control_editortask.htm" target="_blank">Editor Task control discussion</a> in the Developer Help for samples and instructions.</p><p><img alt="Customized Editor Task with added tools" border="1" height="370" src="http://serverx.esri.com/blogimages/may-2-2007/editor_new_tools.png" style="width:294px;height:370px;" title="Customized Editor Task with added tools" width="294" /></p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=184" width="1" height="1">";s:8:"category";s:18:"ADF.NETTasks92 SP2";s:7:"summary";s:1334:"<p>&nbsp;James Goodrich, a developer on the .NET Web ADF team, contributed this information about some Service Pack 2 enhancements to the Editor task:</p><p>&nbsp;When the Editor task was released at version 9.2 of the Web ADF for the .NET Framework, a common question was &quot;How can I customize the Editor task?&quot;. Service Pack 2 provides an answer to this question. You can now customize the Editor task with custom tools and Editor Panels and we have added more events that allow you to hook into the Editor task. </p><p>In addition to these new customization options for developers, the Editor task has another key change at Service Pack 2 which it allows it to be configured with a pooled map service. You can edit non-versioned data using a pooled map service.</p><p>See the <a href="http://edndoc.esri.com/arcobjects/9.2/NET_Server_Doc/developer/ADF/control_editortask.htm" target="_blank">Editor Task control discussion</a> in the Developer Help for samples and instructions.</p><p><img alt="Customized Editor Task with added tools" border="1" height="370" src="http://serverx.esri.com/blogimages/may-2-2007/editor_new_tools.png" style="width:294px;height:370px;" title="Customized Editor Task with added tools" width="294" /></p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=184" width="1" height="1">";}i:3;a:11:{s:5:"title";s:84:"How to track pending tiles and display a busy indicator in a Web mapping application";s:4:"link";s:161:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/archive/2007/05/01/How-to-track-pending-tiles-and-display-a-busy-indicator-in-a-Web-mapping-application.aspx";s:7:"pubdate";s:29:"Tue, 01 May 2007 19:05:00 GMT";s:4:"guid";s:40:"b60b3f0a-e2bd-4be5-8a18-822c697649ab:181";s:2:"dc";a:1:{s:7:"creator";s:8:"Sterling";}s:5:"slash";a:1:{s:8:"comments";s:1:"5";}s:8:"comments";s:70:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/comments/181.aspx";s:3:"wfw";a:1:{s:10:"commentrss";s:79:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/commentrss.aspx?PostID=181";}s:11:"description";s:22119:"<p>Rex Hansen contributed this post about how to use some of the enhanced JavaScript in Service Pack 2 to track pending tiles and display a busy indicator (such as an animated &quot;Loading&quot; graphic) over the Web ADF&#39;s Map control:&nbsp;</p>
<p>As a Web ADF developer working in an asynchronous communication environment, it is often beneficial to provide an end user with some indication that a user action is being processed.   Since most Web ADF applications are centered on working with a map, the ability of an end user to effectively interact with map contents is essential.   The Web ADF has the ability to asynchronously retrieve map data from multiple sources and consolidate it in a single map control.  In general, data sources often differ in the time it takes to respond to a request.  Since the Web ADF Map control is capable of rendering map data as it is returned to the browser, it&rsquo;s possible that some portion of data in the map is visible and accessible before another portion.  In this case, it will likely be important to let the end user know when the map control has finished loading map data from any and all sources.</p>

<p>To support this capability, 9.2 service pack 2 includes an enhanced Web ADF JavaScript Map object.   The JavaScript Map object has a set of &ldquo;event handlers&rdquo; on the pendingTiles property.  The pendingTiles property references an array of map image tiles to be rendered.  The array is updated when the map needs new image tiles based on the current extent.   Events on the pendingTiles property are listed below:</p>

<table>

<tr>
<td><strong>Event</strong></td>
                                                 
<td><strong>Description</strong></td>
</tr>

<tr>
<td>add_onRequestsPending</td>
                                                 
<td>              Triggered when the number of items in the pendingTiles array changes from 0 to a higher value</td>
</tr>

<tr>
<td>add_onRequestsRemove</td>
                                                 
<td>              Triggered when an item is removed from the pendingTiles array</td>
</tr>

<tr>
<td>add_onRequestsCompleted</td>
                                                 
<td>         Triggered when the number of item in the pendingTiles array changes to 0</td>
</tr>
</table>

<p>Use these handlers on the Map object&rsquo;s pendingTiles property to register a JavaScript function with the event.  For example:</p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';">map.pendingTiles.add_onRequestsPending(showBusyIndicator)</span><span style="font-size:10pt;font-family:Arial;"></span></p>

<p>where map is the Map object and showBusyIndicator is a JavaScript function to call when the number of items in the pendingTiles array changes from 0 to a higher value.</p>

<p>The JavaScript function showBusyIndicator may appear as follows.</p>


<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;">function</span><span style="font-size:10pt;font-family:'Courier New';"> showBusyIndicator(sender) {</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>showLayer(<span style="color:maroon;">&quot;BusyIndicator&quot;</span>);</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">if</span>
(sender!=<span style="color:blue;">null</span>) {</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>window.status = <span style="color:maroon;">&quot;Pending Tiles: &quot;</span> +
sender.pendingTiles.length; </span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}</span><span style="font-size:10pt;font-family:Arial;"></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span> </span></span><span style="font-size:10pt;font-family:Arial;"></span></p>
<p>The argument to the function is a reference to the JavaScript Map object.  This argument can be used to gain access to map properties, such as the number of map image tiles left in the pendingTiles array.  In this example, the number of pending tiles is output to the browser window&rsquo;s status bar.  If the argument is null, the pendingTiles array contains 0 items.  The Web ADF includes two convenient JavaScript functions to show or hide a layer (div) based on its id, named showLayer and hideLayer, respectively.  The functions are contained in the display_common.js file which is by default embedded with the Web ADF controls. In this example, the showLayer function is used to make the contents in the div tag with an id of &ldquo;BusyIndicator&rdquo; visible.</p><p><img alt="You can show the number of pending tiles and a &quot;Busy indicator&quot; in your Web application" border="1" height="593" hspace="5" src="http://serverx.esri.com/blogimages/MAY-1-2007/show_loading.jpg" title="You can show the number of pending tiles and a &quot;Busy indicator&quot; in your Web application" width="768" /><br />&nbsp;</p>

<p>Included below is a simple Web page with a MapResourceManager, Map, and a div tag containing an image.   The JavaScript Map object events are handled after the form to let the content of the form load before interacting with it.<br />
&nbsp;</p>
<p class="MsoNormal"><span style="background:yellow none repeat scroll 0% 50%;font-size:10pt;font-family:'Courier New';-moz-background-clip:-moz-initial;-moz-background-origin:-moz-initial;-moz-background-inline-policy:-moz-initial;">&lt;%</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">@</span><span style="font-size:10pt;font-family:'Courier New';"> <span style="color:maroon;">Page</span> <span style="color:red;">Language</span><span style="color:blue;">=&quot;C#&quot;</span>
<span style="color:red;">AutoEventWireup</span><span style="color:blue;">=&quot;true&quot;</span><span>&nbsp; </span><span style="color:red;">CodeFile</span><span style="color:blue;">=&quot;Default.aspx.cs&quot;</span> <span style="color:red;">Inherits</span><span style="color:blue;">=&quot;_Default&quot;</span> <span style="background:yellow none repeat scroll 0% 50%;-moz-background-clip:-moz-initial;-moz-background-origin:-moz-initial;-moz-background-inline-policy:-moz-initial;">%&gt;</span></span></p>

<p class="MsoNormal"><span style="background:yellow none repeat scroll 0% 50%;font-size:10pt;font-family:'Courier New';-moz-background-clip:-moz-initial;-moz-background-origin:-moz-initial;-moz-background-inline-policy:-moz-initial;">&lt;%</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">@</span><span style="font-size:10pt;font-family:'Courier New';"> <span style="color:maroon;">Register</span> <span style="color:red;">Assembly</span><span style="color:blue;">=&quot;ESRI.ArcGIS.ADF.Web.UI.WebControls,
Version=9.2.2.1350, Culture=neutral, PublicKeyToken=8fc3cc631e44ad86&quot;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;
</span><span style="color:red;">Namespace</span><span style="color:blue;">=&quot;ESRI.ArcGIS.ADF.Web.UI.WebControls&quot;</span>
<span style="color:red;">TagPrefix</span><span style="color:blue;">=&quot;esri&quot;</span>
<span style="background:yellow none repeat scroll 0% 50%;-moz-background-clip:-moz-initial;-moz-background-origin:-moz-initial;-moz-background-inline-policy:-moz-initial;">%&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;">&lt;!</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">DOCTYPE</span><span style="font-size:10pt;font-family:'Courier New';"> <span style="color:red;">html</span>
<span style="color:red;">PUBLIC</span> <span style="color:blue;">&quot;-//W3C//DTD
XHTML 1.0 Transitional//EN&quot;</span> <span style="color:blue;">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;">&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">html</span><span style="font-size:10pt;font-family:'Courier New';"> <span style="color:red;">xmlns</span><span style="color:blue;">=&quot;http://www.w3.org/1999/xhtml&quot;</span> <span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;">&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">head</span><span style="font-size:10pt;font-family:'Courier New';"> <span style="color:red;">runat</span><span style="color:blue;">=&quot;server&quot;&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;
</span><span style="color:blue;">&lt;</span><span style="color:maroon;">title</span><span style="color:blue;">&gt;</span>Untitled Page<span style="color:blue;">&lt;/</span><span style="color:maroon;">title</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;">&lt;/</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">head</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;">&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">body</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;
</span><span style="color:blue;">&lt;</span><span style="color:maroon;">form</span>
<span style="color:red;">id</span><span style="color:blue;">=&quot;form1&quot;</span>
<span style="color:red;">runat</span><span style="color:blue;">=&quot;server&quot;&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;
</span><span style="color:blue;">&lt;</span><span style="color:maroon;">div</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">&lt;</span><span style="color:maroon;">esri</span><span style="color:blue;">:</span><span style="color:maroon;">MapResourceManager</span> <span style="color:red;">ID</span><span style="color:blue;">=&quot;MapResourceManager1&quot;</span> <span style="color:red;">runat</span><span style="color:blue;">=&quot;server&quot;&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">&lt;</span><span style="color:maroon;">ResourceItems</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">&lt;/</span><span style="color:maroon;">ResourceItems</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">&lt;/</span><span style="color:maroon;">esri</span><span style="color:blue;">:</span><span style="color:maroon;">MapResourceManager</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">&lt;</span><span style="color:maroon;">esri</span><span style="color:blue;">:</span><span style="color:maroon;">Map</span> <span style="color:red;">ID</span><span style="color:blue;">=&quot;Map1&quot;</span> <span style="color:red;">runat</span><span style="color:blue;">=&quot;server&quot;</span> <span style="color:red;">Height</span><span style="color:blue;">=&quot;453px&quot;</span> <span style="color:red;">Width</span><span style="color:blue;">=&quot;556px&quot;</span> <span style="color:red;">MapResourceManager</span><span style="color:blue;">=&quot;MapResourceManager1&quot;&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">&lt;/</span><span style="color:maroon;">esri</span><span style="color:blue;">:</span><span style="color:maroon;">Map</span><span style="color:blue;">&gt;</span><span>&nbsp;&nbsp;&nbsp; </span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;
</span><span style="color:blue;">&lt;/</span><span style="color:maroon;">div</span><span style="color:blue;">&gt;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">&lt;</span><span style="color:maroon;">div</span> <span style="color:red;">id</span><span style="color:blue;">=&quot;BusyIndicator&quot;</span> <span style="color:red;">style</span><span style="color:blue;">=&quot;z-index: 1000; left: 25px; width: 100px; position:
absolute; top: 422px;height: 100px&quot;&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">&lt;</span><span style="color:maroon;">img</span> <span style="color:red;">src</span><span style="color:blue;">=&quot;images/CircleThickbox.gif&quot;</span> <span style="color:blue;">/&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">&lt;/</span><span style="color:maroon;">div</span><span style="color:blue;">&gt;</span> </span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;
</span><span style="color:blue;">&lt;/</span><span style="color:maroon;">form</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;
</span><span style="color:blue;">&lt;</span><span style="color:maroon;">script</span>
<span style="color:red;">language</span><span style="color:blue;">=&quot;javascript&quot;</span>
<span style="color:red;">type</span><span style="color:blue;">=&quot;text/javascript&quot;&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">function</span>
showBusyIndicator(sender) {</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>showLayer(<span style="color:maroon;">&quot;BusyIndicator&quot;</span>);</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">if</span>
(sender!=<span style="color:blue;">null</span>) {</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>window.status = <span style="color:maroon;">&quot;Pending Tiles: &quot;</span> +
sender.pendingTiles.length; </span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<span>&nbsp;
</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">function</span>
showPendingTiles(sender) {</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">if</span>
(sender!=<span style="color:blue;">null</span>) {</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>window.status = <span style="color:maroon;">&quot;Pending Tiles: &quot;</span> +
sender.pendingTiles.length; </span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<span>&nbsp;
</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">function</span>
hideBusyIndicator(sender) {</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>hideLayer(<span style="color:maroon;">&quot;BusyIndicator&quot;</span>);</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">if</span>
(sender!=<span style="color:blue;">null</span>) {</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>window.status = <span style="color:maroon;">&quot;&quot;</span>; </span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<span>&nbsp;
</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>} </span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:green;">// add busy
indicator functions to the map</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>map = Maps[<span style="color:maroon;">&quot;Map1&quot;</span>];</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>map.pendingTiles.add_onRequestsPending(showBusyIndicator);</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>map.pendingTiles.add_onRequestsRemove(showPendingTiles);</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>map.pendingTiles.add_onRequestsCompleted(hideBusyIndicator);<span>&nbsp;&nbsp;&nbsp; </span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;
</span><span style="color:blue;">&lt;/</span><span style="color:maroon;">script</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;">&lt;/</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">body</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;">&lt;/</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">html</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span><span style="font-size:10pt;font-family:Arial;"></span></p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=181" width="1" height="1">";s:8:"category";s:29:"ADF.NETCode SnippetAJAX92 SP2";s:7:"summary";s:22119:"<p>Rex Hansen contributed this post about how to use some of the enhanced JavaScript in Service Pack 2 to track pending tiles and display a busy indicator (such as an animated &quot;Loading&quot; graphic) over the Web ADF&#39;s Map control:&nbsp;</p>
<p>As a Web ADF developer working in an asynchronous communication environment, it is often beneficial to provide an end user with some indication that a user action is being processed.   Since most Web ADF applications are centered on working with a map, the ability of an end user to effectively interact with map contents is essential.   The Web ADF has the ability to asynchronously retrieve map data from multiple sources and consolidate it in a single map control.  In general, data sources often differ in the time it takes to respond to a request.  Since the Web ADF Map control is capable of rendering map data as it is returned to the browser, it&rsquo;s possible that some portion of data in the map is visible and accessible before another portion.  In this case, it will likely be important to let the end user know when the map control has finished loading map data from any and all sources.</p>

<p>To support this capability, 9.2 service pack 2 includes an enhanced Web ADF JavaScript Map object.   The JavaScript Map object has a set of &ldquo;event handlers&rdquo; on the pendingTiles property.  The pendingTiles property references an array of map image tiles to be rendered.  The array is updated when the map needs new image tiles based on the current extent.   Events on the pendingTiles property are listed below:</p>

<table>

<tr>
<td><strong>Event</strong></td>
                                                 
<td><strong>Description</strong></td>
</tr>

<tr>
<td>add_onRequestsPending</td>
                                                 
<td>              Triggered when the number of items in the pendingTiles array changes from 0 to a higher value</td>
</tr>

<tr>
<td>add_onRequestsRemove</td>
                                                 
<td>              Triggered when an item is removed from the pendingTiles array</td>
</tr>

<tr>
<td>add_onRequestsCompleted</td>
                                                 
<td>         Triggered when the number of item in the pendingTiles array changes to 0</td>
</tr>
</table>

<p>Use these handlers on the Map object&rsquo;s pendingTiles property to register a JavaScript function with the event.  For example:</p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';">map.pendingTiles.add_onRequestsPending(showBusyIndicator)</span><span style="font-size:10pt;font-family:Arial;"></span></p>

<p>where map is the Map object and showBusyIndicator is a JavaScript function to call when the number of items in the pendingTiles array changes from 0 to a higher value.</p>

<p>The JavaScript function showBusyIndicator may appear as follows.</p>


<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;">function</span><span style="font-size:10pt;font-family:'Courier New';"> showBusyIndicator(sender) {</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>showLayer(<span style="color:maroon;">&quot;BusyIndicator&quot;</span>);</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">if</span>
(sender!=<span style="color:blue;">null</span>) {</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>window.status = <span style="color:maroon;">&quot;Pending Tiles: &quot;</span> +
sender.pendingTiles.length; </span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}</span><span style="font-size:10pt;font-family:Arial;"></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span> </span></span><span style="font-size:10pt;font-family:Arial;"></span></p>
<p>The argument to the function is a reference to the JavaScript Map object.  This argument can be used to gain access to map properties, such as the number of map image tiles left in the pendingTiles array.  In this example, the number of pending tiles is output to the browser window&rsquo;s status bar.  If the argument is null, the pendingTiles array contains 0 items.  The Web ADF includes two convenient JavaScript functions to show or hide a layer (div) based on its id, named showLayer and hideLayer, respectively.  The functions are contained in the display_common.js file which is by default embedded with the Web ADF controls. In this example, the showLayer function is used to make the contents in the div tag with an id of &ldquo;BusyIndicator&rdquo; visible.</p><p><img alt="You can show the number of pending tiles and a &quot;Busy indicator&quot; in your Web application" border="1" height="593" hspace="5" src="http://serverx.esri.com/blogimages/MAY-1-2007/show_loading.jpg" title="You can show the number of pending tiles and a &quot;Busy indicator&quot; in your Web application" width="768" /><br />&nbsp;</p>

<p>Included below is a simple Web page with a MapResourceManager, Map, and a div tag containing an image.   The JavaScript Map object events are handled after the form to let the content of the form load before interacting with it.<br />
&nbsp;</p>
<p class="MsoNormal"><span style="background:yellow none repeat scroll 0% 50%;font-size:10pt;font-family:'Courier New';-moz-background-clip:-moz-initial;-moz-background-origin:-moz-initial;-moz-background-inline-policy:-moz-initial;">&lt;%</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">@</span><span style="font-size:10pt;font-family:'Courier New';"> <span style="color:maroon;">Page</span> <span style="color:red;">Language</span><span style="color:blue;">=&quot;C#&quot;</span>
<span style="color:red;">AutoEventWireup</span><span style="color:blue;">=&quot;true&quot;</span><span>&nbsp; </span><span style="color:red;">CodeFile</span><span style="color:blue;">=&quot;Default.aspx.cs&quot;</span> <span style="color:red;">Inherits</span><span style="color:blue;">=&quot;_Default&quot;</span> <span style="background:yellow none repeat scroll 0% 50%;-moz-background-clip:-moz-initial;-moz-background-origin:-moz-initial;-moz-background-inline-policy:-moz-initial;">%&gt;</span></span></p>

<p class="MsoNormal"><span style="background:yellow none repeat scroll 0% 50%;font-size:10pt;font-family:'Courier New';-moz-background-clip:-moz-initial;-moz-background-origin:-moz-initial;-moz-background-inline-policy:-moz-initial;">&lt;%</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">@</span><span style="font-size:10pt;font-family:'Courier New';"> <span style="color:maroon;">Register</span> <span style="color:red;">Assembly</span><span style="color:blue;">=&quot;ESRI.ArcGIS.ADF.Web.UI.WebControls,
Version=9.2.2.1350, Culture=neutral, PublicKeyToken=8fc3cc631e44ad86&quot;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;
</span><span style="color:red;">Namespace</span><span style="color:blue;">=&quot;ESRI.ArcGIS.ADF.Web.UI.WebControls&quot;</span>
<span style="color:red;">TagPrefix</span><span style="color:blue;">=&quot;esri&quot;</span>
<span style="background:yellow none repeat scroll 0% 50%;-moz-background-clip:-moz-initial;-moz-background-origin:-moz-initial;-moz-background-inline-policy:-moz-initial;">%&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;">&lt;!</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">DOCTYPE</span><span style="font-size:10pt;font-family:'Courier New';"> <span style="color:red;">html</span>
<span style="color:red;">PUBLIC</span> <span style="color:blue;">&quot;-//W3C//DTD
XHTML 1.0 Transitional//EN&quot;</span> <span style="color:blue;">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;">&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">html</span><span style="font-size:10pt;font-family:'Courier New';"> <span style="color:red;">xmlns</span><span style="color:blue;">=&quot;http://www.w3.org/1999/xhtml&quot;</span> <span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;">&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">head</span><span style="font-size:10pt;font-family:'Courier New';"> <span style="color:red;">runat</span><span style="color:blue;">=&quot;server&quot;&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;
</span><span style="color:blue;">&lt;</span><span style="color:maroon;">title</span><span style="color:blue;">&gt;</span>Untitled Page<span style="color:blue;">&lt;/</span><span style="color:maroon;">title</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;">&lt;/</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">head</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;">&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">body</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;
</span><span style="color:blue;">&lt;</span><span style="color:maroon;">form</span>
<span style="color:red;">id</span><span style="color:blue;">=&quot;form1&quot;</span>
<span style="color:red;">runat</span><span style="color:blue;">=&quot;server&quot;&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;
</span><span style="color:blue;">&lt;</span><span style="color:maroon;">div</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">&lt;</span><span style="color:maroon;">esri</span><span style="color:blue;">:</span><span style="color:maroon;">MapResourceManager</span> <span style="color:red;">ID</span><span style="color:blue;">=&quot;MapResourceManager1&quot;</span> <span style="color:red;">runat</span><span style="color:blue;">=&quot;server&quot;&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">&lt;</span><span style="color:maroon;">ResourceItems</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">&lt;/</span><span style="color:maroon;">ResourceItems</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">&lt;/</span><span style="color:maroon;">esri</span><span style="color:blue;">:</span><span style="color:maroon;">MapResourceManager</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">&lt;</span><span style="color:maroon;">esri</span><span style="color:blue;">:</span><span style="color:maroon;">Map</span> <span style="color:red;">ID</span><span style="color:blue;">=&quot;Map1&quot;</span> <span style="color:red;">runat</span><span style="color:blue;">=&quot;server&quot;</span> <span style="color:red;">Height</span><span style="color:blue;">=&quot;453px&quot;</span> <span style="color:red;">Width</span><span style="color:blue;">=&quot;556px&quot;</span> <span style="color:red;">MapResourceManager</span><span style="color:blue;">=&quot;MapResourceManager1&quot;&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">&lt;/</span><span style="color:maroon;">esri</span><span style="color:blue;">:</span><span style="color:maroon;">Map</span><span style="color:blue;">&gt;</span><span>&nbsp;&nbsp;&nbsp; </span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;
</span><span style="color:blue;">&lt;/</span><span style="color:maroon;">div</span><span style="color:blue;">&gt;</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">&lt;</span><span style="color:maroon;">div</span> <span style="color:red;">id</span><span style="color:blue;">=&quot;BusyIndicator&quot;</span> <span style="color:red;">style</span><span style="color:blue;">=&quot;z-index: 1000; left: 25px; width: 100px; position:
absolute; top: 422px;height: 100px&quot;&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">&lt;</span><span style="color:maroon;">img</span> <span style="color:red;">src</span><span style="color:blue;">=&quot;images/CircleThickbox.gif&quot;</span> <span style="color:blue;">/&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">&lt;/</span><span style="color:maroon;">div</span><span style="color:blue;">&gt;</span> </span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;
</span><span style="color:blue;">&lt;/</span><span style="color:maroon;">form</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;
</span><span style="color:blue;">&lt;</span><span style="color:maroon;">script</span>
<span style="color:red;">language</span><span style="color:blue;">=&quot;javascript&quot;</span>
<span style="color:red;">type</span><span style="color:blue;">=&quot;text/javascript&quot;&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">function</span>
showBusyIndicator(sender) {</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>showLayer(<span style="color:maroon;">&quot;BusyIndicator&quot;</span>);</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">if</span>
(sender!=<span style="color:blue;">null</span>) {</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>window.status = <span style="color:maroon;">&quot;Pending Tiles: &quot;</span> +
sender.pendingTiles.length; </span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<span>&nbsp;
</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">function</span>
showPendingTiles(sender) {</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">if</span>
(sender!=<span style="color:blue;">null</span>) {</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>window.status = <span style="color:maroon;">&quot;Pending Tiles: &quot;</span> +
sender.pendingTiles.length; </span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<span>&nbsp;
</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">function</span>
hideBusyIndicator(sender) {</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>hideLayer(<span style="color:maroon;">&quot;BusyIndicator&quot;</span>);</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">if</span>
(sender!=<span style="color:blue;">null</span>) {</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>window.status = <span style="color:maroon;">&quot;&quot;</span>; </span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<span>&nbsp;
</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>} </span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:green;">// add busy
indicator functions to the map</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>map = Maps[<span style="color:maroon;">&quot;Map1&quot;</span>];</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>map.pendingTiles.add_onRequestsPending(showBusyIndicator);</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>map.pendingTiles.add_onRequestsRemove(showPendingTiles);</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>map.pendingTiles.add_onRequestsCompleted(hideBusyIndicator);<span>&nbsp;&nbsp;&nbsp; </span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;
</span><span style="color:blue;">&lt;/</span><span style="color:maroon;">script</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;">&lt;/</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">body</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;">&lt;/</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">html</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span><span style="font-size:10pt;font-family:Arial;"></span></p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=181" width="1" height="1">";}i:4;a:11:{s:5:"title";s:88:"Configuring your server to display a "Data not available" tile for empty map cache areas";s:4:"link";s:175:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/archive/2007/04/12/Configuring-your-server-to-display-a-_2200_Data-not-available_2200_-tile-for-empty-map-cache-areas.aspx";s:7:"pubdate";s:29:"Thu, 12 Apr 2007 16:00:00 GMT";s:4:"guid";s:40:"b60b3f0a-e2bd-4be5-8a18-822c697649ab:177";s:2:"dc";a:1:{s:7:"creator";s:6:"Jeremy";}s:5:"slash";a:1:{s:8:"comments";s:1:"2";}s:8:"comments";s:70:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/comments/177.aspx";s:3:"wfw";a:1:{s:10:"commentrss";s:79:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/commentrss.aspx?PostID=177";}s:11:"description";s:3071:"<p>Sterling Quinn of the Server team contributed this post on configuring your web server to display custom tiles in areas where you have not yet completed your map cache.</p><p>&nbsp;</p>

<p><span style="font-size:10pt;font-family:Arial;">At the ESRI
Developer Summit, several of you asked how we displayed a &ldquo;Data not available&rdquo;
tile in empty areas of the ArcGIS Online services. This kind of tile can be
useful if someone pans to the edge of the map or navigates to an area that you
have not completed caching. Configuring your server to return a &ldquo;Data not available&rdquo;
tile can in some cases yield a better user experience than returning nothing.</span></p><p><span style="font-size:10pt;font-family:Arial;"></span><br />&nbsp;<img border="1" height="497" src="http://serverx.esri.com/blogimages/APR-12-2007/data_not_available_app.JPG" width="640" /></p><p>&nbsp;</p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">To display
the tile, you need to create a custom error response on your virtual cache
directory for HTTP Error 404: &ldquo;Not Found&rdquo;. Instead of an error message, the Web
server returns the tile.</span></p><p>&nbsp;<br /><span style="font-size:10pt;font-family:Arial;">Following
are steps for this process in IIS. Before you perform these steps, you should
put the blank or &ldquo;Data not available&rdquo; tile in your cache directory. The tile
you use must have the same dimensions and image format as the other tiles in
the cache. </span>



</p><span style="font-size:10pt;font-family:Arial;"></span><p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">1. In IIS
Manager, right-click the Virtual Directory for the specific cache and select
Properties. </span></p>

<p><img border="1" height="451" src="http://serverx.esri.com/blogimages/APR-12-2007/virtual_directory_properties.PNG" width="487" /></p><p>&nbsp;</p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">2. Click
the Custom Errors tab, scroll down, and select the 404 error code.</span></p><p class="MsoNormal">&nbsp;</p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">3. Click
the Edit button. In the URL box, specify the tile that IIS should return
whenever a tile is missing. It is important to use a URL and not just a path to
a file.</span></p><p class="MsoNormal">&nbsp;</p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">4. Click
OK. Your dialog should look similar to the one below. Click OK again to return
to IIS Manager.</span></p><p class="MsoNormal">&nbsp;</p>

<p><img border="1" height="447" src="http://serverx.esri.com/blogimages/APR-12-2007/custom_error_iis.PNG" width="472" />&nbsp;</p><p>You can download a sample, &quot;Map data not yet available&quot; tile (512 X 512 JPG) that you can use <a href="http://serverx.esri.com/blogimages/APR-12-2007/data_not_avail.jpg" target="_blank">here</a>.&nbsp;</p><p>&nbsp;</p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=177" width="1" height="1">";s:8:"category";s:12:"ADFMap Cache";s:7:"summary";s:3071:"<p>Sterling Quinn of the Server team contributed this post on configuring your web server to display custom tiles in areas where you have not yet completed your map cache.</p><p>&nbsp;</p>

<p><span style="font-size:10pt;font-family:Arial;">At the ESRI
Developer Summit, several of you asked how we displayed a &ldquo;Data not available&rdquo;
tile in empty areas of the ArcGIS Online services. This kind of tile can be
useful if someone pans to the edge of the map or navigates to an area that you
have not completed caching. Configuring your server to return a &ldquo;Data not available&rdquo;
tile can in some cases yield a better user experience than returning nothing.</span></p><p><span style="font-size:10pt;font-family:Arial;"></span><br />&nbsp;<img border="1" height="497" src="http://serverx.esri.com/blogimages/APR-12-2007/data_not_available_app.JPG" width="640" /></p><p>&nbsp;</p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">To display
the tile, you need to create a custom error response on your virtual cache
directory for HTTP Error 404: &ldquo;Not Found&rdquo;. Instead of an error message, the Web
server returns the tile.</span></p><p>&nbsp;<br /><span style="font-size:10pt;font-family:Arial;">Following
are steps for this process in IIS. Before you perform these steps, you should
put the blank or &ldquo;Data not available&rdquo; tile in your cache directory. The tile
you use must have the same dimensions and image format as the other tiles in
the cache. </span>



</p><span style="font-size:10pt;font-family:Arial;"></span><p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">1. In IIS
Manager, right-click the Virtual Directory for the specific cache and select
Properties. </span></p>

<p><img border="1" height="451" src="http://serverx.esri.com/blogimages/APR-12-2007/virtual_directory_properties.PNG" width="487" /></p><p>&nbsp;</p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">2. Click
the Custom Errors tab, scroll down, and select the 404 error code.</span></p><p class="MsoNormal">&nbsp;</p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">3. Click
the Edit button. In the URL box, specify the tile that IIS should return
whenever a tile is missing. It is important to use a URL and not just a path to
a file.</span></p><p class="MsoNormal">&nbsp;</p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">4. Click
OK. Your dialog should look similar to the one below. Click OK again to return
to IIS Manager.</span></p><p class="MsoNormal">&nbsp;</p>

<p><img border="1" height="447" src="http://serverx.esri.com/blogimages/APR-12-2007/custom_error_iis.PNG" width="472" />&nbsp;</p><p>You can download a sample, &quot;Map data not yet available&quot; tile (512 X 512 JPG) that you can use <a href="http://serverx.esri.com/blogimages/APR-12-2007/data_not_avail.jpg" target="_blank">here</a>.&nbsp;</p><p>&nbsp;</p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=177" width="1" height="1">";}i:5;a:11:{s:5:"title";s:35:"Using ASP.NET AJAX with the Web ADF";s:4:"link";s:112:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/archive/2007/04/02/Using-ASP.NET-AJAX-with-the-Web-ADF.aspx";s:7:"pubdate";s:29:"Mon, 02 Apr 2007 14:21:00 GMT";s:4:"guid";s:40:"b60b3f0a-e2bd-4be5-8a18-822c697649ab:166";s:2:"dc";a:1:{s:7:"creator";s:6:"Jeremy";}s:5:"slash";a:1:{s:8:"comments";s:1:"8";}s:8:"comments";s:70:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/comments/166.aspx";s:3:"wfw";a:1:{s:10:"commentrss";s:79:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/commentrss.aspx?PostID=166";}s:11:"description";s:13337:"<p>Bryan Baker of the .NET SDK team wrote this great article on integration ASP.NET AJAX with the Web ADF. &nbsp;&nbsp;</p><p>&nbsp;</p><p>
        Microsoft&#39;s new <a href="http://ajax.asp.net/" target="_blank">
        ASP.NET AJAX</a> enables developers to refresh portions of a Web page in a relatively
        simple way. To enable a control to use AJAX, the developer can put the control inside an
        <a href="http://ajax.asp.net/docs/overview/UpdatePanelOverview.aspx" target="_blank">
        UpdatePanel</a>. Then any events on the control are automatically handled via AJAX,
        and updates are passed back without refreshing the entire page. For example, a page
        might have two drop-down lists. The first lists types of features, such as Cities
        and Countries. When the user picks a value in the first drop-down, the second list
        is populated with new values corresponding to the first list&#39;s value, such as a
        list of cities.</p>
    
<p>
        Web ADF developers might want to use this approach to update the Map or other ADF
        controls. For example, when the user selects a city in the second drop-down list, the
        Map would zoom to the selected city. The problem is that ASP.NET AJAX was released after
        the 9.2 version of the Web ADF, and these new features were not available
        to be incorporated. Putting Web ADF controls inside an UpdatePanel will not work
        correctly, and is not supported. At 9.3 ESRI does plan to support Web ADF controls with ASP.NET
        AJAX.</p>
    
<p>
        You can
        have both Web ADF and ASP.NET AJAX controls on the page. The challenge is doing something like the
        example above, where controls in an UpdatePanel communicate with Web ADF controls.
        This post shows one approach for this. It turns out that it takes less than a dozen lines of code beyond what would have
        been needed had the Map been inside the UpdatePanel!
        You can follow along
        if you have installed Visual Studio 2005, the Web ADF, and the
        <a href="http://ajax.asp.net/" target="_blank">
        ASP.NET AJAX</a> 1.0 extensions.
    </p>
        
    <h3>Add the controls</h3>
    
<p>
        I first created a new website using the &quot;ASP.NET AJAX-Enabled Web Site&quot; template
        in Visual Studio. This creates a website and adds some extra items to support AJAX
        into both the Default.aspx page and the web.config file. You&#39;ll notice the ScriptManager
        control already added to the Default.aspx page, which is a non-visual control that
        handles the AJAX functionality. If you wanted to add ASP.NET AJAX into an existing
        page or website, you&#39;d need to add these same items that the template adds in. See
        the ASP.NET AJAX documentation for details.</p>
    
<p><img alt="ASP.NET AJAX and Web ADF controls on the page" height="441" src="http://serverx.esri.com/blogimages/APR-2-2007/AjaxADFDemoPage.gif" style="float:right;" width="350" />
        On the Default.aspx page, I added an UpdatePanel from the AJAX Extensions toolbox
        tab. I dragged two standard DropDownList controls into the UpdatePanel. The first
        DropDownList will display a list of layers. We could obtain these from the Web ADF
        controls on page startup, but I just added them manually for now to the Items property.
        I added two items: Cities and Countries. I also set the AutoPostBack property for
        both DropDownList controls to True. We need to do this to trigger a postback (actually
        a &quot;partial postback&quot; as ASP.NET AJAX calls it) when the user changes the selection.</p>
    
<p>
        Next I added a Map control and a MapResourceManager control from the ArcGIS Web
        Controls. Tip: having a drop-down list just above the map inteferes with the drop-down&#39;s
        functioning, so I put the map above the drop-down lists for this demo. I set the MapResourceManager property of the Map, and I added a resource
        item (map service) to the MapResourceManager as required to enable the map to display
        the service. In my case I used a world map with cities and countries. My simple
        page looks like the example here.</p>
        
    <h3>Update DropDownList items with ASP.NET AJAX</h3>
    
    
<p>When the user changes the first drop-down list, the second
    list should display a list of cities or countries. Using ASP.NET
    AJAX allows us to treat this like a standard postback event.
    Behind the scenes, ASP.NET AJAX handles the request using 
    AJAX methods rather than a full postback. Fortunately we don&#39;t
    have to deal with those details here.
    </p>
    
<p>I double-clicked on the DropDownList1 on the design page,
    which creates the method to handle the user selection in the
    code-behind page. We need to also fill the second DropDownList
    at startup, so we&#39;ll create a separate method and call it from
    both the drop-down&#39;s change method and the Page load method
    (which we can create by double-clicking on the design page).
    The UpdatePlaceList method fills the second DropDownList with 
    locations and coordinates that we&#39;ll use later for zooming the map.
    The code below is in VB; both C# and VB versions are available
    in the download link at the end of this post.</p>
    
    
<pre style="border:thin solid #999999;background-color:#eeeeee;font-family:Courier New;">Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load<br />    If Not Page.IsPostBack Then<br />        UpdatePlaceList()<br />    End If<br />End Sub<br /><br /><br />Protected Sub DropDownList1_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs)<br />    UpdatePlaceList()<br />End Sub<br /><br />Sub UpdatePlaceList()<br />    DropDownList2.Items.Clear()<br />    If DropDownList1.SelectedValue = &quot;Cities&quot; Then<br />        DropDownList2.Items.Add(New ListItem(&quot;Cape Town&quot;, &quot;17|-36|21|-32&quot;))<br />        DropDownList2.Items.Add(New ListItem(&quot;Oslo&quot;, &quot;9|58|13|62&quot;))<br />        DropDownList2.Items.Add(New ListItem(&quot;Washington&quot;, &quot;-79|37|-75|41&quot;))<br />    ElseIf DropDownList1.SelectedValue = &quot;Countries&quot; Then<br />        DropDownList2.Items.Add(New ListItem(&quot;Australia&quot;, &quot;112|-43|157|-10&quot;))<br />        DropDownList2.Items.Add(New ListItem(&quot;Brazil&quot;, &quot;-73|-33|-31|6&quot;))<br />        DropDownList2.Items.Add(New ListItem(&quot;China&quot;, &quot;75|16|136|55&quot;))<br />    End If<br /><br />End Sub<br /><br />    </pre>
    <h3>Zoom the Map when user selects a place</h3>
    
<p>When the user selects a place in the second DropDownList,
    we need to zoom the map to the coordinates of that place. 
    The challenge is to have the map&#39;s new extent be communicated
    to the client. Since the Map control cannot be in the UpdatePanel,
    we have to use another approach to communicate the results of
    the extent change to the Map.</p>
    
    
<p>The user selection in DropDownList2 triggers another
    partial postback. To set up the code for this, I double-clicked
    on DropDownList2 in design mode to create the method to handle
    the selected-index change. Inside this new method, I obtained
    the coordinates to zoom to from the DropDownList2.SelectedValue
    property. I parsed this value into an array of coordinate values,
    created a new envelope, and set the envelope&#39;s extent to
    these coordinates. I then set the Map&#39;s extent to this new
    envelope. This changes the map extent on the server. However,
    the client won&#39;t be aware of the change and won&#39;t obtain a new
    map unless we tell it to.</p>
    
    
<p>To get the client to update the map, we use a feature in
    ASP.NET AJAX to pass information to the client. The
    <a href="http://ajax.asp.net/docs/mref/M_System_Web_UI_ScriptManager_RegisterDataItem_2_b343477c.aspx" target="_blank">
    ScriptManager.RegisterDataItem</a> method adds information that
    will be passed back and evaluated on the client.</p>
    
    
<p>The Map&#39;s 
    <a href="http://edndoc.esri.com/arcobjects/9.2/net_api_ref/ADFWeb/ESRI.ArcGIS.ADF.Web.UI.WebControls~ESRI.ArcGIS.ADF.Web.UI.WebControls.CallbackResult.html" target="_blank">CallbackResults</a> will have the information required
    to update the map on the client. We pass this information to the client using the RegisterDataItem
        method. We&#39;ll see shortly how the client uses this information to update the map.</p>
    
    
<p>The code below obtains the callback results and registers them with the ASP.NET
    AJAX RegisterDataItem method. The 
     <a href="http://ajax.asp.net/docs/mref/P_System_Web_UI_ScriptManager_IsInAsyncPostBack.aspx" target="_blank">ScriptManager1.IsInAsyncPostBack</a>
    property ensures that we&#39;re doing an AJAX partial postback rather 
    than a full page postback.</p>
    
    
<pre style="border:thin solid #999999;background-color:#eeeeee;font-family:Courier New;">Protected Sub DropDownList2_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs)<br /><br />    Dim zoomString As String = DropDownList2.SelectedValue<br />    Dim coordArr() As String = zoomString.Split(&quot;|&quot;)<br /><br />    Dim new_extent As New ESRI.ArcGIS.ADF.Web.Geometry.Envelope<br />    new_extent.XMin = Double.Parse(coordArr(0))<br />    new_extent.YMin = Double.Parse(coordArr(1))<br />    new_extent.XMax = Double.Parse(coordArr(2))<br />    new_extent.YMax = Double.Parse(coordArr(3))<br />    Map1.Extent = new_extent<br /><br />    If ScriptManager1.IsInAsyncPostBack Then<br />        Dim callbackString As String = Map1.CallbackResults.ToString()<br />        ScriptManager1.RegisterDataItem(Map1, callbackString)<br />    End If<br /><br />End Sub<br /><br />    </pre>
    <h3>Handle the results on the client</h3>
    
    
<p>The results that we just registered with ScriptManager need
    to be handled on the client. ASP.NET AJAX has a 
    <a href="http://ajax.asp.net/docs/overview/AJAXClientEvents.aspx" target="_blank">handler approach</a>
     to process items passed back to the client.
    I inserted the code below into the .aspx page, at a point 
    below the asp:ScriptManager tag. This code registers a client-side handler, the PageLoadingHandler function,
        that will run when the page loads. This handler obtains the items registered on
        the server with RegisterDataItem, and checks
    whether any items for the map control
        are present. &nbsp;Since our server-side code added an item for the map, the code runs the next line.</p>
    
<p>
        This next line calls processCallbackResult and passes it the callback results we
        registered on the server. The processCallbackResult function is part of the Web ADF JavaScript library, which is automatically downloaded when the page uses Web
        ADF controls. The processCallbackResult function applies the callback results on
        the client by retrieving a new map. One caveat: the objects and methods in the
        client-side library can change, so this method could change with future versions
        of the Web ADF.</p>
    
    
<pre style="border:thin solid #999999;background-color:#eeeeee;font-family:Courier New;">&lt;asp:ScriptManager ID=&quot;ScriptManager1&quot; runat=&quot;server&quot; /&gt;<br /><br />&lt;script type=&quot;text/javascript&quot; language=&quot;javascript&quot;&gt;<br /><br />    Sys.WebForms.PageRequestManager.getInstance().add_pageLoading(PageLoadingHandler);<br /><br /><br />    function PageLoadingHandler(sender, args) {<br />        var dataItems = args.get_dataItems();<br />        if (dataItems[&#39;Map1&#39;] != null)<br />            processCallbackResult(dataItems[&#39;Map1&#39;], &#39;Map1&#39;);<br />    }<br /><br />&lt;/script&gt;<br /><br /></pre>
    
<p>
        With this code in place, when the user selects an item in the places drop-down list,
    the server sets the map extent to that place, and the map on the client
    gets notified to retrieve a new map.</p>
    
<p>
        Tip: be careful about dragging controls around the page in Design mode when script
        blocks are within the page body. Doing so caused Visual Studio to remove my script
        block, which disabled the map update since no handler was available on the client!</p>

    <h3>Conclusion</h3>
    
    
<p>We&#39;ve seen how you can use controls in an ASP.NET AJAX 
    UpdatePanel to control a Map in the Web ADF. Although it takes
    more work than if the Web ADF controls were embedded in the
    UpdatePanel, it is possible to do these tasks now. In our
    case it required less than a dozen lines of additional code compared to when
    the controls are all inside the UpdatePanel.
    </p>
    
<p><a href="http://serverx.esri.com/blogimages/APR-2-2007/AjaxADFDemo.zip" target="_blank">
    Download the code for this demo (includes C# and VB)</a></p><p>Try it out <a href="http://serverz.esri.com/ajaxadfdemo/AjaxADFDemoCS.aspx" target="_blank">here</a>.&nbsp;</p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=166" width="1" height="1">";s:8:"category";s:23:"ADF.NETCode SnippetAJAX";s:7:"summary";s:13337:"<p>Bryan Baker of the .NET SDK team wrote this great article on integration ASP.NET AJAX with the Web ADF. &nbsp;&nbsp;</p><p>&nbsp;</p><p>
        Microsoft&#39;s new <a href="http://ajax.asp.net/" target="_blank">
        ASP.NET AJAX</a> enables developers to refresh portions of a Web page in a relatively
        simple way. To enable a control to use AJAX, the developer can put the control inside an
        <a href="http://ajax.asp.net/docs/overview/UpdatePanelOverview.aspx" target="_blank">
        UpdatePanel</a>. Then any events on the control are automatically handled via AJAX,
        and updates are passed back without refreshing the entire page. For example, a page
        might have two drop-down lists. The first lists types of features, such as Cities
        and Countries. When the user picks a value in the first drop-down, the second list
        is populated with new values corresponding to the first list&#39;s value, such as a
        list of cities.</p>
    
<p>
        Web ADF developers might want to use this approach to update the Map or other ADF
        controls. For example, when the user selects a city in the second drop-down list, the
        Map would zoom to the selected city. The problem is that ASP.NET AJAX was released after
        the 9.2 version of the Web ADF, and these new features were not available
        to be incorporated. Putting Web ADF controls inside an UpdatePanel will not work
        correctly, and is not supported. At 9.3 ESRI does plan to support Web ADF controls with ASP.NET
        AJAX.</p>
    
<p>
        You can
        have both Web ADF and ASP.NET AJAX controls on the page. The challenge is doing something like the
        example above, where controls in an UpdatePanel communicate with Web ADF controls.
        This post shows one approach for this. It turns out that it takes less than a dozen lines of code beyond what would have
        been needed had the Map been inside the UpdatePanel!
        You can follow along
        if you have installed Visual Studio 2005, the Web ADF, and the
        <a href="http://ajax.asp.net/" target="_blank">
        ASP.NET AJAX</a> 1.0 extensions.
    </p>
        
    <h3>Add the controls</h3>
    
<p>
        I first created a new website using the &quot;ASP.NET AJAX-Enabled Web Site&quot; template
        in Visual Studio. This creates a website and adds some extra items to support AJAX
        into both the Default.aspx page and the web.config file. You&#39;ll notice the ScriptManager
        control already added to the Default.aspx page, which is a non-visual control that
        handles the AJAX functionality. If you wanted to add ASP.NET AJAX into an existing
        page or website, you&#39;d need to add these same items that the template adds in. See
        the ASP.NET AJAX documentation for details.</p>
    
<p><img alt="ASP.NET AJAX and Web ADF controls on the page" height="441" src="http://serverx.esri.com/blogimages/APR-2-2007/AjaxADFDemoPage.gif" style="float:right;" width="350" />
        On the Default.aspx page, I added an UpdatePanel from the AJAX Extensions toolbox
        tab. I dragged two standard DropDownList controls into the UpdatePanel. The first
        DropDownList will display a list of layers. We could obtain these from the Web ADF
        controls on page startup, but I just added them manually for now to the Items property.
        I added two items: Cities and Countries. I also set the AutoPostBack property for
        both DropDownList controls to True. We need to do this to trigger a postback (actually
        a &quot;partial postback&quot; as ASP.NET AJAX calls it) when the user changes the selection.</p>
    
<p>
        Next I added a Map control and a MapResourceManager control from the ArcGIS Web
        Controls. Tip: having a drop-down list just above the map inteferes with the drop-down&#39;s
        functioning, so I put the map above the drop-down lists for this demo. I set the MapResourceManager property of the Map, and I added a resource
        item (map service) to the MapResourceManager as required to enable the map to display
        the service. In my case I used a world map with cities and countries. My simple
        page looks like the example here.</p>
        
    <h3>Update DropDownList items with ASP.NET AJAX</h3>
    
    
<p>When the user changes the first drop-down list, the second
    list should display a list of cities or countries. Using ASP.NET
    AJAX allows us to treat this like a standard postback event.
    Behind the scenes, ASP.NET AJAX handles the request using 
    AJAX methods rather than a full postback. Fortunately we don&#39;t
    have to deal with those details here.
    </p>
    
<p>I double-clicked on the DropDownList1 on the design page,
    which creates the method to handle the user selection in the
    code-behind page. We need to also fill the second DropDownList
    at startup, so we&#39;ll create a separate method and call it from
    both the drop-down&#39;s change method and the Page load method
    (which we can create by double-clicking on the design page).
    The UpdatePlaceList method fills the second DropDownList with 
    locations and coordinates that we&#39;ll use later for zooming the map.
    The code below is in VB; both C# and VB versions are available
    in the download link at the end of this post.</p>
    
    
<pre style="border:thin solid #999999;background-color:#eeeeee;font-family:Courier New;">Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load<br />    If Not Page.IsPostBack Then<br />        UpdatePlaceList()<br />    End If<br />End Sub<br /><br /><br />Protected Sub DropDownList1_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs)<br />    UpdatePlaceList()<br />End Sub<br /><br />Sub UpdatePlaceList()<br />    DropDownList2.Items.Clear()<br />    If DropDownList1.SelectedValue = &quot;Cities&quot; Then<br />        DropDownList2.Items.Add(New ListItem(&quot;Cape Town&quot;, &quot;17|-36|21|-32&quot;))<br />        DropDownList2.Items.Add(New ListItem(&quot;Oslo&quot;, &quot;9|58|13|62&quot;))<br />        DropDownList2.Items.Add(New ListItem(&quot;Washington&quot;, &quot;-79|37|-75|41&quot;))<br />    ElseIf DropDownList1.SelectedValue = &quot;Countries&quot; Then<br />        DropDownList2.Items.Add(New ListItem(&quot;Australia&quot;, &quot;112|-43|157|-10&quot;))<br />        DropDownList2.Items.Add(New ListItem(&quot;Brazil&quot;, &quot;-73|-33|-31|6&quot;))<br />        DropDownList2.Items.Add(New ListItem(&quot;China&quot;, &quot;75|16|136|55&quot;))<br />    End If<br /><br />End Sub<br /><br />    </pre>
    <h3>Zoom the Map when user selects a place</h3>
    
<p>When the user selects a place in the second DropDownList,
    we need to zoom the map to the coordinates of that place. 
    The challenge is to have the map&#39;s new extent be communicated
    to the client. Since the Map control cannot be in the UpdatePanel,
    we have to use another approach to communicate the results of
    the extent change to the Map.</p>
    
    
<p>The user selection in DropDownList2 triggers another
    partial postback. To set up the code for this, I double-clicked
    on DropDownList2 in design mode to create the method to handle
    the selected-index change. Inside this new method, I obtained
    the coordinates to zoom to from the DropDownList2.SelectedValue
    property. I parsed this value into an array of coordinate values,
    created a new envelope, and set the envelope&#39;s extent to
    these coordinates. I then set the Map&#39;s extent to this new
    envelope. This changes the map extent on the server. However,
    the client won&#39;t be aware of the change and won&#39;t obtain a new
    map unless we tell it to.</p>
    
    
<p>To get the client to update the map, we use a feature in
    ASP.NET AJAX to pass information to the client. The
    <a href="http://ajax.asp.net/docs/mref/M_System_Web_UI_ScriptManager_RegisterDataItem_2_b343477c.aspx" target="_blank">
    ScriptManager.RegisterDataItem</a> method adds information that
    will be passed back and evaluated on the client.</p>
    
    
<p>The Map&#39;s 
    <a href="http://edndoc.esri.com/arcobjects/9.2/net_api_ref/ADFWeb/ESRI.ArcGIS.ADF.Web.UI.WebControls~ESRI.ArcGIS.ADF.Web.UI.WebControls.CallbackResult.html" target="_blank">CallbackResults</a> will have the information required
    to update the map on the client. We pass this information to the client using the RegisterDataItem
        method. We&#39;ll see shortly how the client uses this information to update the map.</p>
    
    
<p>The code below obtains the callback results and registers them with the ASP.NET
    AJAX RegisterDataItem method. The 
     <a href="http://ajax.asp.net/docs/mref/P_System_Web_UI_ScriptManager_IsInAsyncPostBack.aspx" target="_blank">ScriptManager1.IsInAsyncPostBack</a>
    property ensures that we&#39;re doing an AJAX partial postback rather 
    than a full page postback.</p>
    
    
<pre style="border:thin solid #999999;background-color:#eeeeee;font-family:Courier New;">Protected Sub DropDownList2_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs)<br /><br />    Dim zoomString As String = DropDownList2.SelectedValue<br />    Dim coordArr() As String = zoomString.Split(&quot;|&quot;)<br /><br />    Dim new_extent As New ESRI.ArcGIS.ADF.Web.Geometry.Envelope<br />    new_extent.XMin = Double.Parse(coordArr(0))<br />    new_extent.YMin = Double.Parse(coordArr(1))<br />    new_extent.XMax = Double.Parse(coordArr(2))<br />    new_extent.YMax = Double.Parse(coordArr(3))<br />    Map1.Extent = new_extent<br /><br />    If ScriptManager1.IsInAsyncPostBack Then<br />        Dim callbackString As String = Map1.CallbackResults.ToString()<br />        ScriptManager1.RegisterDataItem(Map1, callbackString)<br />    End If<br /><br />End Sub<br /><br />    </pre>
    <h3>Handle the results on the client</h3>
    
    
<p>The results that we just registered with ScriptManager need
    to be handled on the client. ASP.NET AJAX has a 
    <a href="http://ajax.asp.net/docs/overview/AJAXClientEvents.aspx" target="_blank">handler approach</a>
     to process items passed back to the client.
    I inserted the code below into the .aspx page, at a point 
    below the asp:ScriptManager tag. This code registers a client-side handler, the PageLoadingHandler function,
        that will run when the page loads. This handler obtains the items registered on
        the server with RegisterDataItem, and checks
    whether any items for the map control
        are present. &nbsp;Since our server-side code added an item for the map, the code runs the next line.</p>
    
<p>
        This next line calls processCallbackResult and passes it the callback results we
        registered on the server. The processCallbackResult function is part of the Web ADF JavaScript library, which is automatically downloaded when the page uses Web
        ADF controls. The processCallbackResult function applies the callback results on
        the client by retrieving a new map. One caveat: the objects and methods in the
        client-side library can change, so this method could change with future versions
        of the Web ADF.</p>
    
    
<pre style="border:thin solid #999999;background-color:#eeeeee;font-family:Courier New;">&lt;asp:ScriptManager ID=&quot;ScriptManager1&quot; runat=&quot;server&quot; /&gt;<br /><br />&lt;script type=&quot;text/javascript&quot; language=&quot;javascript&quot;&gt;<br /><br />    Sys.WebForms.PageRequestManager.getInstance().add_pageLoading(PageLoadingHandler);<br /><br /><br />    function PageLoadingHandler(sender, args) {<br />        var dataItems = args.get_dataItems();<br />        if (dataItems[&#39;Map1&#39;] != null)<br />            processCallbackResult(dataItems[&#39;Map1&#39;], &#39;Map1&#39;);<br />    }<br /><br />&lt;/script&gt;<br /><br /></pre>
    
<p>
        With this code in place, when the user selects an item in the places drop-down list,
    the server sets the map extent to that place, and the map on the client
    gets notified to retrieve a new map.</p>
    
<p>
        Tip: be careful about dragging controls around the page in Design mode when script
        blocks are within the page body. Doing so caused Visual Studio to remove my script
        block, which disabled the map update since no handler was available on the client!</p>

    <h3>Conclusion</h3>
    
    
<p>We&#39;ve seen how you can use controls in an ASP.NET AJAX 
    UpdatePanel to control a Map in the Web ADF. Although it takes
    more work than if the Web ADF controls were embedded in the
    UpdatePanel, it is possible to do these tasks now. In our
    case it required less than a dozen lines of additional code compared to when
    the controls are all inside the UpdatePanel.
    </p>
    
<p><a href="http://serverx.esri.com/blogimages/APR-2-2007/AjaxADFDemo.zip" target="_blank">
    Download the code for this demo (includes C# and VB)</a></p><p>Try it out <a href="http://serverz.esri.com/ajaxadfdemo/AjaxADFDemoCS.aspx" target="_blank">here</a>.&nbsp;</p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=166" width="1" height="1">";}i:6;a:11:{s:5:"title";s:37:"Using custom logos in ArcGIS Explorer";s:4:"link";s:114:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/archive/2007/03/19/Using-custom-logos-in-ArcGIS-Explorer.aspx";s:7:"pubdate";s:29:"Mon, 19 Mar 2007 17:00:00 GMT";s:4:"guid";s:40:"b60b3f0a-e2bd-4be5-8a18-822c697649ab:162";s:2:"dc";a:1:{s:7:"creator";s:6:"Jeremy";}s:5:"slash";a:1:{s:8:"comments";s:1:"3";}s:8:"comments";s:70:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/comments/162.aspx";s:3:"wfw";a:1:{s:10:"commentrss";s:79:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/commentrss.aspx?PostID=162";}s:11:"description";s:16057:"<p>Mark Bockenhauer of the ArcGIS Explorer team contributed the following post on how to display a custom logo in ArcGIS Explorer.</p><p>&nbsp;</p><p><img border="1" height="450" src="http://serverx.esri.com/blogimages/MAR-15-2007/customlogo.PNG" width="616" />&nbsp;</p><p>It is common with paper maps to display a logo perhaps a company logo or government seal.&nbsp; The same can be done on digital ArcGIS Explorer maps by leveraging the Home Server.<br /><br />The Home Server is a user defined server that ArcGIS Explorer connects to when it starts up.&nbsp; Typically ArcGIS Explorer checks the home server to see if its version is up to date and to get the default map to display.&nbsp; It does this by referencing information in the &lsquo;explorer&rsquo; folder on the server. This folder is part of the ArcGIS Server install.<br /><br />Download the <a href="http://serverx.esri.com/blogimages/MAR-15-2007/explorer.zip" target="_blank">explorer.zip</a> folder before continuing with this example.&nbsp; This folder contains example resources for all of the ArcGIS Server Home Server settings that can be applied to ArcGIS Explorer.<br /><br />Once you have downloaded the file unzip it and place it in the appropriate location on your server. <br /></p><p>Default Locations:<br />.NET&nbsp; C:\Inetpub\wwwroot\ArcGIS\Explorer<br />JAVA&nbsp;&nbsp; C:\Program Files\ArcGIS\java\web_output\Explorer<br /><br /><br />To display your own custom logo on ArcGIS Explorer applications that specify your server as their home server you will need to modify the following files:<br /><br />explorer\config\e2config.xml<br />explorer\skins\example_skin_file.xml<br /><br />In the e2config.xml file the &lt;skins&gt; section is commented out (highlighted in bold below).&nbsp; Un-comment this section by removing &ldquo;&lt;!- -&ldquo; prior to the section and &ldquo;- -&gt;&rdquo; following the section.&nbsp; You will also want type in the appropriate URL for the &lt;skinurl&gt; tag.&nbsp;</p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;">&lt;?</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">xml</span><span style="font-size:10pt;font-family:'Courier New';color:blue;"> </span><span style="font-size:10pt;font-family:'Courier New';color:red;">version</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">=</span><span style="font-size:10pt;font-family:'Courier New';">&quot;<span style="color:blue;">1.0</span>&quot;<span style="color:blue;"> </span><span style="color:red;">encoding</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">UTF-8</span>&quot;<span style="color:blue;"> </span><span style="color:red;">standalone</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">yes</span>&quot;<span style="color:blue;">?&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;">&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">E2Config</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">
</span><span style="font-size:10pt;font-family:'Courier New';color:red;">xmlns:xsd</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">=</span><span style="font-size:10pt;font-family:'Courier New';">&quot;<span style="color:blue;">http://www.w3.org/2001/XMLSchema</span>&quot;<span style="color:blue;"> </span><span style="color:red;">xmlns:xsi</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">http://www.w3.org/2001/XMLSchema-instance</span>&quot;<span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;"><span>&nbsp;
</span></span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">Permissions</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">AddData</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span><span style="font-size:10pt;font-family:'Courier New';">true<span style="color:blue;">&lt;/</span><span style="color:maroon;">AddData</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">OpenDocument</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span><span style="font-size:10pt;font-family:'Courier New';">true<span style="color:blue;">&lt;/</span><span style="color:maroon;">OpenDocument</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">SaveDocument</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span><span style="font-size:10pt;font-family:'Courier New';">true<span style="color:blue;">&lt;/</span><span style="color:maroon;">SaveDocument</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">ManageLayers</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span><span style="font-size:10pt;font-family:'Courier New';">true<span style="color:blue;">&lt;/</span><span style="color:maroon;">ManageLayers</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">ManageTasks</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span><span style="font-size:10pt;font-family:'Courier New';">true<span style="color:blue;">&lt;/</span><span style="color:maroon;">ManageTasks</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">DisplayOptions</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span><span style="font-size:10pt;font-family:'Courier New';">true<span style="color:blue;">&lt;/</span><span style="color:maroon;">DisplayOptions</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">PerformVersionCheck</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span><span style="font-size:10pt;font-family:'Courier New';">true<span style="color:blue;">&lt;/</span><span style="color:maroon;">PerformVersionCheck</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">TaskDownloadInternet</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span><span style="font-size:10pt;font-family:'Courier New';">true<span style="color:blue;">&lt;/</span><span style="color:maroon;">TaskDownloadInternet</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">TaskDownloadLocalIntranet</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span><span style="font-size:10pt;font-family:'Courier New';">true<span style="color:blue;">&lt;/</span><span style="color:maroon;">TaskDownloadLocalIntranet</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">TaskDownloadTrustedSites</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span><span style="font-size:10pt;font-family:'Courier New';">true<span style="color:blue;">&lt;/</span><span style="color:maroon;">TaskDownloadTrustedSites</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;"><span>&nbsp; </span>&lt;/</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">Permissions</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;"><span>&nbsp; </span>&lt;!--</span><span style="font-size:10pt;font-family:'Courier New';color:green;"> To use a server skin
file, uncomment the &#39;skins&#39; tags below by removing the exclamation point and
hyphens.</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:green;"><span>&nbsp;&nbsp;&nbsp;&nbsp; </span>Type your server name into the
skin url. The server install contains an example skin file and resources </span><span style="font-size:10pt;font-family:'Courier New';color:blue;">--&gt;</span></p>



<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;">&nbsp;<span>&nbsp; </span>&lt;!--</span><span style="font-size:10pt;font-family:'Courier New';color:green;">&lt;skins&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:green;"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>&lt;skinfile&gt;example_skin_file.xml&lt;/skinfile&gt; </span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:green;"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>&lt;skinurl&gt;http://TYPE_IN_YOUR_SERVER_NAME_HERE/arcgis/explorer/skins/&lt;/skinurl&gt;
</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:green;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;/skins&gt;</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">--&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;">&lt;/</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">E2Config</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span></p><p class="MsoNormal">&nbsp;</p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;"></span><span style="font-size:10pt;font-family:Arial;"></span></p>

<p class="MsoNormal">Next we will modify the skin file referenced in the &lt;skins&gt; tags to display the desired logo. In the explorer\skins\example_skin_file you will see that all of the lines are commented out.&nbsp; You will also notice that there are two sections to the file.&nbsp; The tags in the upper section all control the ArcGIS Explorer color scheme.&nbsp; The tags in the lower section pertain to ArcGIS Explorer graphic elements.&nbsp; Un-comment this section.<br />&nbsp;<br /><span style="font-size:10pt;font-family:'Courier New';color:blue;">&lt;!--</span><span style="font-size:10pt;font-family:'Courier New';color:green;"> </span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:green;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;HUDFont
type=&quot;Font&quot;&gt;Verdana&lt;/HUDFont&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:green;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;ApplicationTitle
type=&quot;Application&quot;&gt;ExampleApplicationTitle&lt;/ApplicationTitle&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:green;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;DocumentPrefix
type=&quot;Application&quot;&gt;ExampleDocumentPrefix&lt;/DocumentPrefix&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:green;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;SplashScreenBitmap
type=&quot;Application&quot;&gt;example_splash_screen.png&lt;/SplashScreenBitmap&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:green;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;SplashMessageCoords
type=&quot;Application&quot;&gt;15,200&lt;/SplashMessageCoords&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:green;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;DisplayCustomLogo
type=&quot;Application&quot;&gt;example_custom_logo.png&lt;/DisplayCustomLogo&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:green;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;DisplayCustomLogoMaskColor
type=&quot;Application&quot;&gt;RGB(255, 0,
255)&lt;/DisplayCustomLogoMaskColor&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:green;"><span>&nbsp;&nbsp;&nbsp;
</span>&lt;DisplayCustomLogoTransparency
type=&quot;Application&quot;&gt;75&lt;/DisplayCustomLogoTransparency&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:green;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;NorthArrowBitmap
type=&quot;Application&quot;&gt;example_north_arrow.png&lt;/NorthArrowBitmap&gt;
</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:green;"><span>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style="font-size:10pt;font-family:'Courier New';color:blue;">--&gt;</span><span style="font-size:10pt;font-family:Arial;"></span></p>

<p>At this point if you start ArcGIS Explorer and specify your server as the Home Server, you will see the Example Custom Logo.<br /><br />Setting the Home Server to your server.<br />1.&nbsp;&nbsp;&nbsp; In Explorer, click File &gt; Set Home Server <br />2.&nbsp;&nbsp;&nbsp; Click &ldquo;Connect to the Home Server located at&rdquo;, then enter the URL to your server in the format http://&lt;server name&gt;/&lt;instance name&gt; (Example: http://myServer/ArcGIS) <br />3.&nbsp;&nbsp;&nbsp; Click the Test button to test the connection, or click OK to return to Explorer. <br />ArcGIS Explorer will restart and apply the Home Server Settings.<br /><br />To use your own logo you will want to change the .PNG referenced in the &lt;DisplayCustomLogo&gt; tag.&nbsp; Your .PNG file should be located in the skins folder with the skin file.<br /><br />Notice that the example logo makes use of the &lt;DisplayCustomLogoMaskColor&gt; to display a rectangular logo.<br /><br />Actual .PNG on the left, what is displayed on the Right.</p><p><img border="1" height="260" src="http://serverx.esri.com/blogimages/MAR-15-2007/pink.PNG" width="260" />&nbsp;&nbsp; <img border="1" height="39" src="http://serverx.esri.com/blogimages/MAR-15-2007/newlogo.PNG" width="127" /><br /></p><p>For more information on making your server the ArcGIS Explorer Home Server see &quot;Making your system an ArcGIS Explorer Home Server&quot; under &quot;Administering the Server&quot; at:&nbsp; <a href="http://webhelp.esri.com/arcgisserver/9.2/dotNet/" target="_blank">http://webhelp.esri.com/arcgisserver/9.2/dotNet/</a>&nbsp;&nbsp; <br />&nbsp;</p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=162" width="1" height="1">";s:8:"category";s:15:"ArcGIS Explorer";s:7:"summary";s:16057:"<p>Mark Bockenhauer of the ArcGIS Explorer team contributed the following post on how to display a custom logo in ArcGIS Explorer.</p><p>&nbsp;</p><p><img border="1" height="450" src="http://serverx.esri.com/blogimages/MAR-15-2007/customlogo.PNG" width="616" />&nbsp;</p><p>It is common with paper maps to display a logo perhaps a company logo or government seal.&nbsp; The same can be done on digital ArcGIS Explorer maps by leveraging the Home Server.<br /><br />The Home Server is a user defined server that ArcGIS Explorer connects to when it starts up.&nbsp; Typically ArcGIS Explorer checks the home server to see if its version is up to date and to get the default map to display.&nbsp; It does this by referencing information in the &lsquo;explorer&rsquo; folder on the server. This folder is part of the ArcGIS Server install.<br /><br />Download the <a href="http://serverx.esri.com/blogimages/MAR-15-2007/explorer.zip" target="_blank">explorer.zip</a> folder before continuing with this example.&nbsp; This folder contains example resources for all of the ArcGIS Server Home Server settings that can be applied to ArcGIS Explorer.<br /><br />Once you have downloaded the file unzip it and place it in the appropriate location on your server. <br /></p><p>Default Locations:<br />.NET&nbsp; C:\Inetpub\wwwroot\ArcGIS\Explorer<br />JAVA&nbsp;&nbsp; C:\Program Files\ArcGIS\java\web_output\Explorer<br /><br /><br />To display your own custom logo on ArcGIS Explorer applications that specify your server as their home server you will need to modify the following files:<br /><br />explorer\config\e2config.xml<br />explorer\skins\example_skin_file.xml<br /><br />In the e2config.xml file the &lt;skins&gt; section is commented out (highlighted in bold below).&nbsp; Un-comment this section by removing &ldquo;&lt;!- -&ldquo; prior to the section and &ldquo;- -&gt;&rdquo; following the section.&nbsp; You will also want type in the appropriate URL for the &lt;skinurl&gt; tag.&nbsp;</p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;">&lt;?</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">xml</span><span style="font-size:10pt;font-family:'Courier New';color:blue;"> </span><span style="font-size:10pt;font-family:'Courier New';color:red;">version</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">=</span><span style="font-size:10pt;font-family:'Courier New';">&quot;<span style="color:blue;">1.0</span>&quot;<span style="color:blue;"> </span><span style="color:red;">encoding</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">UTF-8</span>&quot;<span style="color:blue;"> </span><span style="color:red;">standalone</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">yes</span>&quot;<span style="color:blue;">?&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;">&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">E2Config</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">
</span><span style="font-size:10pt;font-family:'Courier New';color:red;">xmlns:xsd</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">=</span><span style="font-size:10pt;font-family:'Courier New';">&quot;<span style="color:blue;">http://www.w3.org/2001/XMLSchema</span>&quot;<span style="color:blue;"> </span><span style="color:red;">xmlns:xsi</span><span style="color:blue;">=</span>&quot;<span style="color:blue;">http://www.w3.org/2001/XMLSchema-instance</span>&quot;<span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;"><span>&nbsp;
</span></span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">Permissions</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">AddData</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span><span style="font-size:10pt;font-family:'Courier New';">true<span style="color:blue;">&lt;/</span><span style="color:maroon;">AddData</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">OpenDocument</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span><span style="font-size:10pt;font-family:'Courier New';">true<span style="color:blue;">&lt;/</span><span style="color:maroon;">OpenDocument</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">SaveDocument</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span><span style="font-size:10pt;font-family:'Courier New';">true<span style="color:blue;">&lt;/</span><span style="color:maroon;">SaveDocument</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">ManageLayers</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span><span style="font-size:10pt;font-family:'Courier New';">true<span style="color:blue;">&lt;/</span><span style="color:maroon;">ManageLayers</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">ManageTasks</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span><span style="font-size:10pt;font-family:'Courier New';">true<span style="color:blue;">&lt;/</span><span style="color:maroon;">ManageTasks</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">DisplayOptions</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span><span style="font-size:10pt;font-family:'Courier New';">true<span style="color:blue;">&lt;/</span><span style="color:maroon;">DisplayOptions</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">PerformVersionCheck</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span><span style="font-size:10pt;font-family:'Courier New';">true<span style="color:blue;">&lt;/</span><span style="color:maroon;">PerformVersionCheck</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">TaskDownloadInternet</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span><span style="font-size:10pt;font-family:'Courier New';">true<span style="color:blue;">&lt;/</span><span style="color:maroon;">TaskDownloadInternet</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">TaskDownloadLocalIntranet</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span><span style="font-size:10pt;font-family:'Courier New';">true<span style="color:blue;">&lt;/</span><span style="color:maroon;">TaskDownloadLocalIntranet</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">TaskDownloadTrustedSites</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span><span style="font-size:10pt;font-family:'Courier New';">true<span style="color:blue;">&lt;/</span><span style="color:maroon;">TaskDownloadTrustedSites</span><span style="color:blue;">&gt;</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;"><span>&nbsp; </span>&lt;/</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">Permissions</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;"><span>&nbsp; </span>&lt;!--</span><span style="font-size:10pt;font-family:'Courier New';color:green;"> To use a server skin
file, uncomment the &#39;skins&#39; tags below by removing the exclamation point and
hyphens.</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:green;"><span>&nbsp;&nbsp;&nbsp;&nbsp; </span>Type your server name into the
skin url. The server install contains an example skin file and resources </span><span style="font-size:10pt;font-family:'Courier New';color:blue;">--&gt;</span></p>



<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;">&nbsp;<span>&nbsp; </span>&lt;!--</span><span style="font-size:10pt;font-family:'Courier New';color:green;">&lt;skins&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:green;"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>&lt;skinfile&gt;example_skin_file.xml&lt;/skinfile&gt; </span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:green;"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>&lt;skinurl&gt;http://TYPE_IN_YOUR_SERVER_NAME_HERE/arcgis/explorer/skins/&lt;/skinurl&gt;
</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:green;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;/skins&gt;</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">--&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;">&lt;/</span><span style="font-size:10pt;font-family:'Courier New';color:maroon;">E2Config</span><span style="font-size:10pt;font-family:'Courier New';color:blue;">&gt;</span></p><p class="MsoNormal">&nbsp;</p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;"></span><span style="font-size:10pt;font-family:Arial;"></span></p>

<p class="MsoNormal">Next we will modify the skin file referenced in the &lt;skins&gt; tags to display the desired logo. In the explorer\skins\example_skin_file you will see that all of the lines are commented out.&nbsp; You will also notice that there are two sections to the file.&nbsp; The tags in the upper section all control the ArcGIS Explorer color scheme.&nbsp; The tags in the lower section pertain to ArcGIS Explorer graphic elements.&nbsp; Un-comment this section.<br />&nbsp;<br /><span style="font-size:10pt;font-family:'Courier New';color:blue;">&lt;!--</span><span style="font-size:10pt;font-family:'Courier New';color:green;"> </span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:green;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;HUDFont
type=&quot;Font&quot;&gt;Verdana&lt;/HUDFont&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:green;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;ApplicationTitle
type=&quot;Application&quot;&gt;ExampleApplicationTitle&lt;/ApplicationTitle&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:green;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;DocumentPrefix
type=&quot;Application&quot;&gt;ExampleDocumentPrefix&lt;/DocumentPrefix&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:green;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;SplashScreenBitmap
type=&quot;Application&quot;&gt;example_splash_screen.png&lt;/SplashScreenBitmap&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:green;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;SplashMessageCoords
type=&quot;Application&quot;&gt;15,200&lt;/SplashMessageCoords&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:green;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;DisplayCustomLogo
type=&quot;Application&quot;&gt;example_custom_logo.png&lt;/DisplayCustomLogo&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:green;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;DisplayCustomLogoMaskColor
type=&quot;Application&quot;&gt;RGB(255, 0,
255)&lt;/DisplayCustomLogoMaskColor&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:green;"><span>&nbsp;&nbsp;&nbsp;
</span>&lt;DisplayCustomLogoTransparency
type=&quot;Application&quot;&gt;75&lt;/DisplayCustomLogoTransparency&gt;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:green;"><span>&nbsp;&nbsp;&nbsp; </span>&lt;NorthArrowBitmap
type=&quot;Application&quot;&gt;example_north_arrow.png&lt;/NorthArrowBitmap&gt;
</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:green;"><span>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style="font-size:10pt;font-family:'Courier New';color:blue;">--&gt;</span><span style="font-size:10pt;font-family:Arial;"></span></p>

<p>At this point if you start ArcGIS Explorer and specify your server as the Home Server, you will see the Example Custom Logo.<br /><br />Setting the Home Server to your server.<br />1.&nbsp;&nbsp;&nbsp; In Explorer, click File &gt; Set Home Server <br />2.&nbsp;&nbsp;&nbsp; Click &ldquo;Connect to the Home Server located at&rdquo;, then enter the URL to your server in the format http://&lt;server name&gt;/&lt;instance name&gt; (Example: http://myServer/ArcGIS) <br />3.&nbsp;&nbsp;&nbsp; Click the Test button to test the connection, or click OK to return to Explorer. <br />ArcGIS Explorer will restart and apply the Home Server Settings.<br /><br />To use your own logo you will want to change the .PNG referenced in the &lt;DisplayCustomLogo&gt; tag.&nbsp; Your .PNG file should be located in the skins folder with the skin file.<br /><br />Notice that the example logo makes use of the &lt;DisplayCustomLogoMaskColor&gt; to display a rectangular logo.<br /><br />Actual .PNG on the left, what is displayed on the Right.</p><p><img border="1" height="260" src="http://serverx.esri.com/blogimages/MAR-15-2007/pink.PNG" width="260" />&nbsp;&nbsp; <img border="1" height="39" src="http://serverx.esri.com/blogimages/MAR-15-2007/newlogo.PNG" width="127" /><br /></p><p>For more information on making your server the ArcGIS Explorer Home Server see &quot;Making your system an ArcGIS Explorer Home Server&quot; under &quot;Administering the Server&quot; at:&nbsp; <a href="http://webhelp.esri.com/arcgisserver/9.2/dotNet/" target="_blank">http://webhelp.esri.com/arcgisserver/9.2/dotNet/</a>&nbsp;&nbsp; <br />&nbsp;</p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=162" width="1" height="1">";}i:7;a:11:{s:5:"title";s:47:"Working with the Web ADF components at run-time";s:4:"link";s:129:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/archive/2007/02/12/Working-with-the-Web-ADF-components-at-run_2D00_time.aspx";s:7:"pubdate";s:29:"Mon, 12 Feb 2007 19:27:00 GMT";s:4:"guid";s:40:"b60b3f0a-e2bd-4be5-8a18-822c697649ab:102";s:2:"dc";a:1:{s:7:"creator";s:6:"Jeremy";}s:5:"slash";a:1:{s:8:"comments";s:1:"0";}s:8:"comments";s:70:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/comments/102.aspx";s:3:"wfw";a:1:{s:10:"commentrss";s:79:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/commentrss.aspx?PostID=102";}s:11:"description";s:24551:"<p>Rex Hansen of the .NET SDK team wrote this very useful post on accessing the Web ADF components at run-time. <br /></p><p>&nbsp;</p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">When creating a custom task, you may often find it necessary to access Web ADF components (controls, resources, etc.) that share the same Web page with the task.&nbsp; How the task will be used will dictate the technique for accessing Web ADF components.&nbsp; There are three situations to consider:</span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">1) Task run-time</span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">2) Visual Studio design-time</span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">3) Manager run-time</span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">&ldquo;Task run-time&rdquo; defines the technique for working with Web ADF components in a Web application at run-time.&nbsp; &ldquo;Visual Studio design-time&rdquo; uses custom verbs on the custom task control to access to Web ADF components during task configuration in Visual Studio.&nbsp; &ldquo;Manager run-time&rdquo; defines a situation where a custom task must utilize Web ADF components when configuring the task in the Manager Web application.&nbsp;&nbsp; </span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">This discussion and walkthrough will focus on working with Web ADF resources in a custom task at run-time (situation 1).&nbsp; The custom task will do the following:</span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;"></span></p><ul style="margin-top:0in;"><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">Extend FloatingPanelTask</span> <span style="font-size:10pt;font-family:Arial;"></span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">Expose a public property to buddy the task with a MapResourceManager </span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">Use a DropDownList control to list the map resources in the MapResourceManager control</span> <span style="font-size:10pt;font-family:Arial;"></span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">Populate the DropDownList upon initial load of the task</span> <span style="font-size:10pt;font-family:Arial;"></span></li></ul><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">1) Create a custom task control that extends FloatingPanelTask.&nbsp; As a composite control, the custom task will contain multiple controls.&nbsp; Define two private member variables to store references to controls that will be used in the custom task.&nbsp; In this case, a Label will be used to display the MapResourceManager id and a DropDownList will display a list of map resources.</span></p><p class="MsoNormal"><span style="font-size:10pt;color:navy;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">namespace TestTask_CSharp</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">{</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp; public class TestTask_Demo : FloatingPanelTask</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp; {</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private Label label = null;</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private DropDownList dropDownListResources = null;</span></p><p class="MsoNormal"><span style="font-size:10pt;color:navy;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">2) Create a property on the custom task control to store a reference to the unique id of a MapResourceManager control.&nbsp; The property will be maintained in state for the duration of a user session.&nbsp; The property can be set declaratively in the aspx page using the MapResourceManagerID attribute (source view).&nbsp; </span></p><p class="MsoNormal"><span style="font-size:10pt;color:navy;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [Browsable(true)]</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [DefaultValue(&quot;&quot;)]</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [PersistenceMode(PersistenceMode.Attribute)]</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public string MapResourceManagerID</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; get</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; object obj = StateManager.GetProperty(&quot;mapResourceManagerID&quot;);</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (obj == null) return &quot;&quot;;</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return obj as string;</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;}</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; StateManager.SetProperty(&quot;mapResourceManagerID&quot;, value);</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><span style="font-size:10pt;color:navy;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:navy;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">3) As with other composite Web controls, override the CreateChildControls method to construct the custom task control at runtime.&nbsp; The Label and DropDownList are created and added to the custom task.&nbsp; Note the DropDownList is empty.&nbsp; The Controls property is inherited from the System.Web.UI.WebControls.CompositeControl class and maintains a collection of controls to be rendered at runtime.&nbsp;&nbsp;&nbsp; </span></p><p class="MsoNormal"><span style="font-size:10pt;color:navy;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; protected override void CreateChildControls()</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Controls.Clear();</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; base.CreateChildControls();</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; label = new Label();</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; label.Text = MapResourceManagerID;</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; label.ID = &quot;label_mrm&quot;;</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dropDownListResources = new DropDownList();</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dropDownListResources.ID = &quot;dropdownlist_resources&quot;;</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Controls.Add(label);</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Controls.Add(dropDownListResources);</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p class="MsoNormal"><span style="font-size:10pt;color:navy;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:navy;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">4) At this time we only need to populate the DropDownList (dropDownListResources) with a list of map resources upon initial load of the custom task.&nbsp; Since interrogating the MapResourceManager to get a list of resources during every callback is not necessary and can be expensive, we only want it to occur during a full page postback.&nbsp; The PreRender step in the page lifecycle offers a good location to modify page or control content before the final rendering step, and it&#39;s only called during a full page postback.&nbsp; Override the OnPreRender event of the custom task control and call the UpdateResourceDropDownList() method.&nbsp; The method will contain the logic to update the dropDownListResources control.&nbsp; This logic was placed in a separate method so it can be called from other locations in the custom task code, if necessary in the future.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p><p class="MsoNormal"><span style="font-size:10pt;color:navy;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="font-size:10pt;color:blue;font-family:'Courier New';">protected override void OnPreRender(EventArgs e)</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; base.OnPreRender(e);</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="font-size:10pt;color:blue;font-family:'Courier New';">UpdateResourceDropDownList();</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p class="MsoNormal"><span style="font-size:10pt;color:navy;font-family:Arial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">5) The UpdateResourceDropDownList() method uses the MapResourceManagerID property to find a MapResourceManager control on the page and get a list of map resources.&nbsp; The GetMapResourcesFromMRM() method returns a collection of resources from the MapResourceManager.&nbsp; If the MapResourceManager has not been initialized, it will be explicitly initialized. Including code to return a collection of resources from a MapResourceManager was placed in a separate method so it can be called from other locations in the custom task that do not involve the dropDownListResources control.&nbsp; Once a list of resources is returned to the UpdateResourceDropDownList method, only those that are an ArcGIS Server map resource are added to the dropDownListResources control.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p><p class="MsoNormal"><span style="font-size:10pt;color:navy;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; protected void UpdateResourceDropDownList()</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!string.IsNullOrEmpty(MapResourceManagerID))</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GISResourceCollection grcoll = GetMapResourcesFromMRM(MapResourceManagerID);</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (IGISResource gr in grcoll)</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (gr is ESRI.ArcGIS.ADF.Web.DataSources.ArcGISServer.MapResourceBase)</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dropDownListResources.Items.Add(gr.Name);</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; protected GISResourceCollection GetMapResourcesFromMRM(string mrmID)</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GISResourceCollection gisRC = new GISResourceCollection();</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MapResourceManager rm = (MapResourceManager)Page.FindControl(mrmID);</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (rm == null)</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return null;</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!rm.Initialized)</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rm.Initialize();</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (MapResourceItem mri in rm.ResourceItems)</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gisRC.Add(mri.Resource);</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return gisRC;</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p class="MsoNormal"><span style="font-size:10pt;color:navy;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">6) Override a set of methods associated with task implementation to complete the custom task control.&nbsp; Further details on these methods will be provided in future blog posts.</span></p><p class="MsoNormal"><span style="font-size:10pt;color:navy;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public override string GetCallbackResult()</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return base.GetCallbackResult();</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public override void ExecuteTask()</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {}</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public override List&lt;GISResourceItemDependency&gt; GetGISResourceItemDependencies()</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; List&lt;GISResourceItemDependency&gt; list = new List&lt;GISResourceItemDependency&gt;();</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return list;</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp; }</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">}</span></p><p class="MsoNormal"><span style="font-size:10pt;color:navy;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">7) Build the custom task in Visual Studio and add a reference to it in a Web page.&nbsp; Add the custom task and a MapResourceManager control to the page.&nbsp; Add one or more ArcGIS Server resources to the MapResourceManager.&nbsp; Run the Web app and you should see a drop down list containing the name of each ArcGIS Server map resource item in the MapResourceManager.&nbsp; &nbsp;&nbsp;It should look similar to the following screenshot:</span></p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><img border="1" height="514" src="http://serverx.esri.com/blogimages/Feb-12-2007/taskruntime.PNG" width="465" />&nbsp;</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">You can download the sample <a href="http://serverx.esri.com/blogimages/Feb-12-2007/TestTask.zip" target="_blank">here</a>.<br /><br />&nbsp;</p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;"></span></p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=102" width="1" height="1">";s:8:"category";s:24:"ADF.NETCode SnippetTasks";s:7:"summary";s:24551:"<p>Rex Hansen of the .NET SDK team wrote this very useful post on accessing the Web ADF components at run-time. <br /></p><p>&nbsp;</p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">When creating a custom task, you may often find it necessary to access Web ADF components (controls, resources, etc.) that share the same Web page with the task.&nbsp; How the task will be used will dictate the technique for accessing Web ADF components.&nbsp; There are three situations to consider:</span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">1) Task run-time</span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">2) Visual Studio design-time</span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">3) Manager run-time</span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">&ldquo;Task run-time&rdquo; defines the technique for working with Web ADF components in a Web application at run-time.&nbsp; &ldquo;Visual Studio design-time&rdquo; uses custom verbs on the custom task control to access to Web ADF components during task configuration in Visual Studio.&nbsp; &ldquo;Manager run-time&rdquo; defines a situation where a custom task must utilize Web ADF components when configuring the task in the Manager Web application.&nbsp;&nbsp; </span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">This discussion and walkthrough will focus on working with Web ADF resources in a custom task at run-time (situation 1).&nbsp; The custom task will do the following:</span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;"></span></p><ul style="margin-top:0in;"><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">Extend FloatingPanelTask</span> <span style="font-size:10pt;font-family:Arial;"></span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">Expose a public property to buddy the task with a MapResourceManager </span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">Use a DropDownList control to list the map resources in the MapResourceManager control</span> <span style="font-size:10pt;font-family:Arial;"></span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">Populate the DropDownList upon initial load of the task</span> <span style="font-size:10pt;font-family:Arial;"></span></li></ul><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">1) Create a custom task control that extends FloatingPanelTask.&nbsp; As a composite control, the custom task will contain multiple controls.&nbsp; Define two private member variables to store references to controls that will be used in the custom task.&nbsp; In this case, a Label will be used to display the MapResourceManager id and a DropDownList will display a list of map resources.</span></p><p class="MsoNormal"><span style="font-size:10pt;color:navy;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">namespace TestTask_CSharp</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">{</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp; public class TestTask_Demo : FloatingPanelTask</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp; {</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private Label label = null;</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private DropDownList dropDownListResources = null;</span></p><p class="MsoNormal"><span style="font-size:10pt;color:navy;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">2) Create a property on the custom task control to store a reference to the unique id of a MapResourceManager control.&nbsp; The property will be maintained in state for the duration of a user session.&nbsp; The property can be set declaratively in the aspx page using the MapResourceManagerID attribute (source view).&nbsp; </span></p><p class="MsoNormal"><span style="font-size:10pt;color:navy;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [Browsable(true)]</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [DefaultValue(&quot;&quot;)]</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [PersistenceMode(PersistenceMode.Attribute)]</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public string MapResourceManagerID</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; get</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; object obj = StateManager.GetProperty(&quot;mapResourceManagerID&quot;);</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (obj == null) return &quot;&quot;;</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return obj as string;</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;}</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; StateManager.SetProperty(&quot;mapResourceManagerID&quot;, value);</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><span style="font-size:10pt;color:navy;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:navy;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">3) As with other composite Web controls, override the CreateChildControls method to construct the custom task control at runtime.&nbsp; The Label and DropDownList are created and added to the custom task.&nbsp; Note the DropDownList is empty.&nbsp; The Controls property is inherited from the System.Web.UI.WebControls.CompositeControl class and maintains a collection of controls to be rendered at runtime.&nbsp;&nbsp;&nbsp; </span></p><p class="MsoNormal"><span style="font-size:10pt;color:navy;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; protected override void CreateChildControls()</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Controls.Clear();</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; base.CreateChildControls();</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; label = new Label();</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; label.Text = MapResourceManagerID;</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; label.ID = &quot;label_mrm&quot;;</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dropDownListResources = new DropDownList();</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dropDownListResources.ID = &quot;dropdownlist_resources&quot;;</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Controls.Add(label);</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Controls.Add(dropDownListResources);</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p class="MsoNormal"><span style="font-size:10pt;color:navy;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:navy;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">4) At this time we only need to populate the DropDownList (dropDownListResources) with a list of map resources upon initial load of the custom task.&nbsp; Since interrogating the MapResourceManager to get a list of resources during every callback is not necessary and can be expensive, we only want it to occur during a full page postback.&nbsp; The PreRender step in the page lifecycle offers a good location to modify page or control content before the final rendering step, and it&#39;s only called during a full page postback.&nbsp; Override the OnPreRender event of the custom task control and call the UpdateResourceDropDownList() method.&nbsp; The method will contain the logic to update the dropDownListResources control.&nbsp; This logic was placed in a separate method so it can be called from other locations in the custom task code, if necessary in the future.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p><p class="MsoNormal"><span style="font-size:10pt;color:navy;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="font-size:10pt;color:blue;font-family:'Courier New';">protected override void OnPreRender(EventArgs e)</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; base.OnPreRender(e);</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="font-size:10pt;color:blue;font-family:'Courier New';">UpdateResourceDropDownList();</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p class="MsoNormal"><span style="font-size:10pt;color:navy;font-family:Arial;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">5) The UpdateResourceDropDownList() method uses the MapResourceManagerID property to find a MapResourceManager control on the page and get a list of map resources.&nbsp; The GetMapResourcesFromMRM() method returns a collection of resources from the MapResourceManager.&nbsp; If the MapResourceManager has not been initialized, it will be explicitly initialized. Including code to return a collection of resources from a MapResourceManager was placed in a separate method so it can be called from other locations in the custom task that do not involve the dropDownListResources control.&nbsp; Once a list of resources is returned to the UpdateResourceDropDownList method, only those that are an ArcGIS Server map resource are added to the dropDownListResources control.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p><p class="MsoNormal"><span style="font-size:10pt;color:navy;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; protected void UpdateResourceDropDownList()</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!string.IsNullOrEmpty(MapResourceManagerID))</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GISResourceCollection grcoll = GetMapResourcesFromMRM(MapResourceManagerID);</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (IGISResource gr in grcoll)</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (gr is ESRI.ArcGIS.ADF.Web.DataSources.ArcGISServer.MapResourceBase)</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dropDownListResources.Items.Add(gr.Name);</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; protected GISResourceCollection GetMapResourcesFromMRM(string mrmID)</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GISResourceCollection gisRC = new GISResourceCollection();</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MapResourceManager rm = (MapResourceManager)Page.FindControl(mrmID);</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (rm == null)</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return null;</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!rm.Initialized)</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rm.Initialize();</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (MapResourceItem mri in rm.ResourceItems)</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gisRC.Add(mri.Resource);</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return gisRC;</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p class="MsoNormal"><span style="font-size:10pt;color:navy;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">6) Override a set of methods associated with task implementation to complete the custom task control.&nbsp; Further details on these methods will be provided in future blog posts.</span></p><p class="MsoNormal"><span style="font-size:10pt;color:navy;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public override string GetCallbackResult()</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return base.GetCallbackResult();</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public override void ExecuteTask()</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {}</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';"></span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public override List&lt;GISResourceItemDependency&gt; GetGISResourceItemDependencies()</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; List&lt;GISResourceItemDependency&gt; list = new List&lt;GISResourceItemDependency&gt;();</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return list;</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">&nbsp;&nbsp;&nbsp; }</span></p><p class="MsoNormal"><span style="font-size:10pt;color:blue;font-family:'Courier New';">}</span></p><p class="MsoNormal"><span style="font-size:10pt;color:navy;font-family:Arial;"></span></p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">7) Build the custom task in Visual Studio and add a reference to it in a Web page.&nbsp; Add the custom task and a MapResourceManager control to the page.&nbsp; Add one or more ArcGIS Server resources to the MapResourceManager.&nbsp; Run the Web app and you should see a drop down list containing the name of each ArcGIS Server map resource item in the MapResourceManager.&nbsp; &nbsp;&nbsp;It should look similar to the following screenshot:</span></p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><img border="1" height="514" src="http://serverx.esri.com/blogimages/Feb-12-2007/taskruntime.PNG" width="465" />&nbsp;</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">You can download the sample <a href="http://serverx.esri.com/blogimages/Feb-12-2007/TestTask.zip" target="_blank">here</a>.<br /><br />&nbsp;</p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;"></span></p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=102" width="1" height="1">";}i:8;a:11:{s:5:"title";s:64:"Extending the QueryAttributesTask to highlight selected features";s:4:"link";s:141:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/archive/2007/02/12/Extending-the-QueryAttributesTask-to-highlight-selected-features.aspx";s:7:"pubdate";s:29:"Mon, 12 Feb 2007 17:50:00 GMT";s:4:"guid";s:39:"b60b3f0a-e2bd-4be5-8a18-822c697649ab:94";s:2:"dc";a:1:{s:7:"creator";s:6:"Jeremy";}s:5:"slash";a:1:{s:8:"comments";s:2:"10";}s:8:"comments";s:69:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/comments/94.aspx";s:3:"wfw";a:1:{s:10:"commentrss";s:78:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/commentrss.aspx?PostID=94";}s:11:"description";s:27053:"<p>Bryan Baker of the .NET SDK team wrote the following great post on extending a task to modify its behavior and then adding that task to the .NET Global Assembly Cache so it can be reused across applications.&nbsp; </p><p>Note: Also see the <a href="http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/archive/2007/05/03/Follow_2D00_up-to-Extending-the-QueryAttributes-Task_3A00_-Zooming-to-selected-features.aspx">follow-up to this post</a> from May 3, 2007.</p><h1>Highlighting all task results</h1><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">With the Web ADF at 9.2, a website can have one or more tasks to allow users to find features or locations on the map. For example, you might add a QueryAttributesTask to the website to allow users to find cities by name, by typing the first few characters in the name. </p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">The out-of-the-box tasks at 9.2 do not automatically highlight found features on the map. Instead, the user can highlight features by clicking individual check-boxes of features in the task results (see graphic, with two cities selected).</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">&nbsp;<img align="middle" border="1" height="118" src="http://serverx.esri.com/blogimages/Feb-12-2007/highlightgraphic.PNG" width="200" /></p><p class="MsoNormal">What if you want to have all features highlighted immediately when the task runs? There is currently no setting to enable this. But such immediate highlighting is possible through customization. Let&rsquo;s look at one relatively easy approach for someone with modest programming skills. We&rsquo;re looking specifically at the Web ADF for the Microsoft .NET Framework here, by the way.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">We will <em>extend</em> a task control to modify its behavior. The object-oriented nature of .NET allows us to create a new class (a task, in this case) that <em>inherits</em> all of the behavior and properties of the original class. We only need to add or modify the original class where we need it to act differently from the original class (task). Some aspects of tasks may be difficult or impossible to change, but modifying the task results output is not difficult.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">The approach we&rsquo;ll look at can apply to any task that produces a task result in the form of a graphics layer, where users can click on feature check-boxes to highlight them on the map. This includes the SearchAttributesTask, FindAddressTask, FindPlaceTask and QueryAttributesTask. We&rsquo;ll look specifically at the QueryAttributesTask in this example.</p><h2>Extending an out-of-the-box task</h2><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">First, I open Visual Studio 2005 and create a new project (not a new website), a Class Library project to be specific. One great thing about .NET is that even though the original class was written in C#, we can extend it in any language&mdash;we&rsquo;ll use VB to show this here. We can put our new class library anywhere; it doesn&rsquo;t have to go into a web folder. I&rsquo;ll call my project QuerySelectTaskVB. By the way, we could also use either Visual Basic Express or Visual C# Express, but it&rsquo;s more difficult to debug with a linked web application.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">Visual Studio creates the project and adds a new class called Class1.vb. I right-clicked on it in the Solution Explorer and renamed it QuerySelectTaskVB. This also renames the class in the code view&mdash;nice. </p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">We need to add some references to the project to the libraries we&rsquo;ll be using. I right-click on the project in Solution Explorer, and chose Add Reference, and in the pop up dialog I select these libraries and then click OK:</p><ul style="margin-top:0in;"><li class="MsoNormal">ESRI.ArcGIS.ADF.Tasks</li><li class="MsoNormal">ESRI.ArcGIS.ADF.Web</li><li class="MsoNormal">ESRI.ArcGIS.ADF.Web.DataSources</li><li class="MsoNormal">ESRI.ArcGIS.ADF.Web.UI.WebControls</li><li class="MsoNormal">System.Web</li></ul><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">To start creating our class, we add some Imports statements at the top of the class file so we can use classes without having to type the full path. We&rsquo;ll also add a Namespace around our class to better identify it.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><span style="color:blue;font-family:'Courier New';">Imports</span><span style="font-family:'Courier New';"> System</span><br /><span style="color:blue;font-family:'Courier New';">Imports</span><span style="font-family:'Courier New';"> System.ComponentModel</span><br /><span style="color:blue;font-family:'Courier New';">Imports</span><span style="font-family:'Courier New';"> System.ComponentModel.Design</span><br /><span style="color:blue;font-family:'Courier New';">Imports</span><span style="font-family:'Courier New';"> System.Data</span><br /><span style="color:blue;font-family:'Courier New';">Imports</span><span style="font-family:'Courier New';"> System.Web</span><br /><span style="color:blue;font-family:'Courier New';">imports</span><span style="font-family:'Courier New';"> System.Web.UI</span><br /><span style="color:blue;font-family:'Courier New';">Imports</span><span style="font-family:'Courier New';"> ESRI.ArcGIS.ADF.Tasks</span><br /><span style="color:blue;font-family:'Courier New';">Imports</span><span style="font-family:'Courier New';"> ESRI.ArcGIS.ADF.Web.Display.Graphics</span><br /><span style="color:blue;font-family:'Courier New';">Imports</span><span style="font-family:'Courier New';"> ESRI.ArcGIS.ADF.Web.UI.WebControls </span></p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><span style="color:blue;font-family:'Courier New';">Namespace</span><span style="font-family:'Courier New';"> QuerySelect</span><br /><span style="color:blue;font-family:'Courier New';"><span>&nbsp; </span>Public</span><span style="font-family:'Courier New';"> <span style="color:blue;">Class</span> QuerySelectTaskVB</span><br /><span style="color:blue;font-family:'Courier New';"><span>&nbsp; </span>End</span><span style="font-family:'Courier New';"> <span style="color:blue;">Class</span></span><span style="color:blue;font-family:'Courier New';"><br />End Namespace</span></p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">We tell the class to extend (inherit) the existing QueryAttributesTask by adding to the class declaration we&rsquo;ve already created:</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><span style="color:blue;font-family:'Courier New';">Public</span><span style="font-family:'Courier New';"> <span style="color:blue;">Class</span> QuerySelectTaskVB<br /><span>&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Inherits</span> QueryAttributesTask</span><br /><span style="color:blue;font-family:'Courier New';">End</span><span style="font-family:'Courier New';"> <span style="color:blue;">Class</span></span></p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">The only thing we want to change in the task is how it outputs the results to the TaskResults control. The task creates this output in the standard task method called <strong>ExecuteTask</strong>(). We want the QueryAttributesTask to create its output as usual, but we will modify the results once they&rsquo;re created. So we create our own version of ExecuteTask() that <em>overrides</em> the original. Our version will call the base (parent) class version of the method, then modify the results that have been created. The following code goes inside the Class definition we saw above:</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Public</span> <span style="color:blue;">Overrides</span> <span style="color:blue;">Sub</span> ExecuteTask()<br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; QueryAttributesTask creates its results</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">MyBase</span>.ExecuteTask()<br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; We&#39;ll modify the Results next</span><br /><span>&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">End</span> <span style="color:blue;">Sub</span></span></p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">Once the parent class has run its ExecuteTask, we can modify the results. The results are stored in a task property object called <strong>Results</strong> (makes sense, eh?). If the query finds features, those get stored in Results as a standard .NET <em>DataSet</em>, which contains one or more <em>DataTable<strong> </strong></em>objects. But if nothing was found, the Results contains a different type, a SimpleTaskResult. Also, if the map service isn&rsquo;t working right, the results might have a DataSet, but the name (caption) just has an error message. Let&rsquo;s make sure we have valid results:</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; We&#39;ll modify the Results next</span></span><span style="color:green;font-family:'Courier New';"></span><br /><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; Make sure features were found</span></span></p><p class="MsoNormal"><span style="color:blue;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">If</span> <span style="color:blue;">TypeOf</span> Results <span style="color:blue;">Is</span> DataSet <span style="color:blue;">Then</span> <br /></span></p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Dim</span> resultsDS <span style="color:blue;">As</span> DataSet = <span style="color:blue;">CType</span>(Results, DataSet)<br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; Check for errors during query</span></span></p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">If</span> resultsDS.DataSetName.IndexOf(<span style="color:#a31515;">&quot;Error&quot;</span>) &gt; 0 <span>Then<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>Return<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">End</span> <span style="color:blue;">If</span></span></p><p class="MsoNormal"><span style="font-family:'Courier New';">&nbsp;<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>&#39; Next we can get the table of results<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">End</span> <span style="color:blue;">If</span></span></p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">Now we can get the table from the DataSet. With the QueryAttributesTask, only one DataTable will be in the DataSet (other tasks may have multiple tables). One more error check: after the task performs its query using the Web ADF common API, it converts the data table to a GraphicsLayer object, so that it contains rendering (symbology) information. If it had any problems making that conversion, then features can&rsquo;t be selected on the map.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>&#39; Next we can get the table of results<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>&#39; Get the one table in the QueryAttributesTask result<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Dim</span> resultsTable <span style="color:blue;">As</span> DataTable = resultsDS.Tables(0)<br />&nbsp;</span></p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>&#39; Make sure no problems creating a GraphicsLayer from the results<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">If</span> resultsTable <span style="color:blue;">Is</span> <span style="color:blue;">Nothing</span> <span style="color:blue;">OrElse</span> <span style="color:blue;">Not</span> <span style="color:blue;">TypeOf</span> resultsTable <span style="color:blue;">Is</span> GraphicsLayer <span style="color:blue;">Then</span></span></p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Return</span></span></p><p class="MsoNormal"><span style="color:blue;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">End</span> <span style="color:blue;">If</span> <br /></span></p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>&nbsp;&nbsp;</span><span style="color:green;">&#39; Now we can modify the table results</span><span style="color:blue;"></span></span></p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">Now we can actually set the selection for the features found! The GraphicsLayer, which extends the DataTable type, will have a Boolean-type column indicating whether the row (map feature) is selected. We can get this column, and use it when looping through the features to set all features as selected:</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><span style="color:blue;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>&#39; Now we can modify the table results<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Dim</span> graphicsLayer <span style="color:blue;">As</span> GraphicsLayer = _<br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>CType</span><span style="font-family:'Courier New';">(resultsTable, GraphicsLayer)<br />&nbsp;</span></p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>&#39; Get the column that holds the selection attribute<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Dim</span> selectedCol <span style="color:blue;">As</span> DataColumn = graphicsLayer.IsSelectedColumn<br />&nbsp;</span></p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>&#39; Set each feature to selected<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">For</span> <span style="color:blue;">Each</span> row <span style="color:blue;">As</span> DataRow <span style="color:blue;">In</span> graphicsLayer.Rows<br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>row(selectedCol) = <span style="color:blue;">True</span></span></p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Next</span></span></p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">That&rsquo;s it! Now each feature will be selected in the TaskResults tree and also on the map&hellip;.that is, once our task is inside a website, which we&rsquo;ll show shortly.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">We compile the code by choosing Build&mdash;Build Solution from the menu (no errors, of course!). This puts a compiled .dll file into the Bin directory of the project (you can see that by looking at the project folder with Windows Explorer).</p><p class="MsoNormal">&nbsp;</p><h2>Adding the task to Visual Studio</h2><p class="MsoNormal">The easiest way to add the task to a website is when it&rsquo;s in the Visual Studio toolbox. It can be added manually to an individual website, but requires more editing of the source of the page. Let&rsquo;s get the task into Visual Studio. There&rsquo;s more on this in the Developer Help for ArcGIS Server and ArcIMS, so we&rsquo;ll go over this quickly.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">First, in the code for the task itself, we add some information so Visual Studio sets properties for task when we drag it onto the page from the toolbox. This goes just above the class declaration:</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><span style="font-family:'Courier New';">&lt;ToolboxData(<span style="color:#a31515;">&quot;&lt;{0}:QuerySelectTaskVB runat=&quot;&quot;server&quot;&quot; Width=&quot;&quot;200px&quot;&quot; Transparency=&quot;&quot;35&quot;&quot;&quot;</span> _</span></p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>+ <span style="color:#a31515;">&quot;BackColor=&quot;&quot;White&quot;&quot; TitleBarColor=&quot;&quot;WhiteSmoke&quot;&quot; TitleBarSeparatorLine=&quot;&quot;False&quot;&quot;&quot;</span> _</span></p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>+ <span style="color:#a31515;">&quot;TitleBarHeight=&quot;&quot;20px&quot;&quot; BorderColor=&quot;&quot;LightSteelBlue&quot;&quot; BorderStyle=''Outset'''</span> _</span></p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>&nbsp;</span>+ <span style="color:#a31515;">&quot;BorderWidth=&quot;&quot;1px&quot;&quot; Font-Names=&quot;&quot;Verdana&quot;&quot; Font-Size=&quot;&quot;8pt&quot;&quot; ForeColor=&quot;&quot;Black&quot;&quot;&gt;&quot; _</span></span></p><p class="MsoNormal"><span style="color:#a31515;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>+ &quot;&lt;/{0}: QuerySelectTaskVB &gt;&quot;</span><span style="font-family:'Courier New';">)&gt; _</span></p><p class="MsoNormal"><span style="color:blue;font-family:'Courier New';">Public</span><span style="font-family:'Courier New';"> <span style="color:blue;">Class</span> QuerySelectTaskVB</span></p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Inherits</span> QueryAttributesTask</span></p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">Next we will add the task to .NET&rsquo;s Global Assembly Cache. This makes it easier to add the task to various websites. Before we can do this, we must create a strong name to sign the task. We open the .NET command prompt and type:</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><span style="font-family:'Courier New';">sn &ndash;k QuerySelectVB.snk</span></p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">This creates a key file (QuerySelectVB.snk) in the folder indicated by the command prompt (probably C:\Program Files\Microsoft Visual Studio 8\SDK\v2.0). I moved that file using Windows Explorer to the project directory where my task .vb file is located. I then added that to my project by right-clicking on the project in Visual Studio&rsquo;s Solution Explorer, choosing Add-Existing Item, changing the type to All Files, and clicking on the .snk file. I used the keypair to sign the assembly by right-clicking on the project and choosing Properties. In the Properties page, I clicked the Signing tab. I checked the box <strong>Sign the assembly</strong> and clicked my .snk file in the drop-down list. Finally, I recompiled the code (Build-Build Solution).</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">Now we can add the task to the Global Assembly Cache. Here&rsquo;s the easy way: I opened two Windows Explorer windows, one to my project folder&rsquo;s bin directory where the .dll is located, the other to C:\Windows\Assembly. I dragged the QuerySelectTaskVB.dll into the C:\Windows\Assembly window. This doesn&rsquo;t actually move the file. It just registers the assembly so it&rsquo;s available to all applications on the system.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">Finally let&rsquo;s add the task to Visual Studio. Open Visual Studio and then any .aspx page (you can create a website and page if necessary). Open the toolbox if necessary. Right-click where you want to add the task and click Choose Items (you can also create a new tab with New Tab).<span>&nbsp; </span>In the Choose Toolbox Items dialog, click Browse, and navigate to your DLL&rsquo;s location. Highlight it and click Open. This adds the task to the list of available assemblies. Make sure its check box is checked, and click OK. This adds the task to the Visual Studio toolbox.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">Now the task is available whenever you design an ASP.NET web page. Notice it has an icon&mdash;the same one as the QueryAttributesTask. It inherits this along with other properties of the parent task.</p><h2>Using the custom task in a website</h2><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">We can use the task in any website. I created a new website using the Web Mapping Application template. I could have added this website to the same solution as my task code if I&rsquo;m using Visual Studio (useful for debugging the task), or in a new instance of Visual Studio. I could also open a website created with ArcGIS Server Manager or ArcIMS Web Manager, and add the task to it. </p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">Once we have our web page open in Visual Studio, we can drag our new task from the toolbox into the Task Manager. Once it&rsquo;s there, we can click its &ldquo;smart tag&rdquo; in its upper right to set the task&rsquo;s properties.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><img border="1" height="75" src="http://serverx.esri.com/blogimages/Feb-12-2007/taskManagerProp.PNG" width="200" />&nbsp;</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">Yet another great thing about extending an existing task: we get its designer tools with no coding required. We can set the Task Results container and use <strong>Edit the Query</strong> to create the query, exactly the same as with the standard QueryAttributesTask (see the Developer Help for tips on that).</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">The demo site for this page uses this custom task to query a water-well point layer for estimated yield. Choose a value from the drop-down list, and up to 50 features will be found. Notice that all features are immediately highlighted. Our custom task acts like the standard QueryAttributesTask, except that it highlights all features returned.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">Try it out: <a href="http://serverx.esri.com/QuerySelectTaskDemo/">http://serverx.esri.com/QuerySelectTaskDemo/</a>. </p><h2>Discussion</h2><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">You can do other interesting things with the Results of the task. For instance, you could add a hyperlink to the task results output by adding the &lt;a href&hellip;&gt; tag to the DataSet&rsquo;s DataSetName property, or to the DataTable.TableName. The hyperlink is displayed in the tree of the task results. You can also modify the DataTable itself, such as by hiding columns you don&rsquo;t want displayed. Another example would be to display the results as a table, by creating a GridView from the DataTable and getting the HTML output from the GridView. You&rsquo;d then create a new TaskResultsNode, add the output to that, and set it as the Results instead of the DataSet.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">You might be tempted to customize other aspects of tasks, such as modifying the task&rsquo;s user interface. Although some customizations are possible, you&rsquo;ll probably find that in many cases it would be easier to author your own task from scratch. The Developer Help has a good discussion of writing tasks, and the Web ADF has a couple of samples that can help get you started.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">You might have noticed that the task user interface does not have the look-and-feel of other tasks&mdash;the colors, fonts, etc. The standard tasks have properties defined in the Theme of the website, specifically in the Default.skin file. If you want the same look-and-feel of the standard tasks, you can create your own control skin by copying properties from one of the standard tasks in Default.skin.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">We haven&rsquo;t discussed how to make our custom task available within Manager, so that non-programmers could use your task. This is a much more complex chore than adding the task to Visual Studio. Tasks are configured in Manager using a separate class called a web configurator. The standard task&rsquo;s web configurators are hard-coded to output information specifically for that task. It is not possible to easily modify them to instead output tags and properties for tasks that extend them. It would be necessary to rewrite most or all of the web configurator in order for it to properly output your task from Manager. The Developer Help has information on writing web configurators, if you are ambitious.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">Download the code for this sample: </p><p class="MsoNormal" style="margin-left:0.5in;text-indent:-0.25in;">&lt;!--[if !supportLists]--&gt;<span>-<span style="font:7pt 'Times New Roman';font-size-adjust:none;font-stretch:normal;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>&lt;!--[endif]--&gt;<a href="http://serverx.esri.com/blogimages/Feb-12-2007/QuerySelectTaskVB.zip">QuerySelectTaskVB.zip</a> (VB source code)</p><p class="MsoNormal" style="margin-left:0.5in;text-indent:-0.25in;">&lt;!--[if !supportLists]--&gt;<span>-<span style="font:7pt 'Times New Roman';font-size-adjust:none;font-stretch:normal;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>&lt;!--[endif]--&gt;<a href="http://serverx.esri.com/blogimages/Feb-12-2007/QuerySelectTaskCS.zip">QuerySelectTaskCS.zip</a> (C# source code)</p><p class="MsoNormal">&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=94" width="1" height="1">";s:8:"category";s:24:"ADF.NETCode SnippetTasks";s:7:"summary";s:27053:"<p>Bryan Baker of the .NET SDK team wrote the following great post on extending a task to modify its behavior and then adding that task to the .NET Global Assembly Cache so it can be reused across applications.&nbsp; </p><p>Note: Also see the <a href="http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/archive/2007/05/03/Follow_2D00_up-to-Extending-the-QueryAttributes-Task_3A00_-Zooming-to-selected-features.aspx">follow-up to this post</a> from May 3, 2007.</p><h1>Highlighting all task results</h1><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">With the Web ADF at 9.2, a website can have one or more tasks to allow users to find features or locations on the map. For example, you might add a QueryAttributesTask to the website to allow users to find cities by name, by typing the first few characters in the name. </p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">The out-of-the-box tasks at 9.2 do not automatically highlight found features on the map. Instead, the user can highlight features by clicking individual check-boxes of features in the task results (see graphic, with two cities selected).</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">&nbsp;<img align="middle" border="1" height="118" src="http://serverx.esri.com/blogimages/Feb-12-2007/highlightgraphic.PNG" width="200" /></p><p class="MsoNormal">What if you want to have all features highlighted immediately when the task runs? There is currently no setting to enable this. But such immediate highlighting is possible through customization. Let&rsquo;s look at one relatively easy approach for someone with modest programming skills. We&rsquo;re looking specifically at the Web ADF for the Microsoft .NET Framework here, by the way.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">We will <em>extend</em> a task control to modify its behavior. The object-oriented nature of .NET allows us to create a new class (a task, in this case) that <em>inherits</em> all of the behavior and properties of the original class. We only need to add or modify the original class where we need it to act differently from the original class (task). Some aspects of tasks may be difficult or impossible to change, but modifying the task results output is not difficult.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">The approach we&rsquo;ll look at can apply to any task that produces a task result in the form of a graphics layer, where users can click on feature check-boxes to highlight them on the map. This includes the SearchAttributesTask, FindAddressTask, FindPlaceTask and QueryAttributesTask. We&rsquo;ll look specifically at the QueryAttributesTask in this example.</p><h2>Extending an out-of-the-box task</h2><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">First, I open Visual Studio 2005 and create a new project (not a new website), a Class Library project to be specific. One great thing about .NET is that even though the original class was written in C#, we can extend it in any language&mdash;we&rsquo;ll use VB to show this here. We can put our new class library anywhere; it doesn&rsquo;t have to go into a web folder. I&rsquo;ll call my project QuerySelectTaskVB. By the way, we could also use either Visual Basic Express or Visual C# Express, but it&rsquo;s more difficult to debug with a linked web application.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">Visual Studio creates the project and adds a new class called Class1.vb. I right-clicked on it in the Solution Explorer and renamed it QuerySelectTaskVB. This also renames the class in the code view&mdash;nice. </p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">We need to add some references to the project to the libraries we&rsquo;ll be using. I right-click on the project in Solution Explorer, and chose Add Reference, and in the pop up dialog I select these libraries and then click OK:</p><ul style="margin-top:0in;"><li class="MsoNormal">ESRI.ArcGIS.ADF.Tasks</li><li class="MsoNormal">ESRI.ArcGIS.ADF.Web</li><li class="MsoNormal">ESRI.ArcGIS.ADF.Web.DataSources</li><li class="MsoNormal">ESRI.ArcGIS.ADF.Web.UI.WebControls</li><li class="MsoNormal">System.Web</li></ul><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">To start creating our class, we add some Imports statements at the top of the class file so we can use classes without having to type the full path. We&rsquo;ll also add a Namespace around our class to better identify it.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><span style="color:blue;font-family:'Courier New';">Imports</span><span style="font-family:'Courier New';"> System</span><br /><span style="color:blue;font-family:'Courier New';">Imports</span><span style="font-family:'Courier New';"> System.ComponentModel</span><br /><span style="color:blue;font-family:'Courier New';">Imports</span><span style="font-family:'Courier New';"> System.ComponentModel.Design</span><br /><span style="color:blue;font-family:'Courier New';">Imports</span><span style="font-family:'Courier New';"> System.Data</span><br /><span style="color:blue;font-family:'Courier New';">Imports</span><span style="font-family:'Courier New';"> System.Web</span><br /><span style="color:blue;font-family:'Courier New';">imports</span><span style="font-family:'Courier New';"> System.Web.UI</span><br /><span style="color:blue;font-family:'Courier New';">Imports</span><span style="font-family:'Courier New';"> ESRI.ArcGIS.ADF.Tasks</span><br /><span style="color:blue;font-family:'Courier New';">Imports</span><span style="font-family:'Courier New';"> ESRI.ArcGIS.ADF.Web.Display.Graphics</span><br /><span style="color:blue;font-family:'Courier New';">Imports</span><span style="font-family:'Courier New';"> ESRI.ArcGIS.ADF.Web.UI.WebControls </span></p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><span style="color:blue;font-family:'Courier New';">Namespace</span><span style="font-family:'Courier New';"> QuerySelect</span><br /><span style="color:blue;font-family:'Courier New';"><span>&nbsp; </span>Public</span><span style="font-family:'Courier New';"> <span style="color:blue;">Class</span> QuerySelectTaskVB</span><br /><span style="color:blue;font-family:'Courier New';"><span>&nbsp; </span>End</span><span style="font-family:'Courier New';"> <span style="color:blue;">Class</span></span><span style="color:blue;font-family:'Courier New';"><br />End Namespace</span></p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">We tell the class to extend (inherit) the existing QueryAttributesTask by adding to the class declaration we&rsquo;ve already created:</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><span style="color:blue;font-family:'Courier New';">Public</span><span style="font-family:'Courier New';"> <span style="color:blue;">Class</span> QuerySelectTaskVB<br /><span>&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Inherits</span> QueryAttributesTask</span><br /><span style="color:blue;font-family:'Courier New';">End</span><span style="font-family:'Courier New';"> <span style="color:blue;">Class</span></span></p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">The only thing we want to change in the task is how it outputs the results to the TaskResults control. The task creates this output in the standard task method called <strong>ExecuteTask</strong>(). We want the QueryAttributesTask to create its output as usual, but we will modify the results once they&rsquo;re created. So we create our own version of ExecuteTask() that <em>overrides</em> the original. Our version will call the base (parent) class version of the method, then modify the results that have been created. The following code goes inside the Class definition we saw above:</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Public</span> <span style="color:blue;">Overrides</span> <span style="color:blue;">Sub</span> ExecuteTask()<br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; QueryAttributesTask creates its results</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">MyBase</span>.ExecuteTask()<br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; We&#39;ll modify the Results next</span><br /><span>&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">End</span> <span style="color:blue;">Sub</span></span></p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">Once the parent class has run its ExecuteTask, we can modify the results. The results are stored in a task property object called <strong>Results</strong> (makes sense, eh?). If the query finds features, those get stored in Results as a standard .NET <em>DataSet</em>, which contains one or more <em>DataTable<strong> </strong></em>objects. But if nothing was found, the Results contains a different type, a SimpleTaskResult. Also, if the map service isn&rsquo;t working right, the results might have a DataSet, but the name (caption) just has an error message. Let&rsquo;s make sure we have valid results:</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; We&#39;ll modify the Results next</span></span><span style="color:green;font-family:'Courier New';"></span><br /><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; Make sure features were found</span></span></p><p class="MsoNormal"><span style="color:blue;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">If</span> <span style="color:blue;">TypeOf</span> Results <span style="color:blue;">Is</span> DataSet <span style="color:blue;">Then</span> <br /></span></p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Dim</span> resultsDS <span style="color:blue;">As</span> DataSet = <span style="color:blue;">CType</span>(Results, DataSet)<br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:green;">&#39; Check for errors during query</span></span></p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">If</span> resultsDS.DataSetName.IndexOf(<span style="color:#a31515;">&quot;Error&quot;</span>) &gt; 0 <span>Then<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>Return<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">End</span> <span style="color:blue;">If</span></span></p><p class="MsoNormal"><span style="font-family:'Courier New';">&nbsp;<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>&#39; Next we can get the table of results<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">End</span> <span style="color:blue;">If</span></span></p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">Now we can get the table from the DataSet. With the QueryAttributesTask, only one DataTable will be in the DataSet (other tasks may have multiple tables). One more error check: after the task performs its query using the Web ADF common API, it converts the data table to a GraphicsLayer object, so that it contains rendering (symbology) information. If it had any problems making that conversion, then features can&rsquo;t be selected on the map.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>&#39; Next we can get the table of results<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>&#39; Get the one table in the QueryAttributesTask result<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Dim</span> resultsTable <span style="color:blue;">As</span> DataTable = resultsDS.Tables(0)<br />&nbsp;</span></p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>&#39; Make sure no problems creating a GraphicsLayer from the results<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">If</span> resultsTable <span style="color:blue;">Is</span> <span style="color:blue;">Nothing</span> <span style="color:blue;">OrElse</span> <span style="color:blue;">Not</span> <span style="color:blue;">TypeOf</span> resultsTable <span style="color:blue;">Is</span> GraphicsLayer <span style="color:blue;">Then</span></span></p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Return</span></span></p><p class="MsoNormal"><span style="color:blue;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">End</span> <span style="color:blue;">If</span> <br /></span></p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>&nbsp;&nbsp;</span><span style="color:green;">&#39; Now we can modify the table results</span><span style="color:blue;"></span></span></p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">Now we can actually set the selection for the features found! The GraphicsLayer, which extends the DataTable type, will have a Boolean-type column indicating whether the row (map feature) is selected. We can get this column, and use it when looping through the features to set all features as selected:</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><span style="color:blue;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>&#39; Now we can modify the table results<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Dim</span> graphicsLayer <span style="color:blue;">As</span> GraphicsLayer = _<br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>CType</span><span style="font-family:'Courier New';">(resultsTable, GraphicsLayer)<br />&nbsp;</span></p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>&#39; Get the column that holds the selection attribute<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Dim</span> selectedCol <span style="color:blue;">As</span> DataColumn = graphicsLayer.IsSelectedColumn<br />&nbsp;</span></p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>&#39; Set each feature to selected<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">For</span> <span style="color:blue;">Each</span> row <span style="color:blue;">As</span> DataRow <span style="color:blue;">In</span> graphicsLayer.Rows<br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>row(selectedCol) = <span style="color:blue;">True</span></span></p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Next</span></span></p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">That&rsquo;s it! Now each feature will be selected in the TaskResults tree and also on the map&hellip;.that is, once our task is inside a website, which we&rsquo;ll show shortly.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">We compile the code by choosing Build&mdash;Build Solution from the menu (no errors, of course!). This puts a compiled .dll file into the Bin directory of the project (you can see that by looking at the project folder with Windows Explorer).</p><p class="MsoNormal">&nbsp;</p><h2>Adding the task to Visual Studio</h2><p class="MsoNormal">The easiest way to add the task to a website is when it&rsquo;s in the Visual Studio toolbox. It can be added manually to an individual website, but requires more editing of the source of the page. Let&rsquo;s get the task into Visual Studio. There&rsquo;s more on this in the Developer Help for ArcGIS Server and ArcIMS, so we&rsquo;ll go over this quickly.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">First, in the code for the task itself, we add some information so Visual Studio sets properties for task when we drag it onto the page from the toolbox. This goes just above the class declaration:</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><span style="font-family:'Courier New';">&lt;ToolboxData(<span style="color:#a31515;">&quot;&lt;{0}:QuerySelectTaskVB runat=&quot;&quot;server&quot;&quot; Width=&quot;&quot;200px&quot;&quot; Transparency=&quot;&quot;35&quot;&quot;&quot;</span> _</span></p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>+ <span style="color:#a31515;">&quot;BackColor=&quot;&quot;White&quot;&quot; TitleBarColor=&quot;&quot;WhiteSmoke&quot;&quot; TitleBarSeparatorLine=&quot;&quot;False&quot;&quot;&quot;</span> _</span></p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>+ <span style="color:#a31515;">&quot;TitleBarHeight=&quot;&quot;20px&quot;&quot; BorderColor=&quot;&quot;LightSteelBlue&quot;&quot; BorderStyle=''Outset'''</span> _</span></p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span>&nbsp;</span>+ <span style="color:#a31515;">&quot;BorderWidth=&quot;&quot;1px&quot;&quot; Font-Names=&quot;&quot;Verdana&quot;&quot; Font-Size=&quot;&quot;8pt&quot;&quot; ForeColor=&quot;&quot;Black&quot;&quot;&gt;&quot; _</span></span></p><p class="MsoNormal"><span style="color:#a31515;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>+ &quot;&lt;/{0}: QuerySelectTaskVB &gt;&quot;</span><span style="font-family:'Courier New';">)&gt; _</span></p><p class="MsoNormal"><span style="color:blue;font-family:'Courier New';">Public</span><span style="font-family:'Courier New';"> <span style="color:blue;">Class</span> QuerySelectTaskVB</span></p><p class="MsoNormal"><span style="font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">Inherits</span> QueryAttributesTask</span></p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">Next we will add the task to .NET&rsquo;s Global Assembly Cache. This makes it easier to add the task to various websites. Before we can do this, we must create a strong name to sign the task. We open the .NET command prompt and type:</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><span style="font-family:'Courier New';">sn &ndash;k QuerySelectVB.snk</span></p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">This creates a key file (QuerySelectVB.snk) in the folder indicated by the command prompt (probably C:\Program Files\Microsoft Visual Studio 8\SDK\v2.0). I moved that file using Windows Explorer to the project directory where my task .vb file is located. I then added that to my project by right-clicking on the project in Visual Studio&rsquo;s Solution Explorer, choosing Add-Existing Item, changing the type to All Files, and clicking on the .snk file. I used the keypair to sign the assembly by right-clicking on the project and choosing Properties. In the Properties page, I clicked the Signing tab. I checked the box <strong>Sign the assembly</strong> and clicked my .snk file in the drop-down list. Finally, I recompiled the code (Build-Build Solution).</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">Now we can add the task to the Global Assembly Cache. Here&rsquo;s the easy way: I opened two Windows Explorer windows, one to my project folder&rsquo;s bin directory where the .dll is located, the other to C:\Windows\Assembly. I dragged the QuerySelectTaskVB.dll into the C:\Windows\Assembly window. This doesn&rsquo;t actually move the file. It just registers the assembly so it&rsquo;s available to all applications on the system.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">Finally let&rsquo;s add the task to Visual Studio. Open Visual Studio and then any .aspx page (you can create a website and page if necessary). Open the toolbox if necessary. Right-click where you want to add the task and click Choose Items (you can also create a new tab with New Tab).<span>&nbsp; </span>In the Choose Toolbox Items dialog, click Browse, and navigate to your DLL&rsquo;s location. Highlight it and click Open. This adds the task to the list of available assemblies. Make sure its check box is checked, and click OK. This adds the task to the Visual Studio toolbox.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">Now the task is available whenever you design an ASP.NET web page. Notice it has an icon&mdash;the same one as the QueryAttributesTask. It inherits this along with other properties of the parent task.</p><h2>Using the custom task in a website</h2><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">We can use the task in any website. I created a new website using the Web Mapping Application template. I could have added this website to the same solution as my task code if I&rsquo;m using Visual Studio (useful for debugging the task), or in a new instance of Visual Studio. I could also open a website created with ArcGIS Server Manager or ArcIMS Web Manager, and add the task to it. </p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">Once we have our web page open in Visual Studio, we can drag our new task from the toolbox into the Task Manager. Once it&rsquo;s there, we can click its &ldquo;smart tag&rdquo; in its upper right to set the task&rsquo;s properties.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><img border="1" height="75" src="http://serverx.esri.com/blogimages/Feb-12-2007/taskManagerProp.PNG" width="200" />&nbsp;</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">Yet another great thing about extending an existing task: we get its designer tools with no coding required. We can set the Task Results container and use <strong>Edit the Query</strong> to create the query, exactly the same as with the standard QueryAttributesTask (see the Developer Help for tips on that).</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">The demo site for this page uses this custom task to query a water-well point layer for estimated yield. Choose a value from the drop-down list, and up to 50 features will be found. Notice that all features are immediately highlighted. Our custom task acts like the standard QueryAttributesTask, except that it highlights all features returned.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">Try it out: <a href="http://serverx.esri.com/QuerySelectTaskDemo/">http://serverx.esri.com/QuerySelectTaskDemo/</a>. </p><h2>Discussion</h2><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">You can do other interesting things with the Results of the task. For instance, you could add a hyperlink to the task results output by adding the &lt;a href&hellip;&gt; tag to the DataSet&rsquo;s DataSetName property, or to the DataTable.TableName. The hyperlink is displayed in the tree of the task results. You can also modify the DataTable itself, such as by hiding columns you don&rsquo;t want displayed. Another example would be to display the results as a table, by creating a GridView from the DataTable and getting the HTML output from the GridView. You&rsquo;d then create a new TaskResultsNode, add the output to that, and set it as the Results instead of the DataSet.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">You might be tempted to customize other aspects of tasks, such as modifying the task&rsquo;s user interface. Although some customizations are possible, you&rsquo;ll probably find that in many cases it would be easier to author your own task from scratch. The Developer Help has a good discussion of writing tasks, and the Web ADF has a couple of samples that can help get you started.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">You might have noticed that the task user interface does not have the look-and-feel of other tasks&mdash;the colors, fonts, etc. The standard tasks have properties defined in the Theme of the website, specifically in the Default.skin file. If you want the same look-and-feel of the standard tasks, you can create your own control skin by copying properties from one of the standard tasks in Default.skin.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">We haven&rsquo;t discussed how to make our custom task available within Manager, so that non-programmers could use your task. This is a much more complex chore than adding the task to Visual Studio. Tasks are configured in Manager using a separate class called a web configurator. The standard task&rsquo;s web configurators are hard-coded to output information specifically for that task. It is not possible to easily modify them to instead output tags and properties for tasks that extend them. It would be necessary to rewrite most or all of the web configurator in order for it to properly output your task from Manager. The Developer Help has information on writing web configurators, if you are ambitious.</p><p class="MsoNormal">&nbsp;</p><p class="MsoNormal">Download the code for this sample: </p><p class="MsoNormal" style="margin-left:0.5in;text-indent:-0.25in;">&lt;!--[if !supportLists]--&gt;<span>-<span style="font:7pt 'Times New Roman';font-size-adjust:none;font-stretch:normal;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>&lt;!--[endif]--&gt;<a href="http://serverx.esri.com/blogimages/Feb-12-2007/QuerySelectTaskVB.zip">QuerySelectTaskVB.zip</a> (VB source code)</p><p class="MsoNormal" style="margin-left:0.5in;text-indent:-0.25in;">&lt;!--[if !supportLists]--&gt;<span>-<span style="font:7pt 'Times New Roman';font-size-adjust:none;font-stretch:normal;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>&lt;!--[endif]--&gt;<a href="http://serverx.esri.com/blogimages/Feb-12-2007/QuerySelectTaskCS.zip">QuerySelectTaskCS.zip</a> (C# source code)</p><p class="MsoNormal">&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=94" width="1" height="1">";}i:9;a:11:{s:5:"title";s:65:"ArcGIS Server for the Microsoft .Net Framework 9.2 Service Pack 1";s:4:"link";s:142:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/archive/2007/01/31/ArcGIS-Server-for-the-Microsoft-.Net-Framework-9.2-Service-Pack-1.aspx";s:7:"pubdate";s:29:"Wed, 31 Jan 2007 16:50:00 GMT";s:4:"guid";s:39:"b60b3f0a-e2bd-4be5-8a18-822c697649ab:85";s:2:"dc";a:1:{s:7:"creator";s:6:"Jeremy";}s:5:"slash";a:1:{s:8:"comments";s:1:"4";}s:8:"comments";s:69:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/comments/85.aspx";s:3:"wfw";a:1:{s:10:"commentrss";s:78:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/commentrss.aspx?PostID=85";}s:11:"description";s:9971:"Anne Reuland of the Server Development team has contributed the following excellent detailed writeup on what is in service pack 1 for ArcGIS Server for the Microsoft .Net Framework 9.2.

<p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">There&rsquo;s a very good overview of
what&rsquo;s new in ArcGIS Server 9.2 on the <a href="http://support.esri.com/index.cfm?fa=knowledgebase.documentation.listDocs&amp;PID=66">ArcGIS
Server Product Documentation</a> page. Open the </span><span style="font-size:9.5pt;font-family:Arial;color:black;"><a href="http://support.esri.com/index.cfm?fa=knowledgebase.documentation.viewDoc&amp;PID=66&amp;MetaID=1203">Whats
New In ArcGIS Desktop 9.2</a> document; you&rsquo;ll need to enter your ESRI global
account. The Table of Contents has a listing for ArcGIS Server and ArcIMS. </span></p>

<p class="MsoNormal"><span style="font-size:9.5pt;font-family:Arial;color:black;">I&rsquo;ve had several folks
ask for an overview on what&rsquo;s included in our Service Pack 1 release. </span><span style="font-size:10pt;font-family:Arial;">The main purpose of the ArcGIS
Server for the Microsoft .Net Framework 9.2 Service Pack 1 release was to
address support issues with Internet Explorer 7. The problems we saw with ArcGIS
Server 9.2 Final and Internet Explorer 7 were display problems with the map or
Web Mapping Application related to certain tools and changes to the application
layout. We also found formatting problems with buttons and panels in the Web
Mapping Application, Manager, and several samples in our Software Developer Kit.
Here is the full list of bug fixes for Internet Explorer 7 support:</span></p>

<ul><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005055 - Samples: In IE7, HTML buttons without a
     defined width will span the width of the browser. </span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005056 - Samples: In IE7, resizable divs should not
     define a width or height. </span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005539 - When using the Web Mapping Application in
     Internet Explorer 7, clicking the FullExtent or Magnifier tool causes the
     page to go blank. </span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005540 - When using the Web Mapping Application in
     Internet Explorer 7, docking a floating panel causes the page to go blank.
     </span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005564 - When running Manager in an Internet
     Explorer 7 browser, the Apply button on the Preview Layers tab may be
     partially obscured or missing completely. </span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005565 - When running Manager in an Internet
     Explorer 7 browser, the &#39;Preview Map Service&#39; panel is excessively wide. </span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005566 - When running Manager in an Internet
     Explorer 7 browser and configuring a task, the message informing the user
     that a supporting service is required does not display. </span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005567 - When running Manager in an Internet
     Explorer 7 browser and editing an existing application, the Configure
     button on the Tasks panel is partially obscured. </span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005569 - After digitizing a new feature with the
     Geoprocessing Task in Internet Explorer 7, the Help button, Submit button
     and selection of features will not work until clicked twice. </span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005602 - Visual Studio 2005 SDK help system
     displays&nbsp;with incorrect style and formatting when viewed on a machine
     with Internet Explorer 7 installed. </span></li></ul>

<p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">Once you install Service Pack 1,
newly created web applications will take advantage of these fixes for Internet
Explorer 7. If you have already built applications with Manager or the Web
Mapping Application template that you would like to update with these fixes, we
have written a migration utility that will make these changes to your Web
Mapping applications. You can download the <a href="http://support.esri.com/index.cfm?fa=downloads.samplesUtilities.viewSample&amp;PID=74&amp;MetaID=1240">migration
utility</a> from our support site. </span></p>

<p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">We&rsquo;re always looking to improve
performance for the web applications and web services. Jeremy has already
posted about the changes to with map cache image formats to support JGP, PNG8,
and PNG32. These changes allow you to choose the image format that works best
for your application&rsquo;s functionality and performance needs.<span>&nbsp; </span></span></p>

<p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">Other performance improvements made
at Service Pack 1 affect web service authentication and geocoding with ArcWeb
Services. In the Web Mapping Application, we made improvements on how fast the
map and task results are initialized. These bug fixes are:</span></p>

<ul><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005590 - Improve&nbsp;Web services authentication
     performance. </span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005598 - Optimize the display of task results when
     using ArcGIS Server Internet resources. </span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005623 - Optimize initialization within the Map
     control</span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005619 - Optimize geocoding with ArcWeb Services
     resources. <span>&nbsp;</span></span></li></ul>

<p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">When using caches map services, if
you have secured both your map service and the cache directories that hold your
map tiles, Service Pack 1 includes a fix to allow the Web Mapping Application
to access those secured tile directories without prompting the end-user of the
application for a username and password. Once a username and password has been
specified during creation of the Web Mapping Application, that account will be
used to access the secured map service and the secured tile directories. The
bug fix for this change is: </span></p>

<ul><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005541 - Use the Identity information provided when
     defining a map resource to access cache directories&nbsp;that&nbsp;have
     been secured. </span></li></ul>

<p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">If you are using ArcWeb Services in
your Web Mapping Application, you may have been affected by this bug fixed at
Service Pack 1:</span></p>

<ul><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005593 - ArcWeb services randomly return the error
     &#39;The underlying connection was closed: A connection that was expected to
     be kept alive was closed by the server&#39;. </span></li></ul>

<p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">We also fixed problems with some of
the query operators for the Query Attributes task at Service Pack 1. :</span></p>

<ul><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005323 - Web applications containing a Query Task
     expression using either the &lt; or &lt;= operators will fail to build. </span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005571 - Web applications published from Manager
     containing a Query Task expression using the LIKE operator do not return
     the correct results. </span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005572 - Web applications containing a Query Task
     expression using the != operator do not return the correct results. </span></li></ul>

<p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">In the Web Mapping Application,
after running a task to get a list of results, the Zoom To option for point
features was not zooming in far enough. This problem was addressed at Service
Pack 1 by adding a property named ZoomToPointFactor to the Task Results control
to allow you to control the zooming:</span></p>

<ul><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005594 - Add a ZoomToPointFactor property to the
     TaskResults control to specify the scale change when using the ZoomTo
     context menu option. </span></li></ul>

<p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">Also in the Web Mapping Application,
fixes were made to ensure the scale bar displays in the expected location:</span></p>

<ul><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005622 &ndash; Fix cases where the Scalebar is displayed
     outside the&nbsp;Map control on initial startup of the Web Mapping
     Application. </span></li></ul>

<p class="MsoNormal"><span style="font-size:9.5pt;font-family:Arial;color:black;">You can get the full list
of <a href="http://support.esri.com/index.cfm?fa=downloads.patchesServicePacks.viewPatch&amp;PID=66&amp;MetaID=1224#issues">issues</a>
that were addressed on the Service Pack page.</span><span style="font-size:10pt;font-family:Arial;"></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">&nbsp;</span></p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=85" width="1" height="1">";s:8:"category";s:16:"ArcGIS.NET92 SP1";s:7:"summary";s:9971:"Anne Reuland of the Server Development team has contributed the following excellent detailed writeup on what is in service pack 1 for ArcGIS Server for the Microsoft .Net Framework 9.2.

<p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">There&rsquo;s a very good overview of
what&rsquo;s new in ArcGIS Server 9.2 on the <a href="http://support.esri.com/index.cfm?fa=knowledgebase.documentation.listDocs&amp;PID=66">ArcGIS
Server Product Documentation</a> page. Open the </span><span style="font-size:9.5pt;font-family:Arial;color:black;"><a href="http://support.esri.com/index.cfm?fa=knowledgebase.documentation.viewDoc&amp;PID=66&amp;MetaID=1203">Whats
New In ArcGIS Desktop 9.2</a> document; you&rsquo;ll need to enter your ESRI global
account. The Table of Contents has a listing for ArcGIS Server and ArcIMS. </span></p>

<p class="MsoNormal"><span style="font-size:9.5pt;font-family:Arial;color:black;">I&rsquo;ve had several folks
ask for an overview on what&rsquo;s included in our Service Pack 1 release. </span><span style="font-size:10pt;font-family:Arial;">The main purpose of the ArcGIS
Server for the Microsoft .Net Framework 9.2 Service Pack 1 release was to
address support issues with Internet Explorer 7. The problems we saw with ArcGIS
Server 9.2 Final and Internet Explorer 7 were display problems with the map or
Web Mapping Application related to certain tools and changes to the application
layout. We also found formatting problems with buttons and panels in the Web
Mapping Application, Manager, and several samples in our Software Developer Kit.
Here is the full list of bug fixes for Internet Explorer 7 support:</span></p>

<ul><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005055 - Samples: In IE7, HTML buttons without a
     defined width will span the width of the browser. </span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005056 - Samples: In IE7, resizable divs should not
     define a width or height. </span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005539 - When using the Web Mapping Application in
     Internet Explorer 7, clicking the FullExtent or Magnifier tool causes the
     page to go blank. </span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005540 - When using the Web Mapping Application in
     Internet Explorer 7, docking a floating panel causes the page to go blank.
     </span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005564 - When running Manager in an Internet
     Explorer 7 browser, the Apply button on the Preview Layers tab may be
     partially obscured or missing completely. </span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005565 - When running Manager in an Internet
     Explorer 7 browser, the &#39;Preview Map Service&#39; panel is excessively wide. </span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005566 - When running Manager in an Internet
     Explorer 7 browser and configuring a task, the message informing the user
     that a supporting service is required does not display. </span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005567 - When running Manager in an Internet
     Explorer 7 browser and editing an existing application, the Configure
     button on the Tasks panel is partially obscured. </span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005569 - After digitizing a new feature with the
     Geoprocessing Task in Internet Explorer 7, the Help button, Submit button
     and selection of features will not work until clicked twice. </span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005602 - Visual Studio 2005 SDK help system
     displays&nbsp;with incorrect style and formatting when viewed on a machine
     with Internet Explorer 7 installed. </span></li></ul>

<p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">Once you install Service Pack 1,
newly created web applications will take advantage of these fixes for Internet
Explorer 7. If you have already built applications with Manager or the Web
Mapping Application template that you would like to update with these fixes, we
have written a migration utility that will make these changes to your Web
Mapping applications. You can download the <a href="http://support.esri.com/index.cfm?fa=downloads.samplesUtilities.viewSample&amp;PID=74&amp;MetaID=1240">migration
utility</a> from our support site. </span></p>

<p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">We&rsquo;re always looking to improve
performance for the web applications and web services. Jeremy has already
posted about the changes to with map cache image formats to support JGP, PNG8,
and PNG32. These changes allow you to choose the image format that works best
for your application&rsquo;s functionality and performance needs.<span>&nbsp; </span></span></p>

<p class="MsoNormal">&nbsp;</p><p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">Other performance improvements made
at Service Pack 1 affect web service authentication and geocoding with ArcWeb
Services. In the Web Mapping Application, we made improvements on how fast the
map and task results are initialized. These bug fixes are:</span></p>

<ul><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005590 - Improve&nbsp;Web services authentication
     performance. </span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005598 - Optimize the display of task results when
     using ArcGIS Server Internet resources. </span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005623 - Optimize initialization within the Map
     control</span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005619 - Optimize geocoding with ArcWeb Services
     resources. <span>&nbsp;</span></span></li></ul>

<p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">When using caches map services, if
you have secured both your map service and the cache directories that hold your
map tiles, Service Pack 1 includes a fix to allow the Web Mapping Application
to access those secured tile directories without prompting the end-user of the
application for a username and password. Once a username and password has been
specified during creation of the Web Mapping Application, that account will be
used to access the secured map service and the secured tile directories. The
bug fix for this change is: </span></p>

<ul><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005541 - Use the Identity information provided when
     defining a map resource to access cache directories&nbsp;that&nbsp;have
     been secured. </span></li></ul>

<p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">If you are using ArcWeb Services in
your Web Mapping Application, you may have been affected by this bug fixed at
Service Pack 1:</span></p>

<ul><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005593 - ArcWeb services randomly return the error
     &#39;The underlying connection was closed: A connection that was expected to
     be kept alive was closed by the server&#39;. </span></li></ul>

<p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">We also fixed problems with some of
the query operators for the Query Attributes task at Service Pack 1. :</span></p>

<ul><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005323 - Web applications containing a Query Task
     expression using either the &lt; or &lt;= operators will fail to build. </span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005571 - Web applications published from Manager
     containing a Query Task expression using the LIKE operator do not return
     the correct results. </span></li><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005572 - Web applications containing a Query Task
     expression using the != operator do not return the correct results. </span></li></ul>

<p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">In the Web Mapping Application,
after running a task to get a list of results, the Zoom To option for point
features was not zooming in far enough. This problem was addressed at Service
Pack 1 by adding a property named ZoomToPointFactor to the Task Results control
to allow you to control the zooming:</span></p>

<ul><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005594 - Add a ZoomToPointFactor property to the
     TaskResults control to specify the scale change when using the ZoomTo
     context menu option. </span></li></ul>

<p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">Also in the Web Mapping Application,
fixes were made to ensure the scale bar displays in the expected location:</span></p>

<ul><li class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">NIM005622 &ndash; Fix cases where the Scalebar is displayed
     outside the&nbsp;Map control on initial startup of the Web Mapping
     Application. </span></li></ul>

<p class="MsoNormal"><span style="font-size:9.5pt;font-family:Arial;color:black;">You can get the full list
of <a href="http://support.esri.com/index.cfm?fa=downloads.patchesServicePacks.viewPatch&amp;PID=66&amp;MetaID=1224#issues">issues</a>
that were addressed on the Service Pack page.</span><span style="font-size:10pt;font-family:Arial;"></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;">&nbsp;</span></p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=85" width="1" height="1">";}i:10;a:11:{s:5:"title";s:28:"ArcGIS Server Code Challenge";s:4:"link";s:105:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/archive/2007/01/24/ArcGIS-Server-Code-Challenge.aspx";s:7:"pubdate";s:29:"Wed, 24 Jan 2007 18:45:00 GMT";s:4:"guid";s:39:"b60b3f0a-e2bd-4be5-8a18-822c697649ab:80";s:2:"dc";a:1:{s:7:"creator";s:6:"Jeremy";}s:5:"slash";a:1:{s:8:"comments";s:1:"0";}s:8:"comments";s:69:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/comments/80.aspx";s:3:"wfw";a:1:{s:10:"commentrss";s:78:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/commentrss.aspx?PostID=80";}s:11:"description";s:1226:"<p>Hey everyone.&nbsp; I hope to see you in Palm Springs at the <a href="http://www.esri.com/events/devsummit/index.html" target="_blank">2007 ESRI Developer&#39;s Summit</a>. <br />
</p>
<p>If you have not heard already, there is going to be an ArcGIS Server Code Challenge.&nbsp; Give it a shot and let us know if you have any questions. <br />
</p>

<p><em><span style="font-size:10pt;">Share your development creativity and expertise 
with the GIS developer community by submitting your original code sample to the 
ArcGIS Server Code Challenge!&nbsp; </span></em><span style="font-size:10pt;"><em>You and your peers will have an opportunity to 
review and vote for the top three entries based on originality, creativity, 
applicability, and relevance of the code sample. Entries could include a simple 
task or tool or an attribute or spatial query.&nbsp; </em></span></p>
<p><span style="font-size:10pt;">Read more on the <a href="http://www.esri.com/events/devsummit/events/dev_challenge.html" title="code challenge" target="_blank">ArcGIS Server Code Challenge</a>.&nbsp; </span><br />
&nbsp;</p>
<p>Jeremy&nbsp;</p>
<p>&nbsp;</p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=80" width="1" height="1">";s:8:"category";s:22:"ArcGISDeveloper Summit";s:7:"summary";s:1226:"<p>Hey everyone.&nbsp; I hope to see you in Palm Springs at the <a href="http://www.esri.com/events/devsummit/index.html" target="_blank">2007 ESRI Developer&#39;s Summit</a>. <br />
</p>
<p>If you have not heard already, there is going to be an ArcGIS Server Code Challenge.&nbsp; Give it a shot and let us know if you have any questions. <br />
</p>

<p><em><span style="font-size:10pt;">Share your development creativity and expertise 
with the GIS developer community by submitting your original code sample to the 
ArcGIS Server Code Challenge!&nbsp; </span></em><span style="font-size:10pt;"><em>You and your peers will have an opportunity to 
review and vote for the top three entries based on originality, creativity, 
applicability, and relevance of the code sample. Entries could include a simple 
task or tool or an attribute or spatial query.&nbsp; </em></span></p>
<p><span style="font-size:10pt;">Read more on the <a href="http://www.esri.com/events/devsummit/events/dev_challenge.html" title="code challenge" target="_blank">ArcGIS Server Code Challenge</a>.&nbsp; </span><br />
&nbsp;</p>
<p>Jeremy&nbsp;</p>
<p>&nbsp;</p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=80" width="1" height="1">";}i:11;a:11:{s:5:"title";s:43:"Antialiasing with multiple cached resources";s:4:"link";s:120:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/archive/2007/01/19/Antialiasing-with-multiple-cached-resources.aspx";s:7:"pubdate";s:29:"Fri, 19 Jan 2007 21:03:00 GMT";s:4:"guid";s:39:"b60b3f0a-e2bd-4be5-8a18-822c697649ab:77";s:2:"dc";a:1:{s:7:"creator";s:6:"Jeremy";}s:5:"slash";a:1:{s:8:"comments";s:1:"0";}s:8:"comments";s:69:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/comments/77.aspx";s:3:"wfw";a:1:{s:10:"commentrss";s:78:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/commentrss.aspx?PostID=77";}s:11:"description";s:4797:"<p>Combining multiple cached map services is one of the more powerful aspects of the ADF for ArcGIS Server.&nbsp; High performance mapping applications can be built off of multiple fused cached map services combined within the ADF.&nbsp; Lets build on the cached aerial photography <a href="http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/archive/2007/01/03/ArcGIS-Server-Service-Pack-1.aspx" target="_blank">example</a> from the other day and add a cached dataset of a street network.&nbsp; In order to get the best performance when combining cached datasets in the Web ADF for the Microsoft .NET Framework you need to ensure that your cache configurations are identical (same scales, projection, tile size, etc) and that the map services share similar dataframe extents.&nbsp; When building a map cache you have the option of taking advantage of <a href="http://en.wikipedia.org/wiki/Anti-aliasing" target="_blank">Antialiasing</a> to smooth the edges of labels and lines for improved display quality).&nbsp; Of course you want to have smooth lines and labels!&nbsp; So what does antialiasing really do?&nbsp; Let&#39;s look at some comparisons of similar tiles with and without antialiasing.</p>
<p><img alt="No Antialiasing" border="1" height="256" src="http://serverx.esri.com/arcgiscache/DG_County_roads_noa/Layers/_alllayers/L02/R00000a3c/C000009c8.png" title="No Antialiasing" width="256" />&nbsp;&nbsp;&nbsp; <img alt="Yes Antialiasing" border="1" height="256" src="http://serverx.esri.com/arcgiscache/DG_County_roads_yesA_backgroundwhite/Layers/_alllayers/L02/R00000a3c/C000009c8.png" title="Yes Antialiasing" width="256" /></p>
<p>The image on the left is without antialiasing enabled.&nbsp; The image to the right has been built using antialiasing.&nbsp; See the difference?&nbsp; The image with antialiasing of the <a href="http://www.kansasgis.org/catalog/catalog.cfm" target="_blank">2000 Census Roadways</a> dataset looks crisper, not as choppy.&nbsp;&nbsp; Antialiasing is designed to minimize jagged, blocky aliasing when representing higher resolution data at a lower resolution.&nbsp; So let&#39;s see what happens when we publish the data on top of our ortho cache...</p>
<p><img align="middle" alt="Cache combination with AntiAliasing" border="1" height="274" src="http://serverx.esri.com/blogimages/jan-18-2007/cachewithantialiasing.png" title="Cache combination with AntiAliasing" width="277" />&nbsp;</p>
<p>&nbsp;Wait a minute...where did my roads go?&nbsp; Let&#39;s look at the same area without antialiasing...</p>
<p>&nbsp;<img alt="Cache combination without antialiasing." border="1" height="273" src="http://serverx.esri.com/blogimages/jan-18-2007/cachewithoutantialiasing.png" title="Cache combination without antialiasing." width="251" /></p>
<p>&nbsp;</p>
<p>That is what I get for implementing something without understanding the logic behind the process!&nbsp; The way we have implemented antialiasing from ArcGIS server is to generate tiles four times as large as the specified tile size so that we can average the RGB color of the four pixels that intersect the feature or label.&nbsp;&nbsp; So instead of a tiled pixel being completely black or not, it will be an average of the subpixels contained by the pixel.&nbsp; What does it average if it is just a line that is either black or not black?&nbsp; It uses the background color of the dataframe to compute the average pixel value.&nbsp; The background color is used as the transparent color by cache generation process and if you don&#39;t set the background color of your map the default is to set the background equal to 253,253,253 or almost white.&nbsp; So in my example I have ended up with gray roads (which don&#39;t show up well on a dark image) instead of what I originally designed as black roads.&nbsp; If I rebuild my map cache of my road dataset with a background color set to an average color within the image of the ortho tile (RGB: 129,129,116--pulled from <a href="http://www.sharewareconnection.com/download-colorpickup-from-sharecon.html" target="_blank">this</a> slick freeware tool) I end up with a tile that looks like this...</p>
<p>&nbsp;<img border="1" height="256" src="http://serverx.esri.com/arcgiscache/DG_County_roads_yesA_backgroundDark/Layers/_alllayers/L02/R00000a3c/C000009c8.png" width="256" />&nbsp; <img border="1" height="306" src="http://serverx.esri.com/blogimages/jan-18-2007/cachewithantialiasing_darkbackground.png" width="294" /></p>
<p>&nbsp;</p>
<p>Try the application with each of the antialiasing options here: &nbsp; <a href="http://serverx.esri.com/antialiasingexamples/" target="_blank">http://serverx.esri.com/antialiasingexamples/</a></p>
<p>Jeremy&nbsp;</p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=77" width="1" height="1">";s:8:"category";s:22:"ArcGISADF.NETMap Cache";s:7:"summary";s:4797:"<p>Combining multiple cached map services is one of the more powerful aspects of the ADF for ArcGIS Server.&nbsp; High performance mapping applications can be built off of multiple fused cached map services combined within the ADF.&nbsp; Lets build on the cached aerial photography <a href="http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/archive/2007/01/03/ArcGIS-Server-Service-Pack-1.aspx" target="_blank">example</a> from the other day and add a cached dataset of a street network.&nbsp; In order to get the best performance when combining cached datasets in the Web ADF for the Microsoft .NET Framework you need to ensure that your cache configurations are identical (same scales, projection, tile size, etc) and that the map services share similar dataframe extents.&nbsp; When building a map cache you have the option of taking advantage of <a href="http://en.wikipedia.org/wiki/Anti-aliasing" target="_blank">Antialiasing</a> to smooth the edges of labels and lines for improved display quality).&nbsp; Of course you want to have smooth lines and labels!&nbsp; So what does antialiasing really do?&nbsp; Let&#39;s look at some comparisons of similar tiles with and without antialiasing.</p>
<p><img alt="No Antialiasing" border="1" height="256" src="http://serverx.esri.com/arcgiscache/DG_County_roads_noa/Layers/_alllayers/L02/R00000a3c/C000009c8.png" title="No Antialiasing" width="256" />&nbsp;&nbsp;&nbsp; <img alt="Yes Antialiasing" border="1" height="256" src="http://serverx.esri.com/arcgiscache/DG_County_roads_yesA_backgroundwhite/Layers/_alllayers/L02/R00000a3c/C000009c8.png" title="Yes Antialiasing" width="256" /></p>
<p>The image on the left is without antialiasing enabled.&nbsp; The image to the right has been built using antialiasing.&nbsp; See the difference?&nbsp; The image with antialiasing of the <a href="http://www.kansasgis.org/catalog/catalog.cfm" target="_blank">2000 Census Roadways</a> dataset looks crisper, not as choppy.&nbsp;&nbsp; Antialiasing is designed to minimize jagged, blocky aliasing when representing higher resolution data at a lower resolution.&nbsp; So let&#39;s see what happens when we publish the data on top of our ortho cache...</p>
<p><img align="middle" alt="Cache combination with AntiAliasing" border="1" height="274" src="http://serverx.esri.com/blogimages/jan-18-2007/cachewithantialiasing.png" title="Cache combination with AntiAliasing" width="277" />&nbsp;</p>
<p>&nbsp;Wait a minute...where did my roads go?&nbsp; Let&#39;s look at the same area without antialiasing...</p>
<p>&nbsp;<img alt="Cache combination without antialiasing." border="1" height="273" src="http://serverx.esri.com/blogimages/jan-18-2007/cachewithoutantialiasing.png" title="Cache combination without antialiasing." width="251" /></p>
<p>&nbsp;</p>
<p>That is what I get for implementing something without understanding the logic behind the process!&nbsp; The way we have implemented antialiasing from ArcGIS server is to generate tiles four times as large as the specified tile size so that we can average the RGB color of the four pixels that intersect the feature or label.&nbsp;&nbsp; So instead of a tiled pixel being completely black or not, it will be an average of the subpixels contained by the pixel.&nbsp; What does it average if it is just a line that is either black or not black?&nbsp; It uses the background color of the dataframe to compute the average pixel value.&nbsp; The background color is used as the transparent color by cache generation process and if you don&#39;t set the background color of your map the default is to set the background equal to 253,253,253 or almost white.&nbsp; So in my example I have ended up with gray roads (which don&#39;t show up well on a dark image) instead of what I originally designed as black roads.&nbsp; If I rebuild my map cache of my road dataset with a background color set to an average color within the image of the ortho tile (RGB: 129,129,116--pulled from <a href="http://www.sharewareconnection.com/download-colorpickup-from-sharecon.html" target="_blank">this</a> slick freeware tool) I end up with a tile that looks like this...</p>
<p>&nbsp;<img border="1" height="256" src="http://serverx.esri.com/arcgiscache/DG_County_roads_yesA_backgroundDark/Layers/_alllayers/L02/R00000a3c/C000009c8.png" width="256" />&nbsp; <img border="1" height="306" src="http://serverx.esri.com/blogimages/jan-18-2007/cachewithantialiasing_darkbackground.png" width="294" /></p>
<p>&nbsp;</p>
<p>Try the application with each of the antialiasing options here: &nbsp; <a href="http://serverx.esri.com/antialiasingexamples/" target="_blank">http://serverx.esri.com/antialiasingexamples/</a></p>
<p>Jeremy&nbsp;</p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=77" width="1" height="1">";}i:12;a:11:{s:5:"title";s:44:"Embedding globe services within other globes";s:4:"link";s:121:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/archive/2007/01/18/Embedding-globe-services-within-other-globes.aspx";s:7:"pubdate";s:29:"Thu, 18 Jan 2007 16:54:00 GMT";s:4:"guid";s:39:"b60b3f0a-e2bd-4be5-8a18-822c697649ab:75";s:2:"dc";a:1:{s:7:"creator";s:6:"Jeremy";}s:5:"slash";a:1:{s:8:"comments";s:1:"0";}s:8:"comments";s:69:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/comments/75.aspx";s:3:"wfw";a:1:{s:10:"commentrss";s:78:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/commentrss.aspx?PostID=75";}s:11:"description";s:3122:"<p>James posted a <a href="http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/archive/2006/12/14/Publishing-globe-services-to-enhance-your-ArcGIS-Explorer-base-map.aspx#67" target="_blank">comment</a> regarding publishing Globe services with other embedded Globe services.&nbsp; This can be done, but it is not the recommended workflow.&nbsp; Sterling from the Server Dev team wrote up this response.<br />
</p>
<p>&nbsp;</p>
<strong><span style="font-size:10pt;font-family:Arial;"></span></strong><span style="font-size:10pt;font-family:Arial;">As you
create 3D views using ArcGIS Explorer and ArcGlobe, you may want to use a layer
from someone else&rsquo;s globe service in addition to your own. For example, you
might want to get your base layers from an <a href="http://arcgisonline.esri.com" target="_blank">ArcGIS Online</a> globe
service, and your thematic layers from your own globe service.</span>

<p class="MsoNormal"><strong><span style="font-size:10pt;font-family:Arial;">&nbsp;</span></strong></p>

<p class="MsoNormal"><em><span style="font-size:10pt;font-family:Arial;">Resist the temptation to create a
new globe service that embeds one or more other globe services.</span></em><span style="font-size:10pt;font-family:Arial;"> Your client applications will
perform better and you will avoid redundancy of caches on your server if you have
the clients connect to the globe services directly. The workflow below explains
how you can create an easily-distributable globe that will allow clients to
connect directly to all of the globe services it contains. This example uses an
ArcGIS Online service, but you could substitute any globe service that you
might want to embed in your own globes:</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;color:black;">&nbsp;</span></p>

<ol style="margin-top:0in;">
<li class="MsoNormal" style="color:black;"><span style="font-size:10pt;font-family:Arial;">Create a new ArcGIS Explorer
     map (NMF) or ArcGlobe document (3DD) and add the ArcGIS Online service</span></li>
<li class="MsoNormal" style="color:black;"><span style="font-size:10pt;font-family:Arial;">Add your local data to a
     separate ArcGlobe document and publish it as an ArcGIS Server globe
     service. </span></li>
<li class="MsoNormal" style="color:black;"><span style="font-size:10pt;font-family:Arial;">Add your globe service to the
     ArcGIS Explorer map or ArcGlobe document that you created in Step 1.</span></li>
<li class="MsoNormal" style="color:black;"><span style="font-size:10pt;font-family:Arial;">Distribute the ArcGIS Explorer
     map or ArcGlobe document. Optionally, you can publish the ArcGlobe
     document as a PMF file so that clients with ArcReader can view the globe.
     Both ArcGIS Explorer and ArcReader are available as free downloads from
     ESRI.</span></li>
</ol>

<p><img border="1" height="270" src="http://serverx.esri.com/blogimages/jan-18-2007/globe_within_globe_small.png" width="568" /><br />
&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=75" width="1" height="1">";s:8:"category";s:35:"ArcGISArcGIS ExplorerGlobe Services";s:7:"summary";s:3122:"<p>James posted a <a href="http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/archive/2006/12/14/Publishing-globe-services-to-enhance-your-ArcGIS-Explorer-base-map.aspx#67" target="_blank">comment</a> regarding publishing Globe services with other embedded Globe services.&nbsp; This can be done, but it is not the recommended workflow.&nbsp; Sterling from the Server Dev team wrote up this response.<br />
</p>
<p>&nbsp;</p>
<strong><span style="font-size:10pt;font-family:Arial;"></span></strong><span style="font-size:10pt;font-family:Arial;">As you
create 3D views using ArcGIS Explorer and ArcGlobe, you may want to use a layer
from someone else&rsquo;s globe service in addition to your own. For example, you
might want to get your base layers from an <a href="http://arcgisonline.esri.com" target="_blank">ArcGIS Online</a> globe
service, and your thematic layers from your own globe service.</span>

<p class="MsoNormal"><strong><span style="font-size:10pt;font-family:Arial;">&nbsp;</span></strong></p>

<p class="MsoNormal"><em><span style="font-size:10pt;font-family:Arial;">Resist the temptation to create a
new globe service that embeds one or more other globe services.</span></em><span style="font-size:10pt;font-family:Arial;"> Your client applications will
perform better and you will avoid redundancy of caches on your server if you have
the clients connect to the globe services directly. The workflow below explains
how you can create an easily-distributable globe that will allow clients to
connect directly to all of the globe services it contains. This example uses an
ArcGIS Online service, but you could substitute any globe service that you
might want to embed in your own globes:</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:Arial;color:black;">&nbsp;</span></p>

<ol style="margin-top:0in;">
<li class="MsoNormal" style="color:black;"><span style="font-size:10pt;font-family:Arial;">Create a new ArcGIS Explorer
     map (NMF) or ArcGlobe document (3DD) and add the ArcGIS Online service</span></li>
<li class="MsoNormal" style="color:black;"><span style="font-size:10pt;font-family:Arial;">Add your local data to a
     separate ArcGlobe document and publish it as an ArcGIS Server globe
     service. </span></li>
<li class="MsoNormal" style="color:black;"><span style="font-size:10pt;font-family:Arial;">Add your globe service to the
     ArcGIS Explorer map or ArcGlobe document that you created in Step 1.</span></li>
<li class="MsoNormal" style="color:black;"><span style="font-size:10pt;font-family:Arial;">Distribute the ArcGIS Explorer
     map or ArcGlobe document. Optionally, you can publish the ArcGlobe
     document as a PMF file so that clients with ArcReader can view the globe.
     Both ArcGIS Explorer and ArcReader are available as free downloads from
     ESRI.</span></li>
</ol>

<p><img border="1" height="270" src="http://serverx.esri.com/blogimages/jan-18-2007/globe_within_globe_small.png" width="568" /><br />
&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=75" width="1" height="1">";}i:13;a:11:{s:5:"title";s:28:"ArcGIS Server Service Pack 1";s:4:"link";s:105:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/archive/2007/01/03/ArcGIS-Server-Service-Pack-1.aspx";s:7:"pubdate";s:29:"Thu, 04 Jan 2007 00:47:00 GMT";s:4:"guid";s:39:"b60b3f0a-e2bd-4be5-8a18-822c697649ab:60";s:2:"dc";a:1:{s:7:"creator";s:6:"Jeremy";}s:5:"slash";a:1:{s:8:"comments";s:2:"10";}s:8:"comments";s:69:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/comments/60.aspx";s:3:"wfw";a:1:{s:10:"commentrss";s:78:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/commentrss.aspx?PostID=60";}s:11:"description";s:2281:"<p>ArcGIS Server Service Pack 1 is out and available for <a href="http://support.esri.com/index.cfm?fa=downloads.patchesServicePacks.viewPatch&amp;PID=66&amp;MetaID=1224" target="_blank">download</a>.&nbsp; It has many fixes along with some very key enhancements.&nbsp; One of the biggest enhancements is the ability to create map caches in different image type formats.&nbsp; At 9.2 final you only had the option of creating PNG24 images for you map cache.&nbsp; While PNG24 images are visually appealing and work well with images with a lot of vector data they are inefficient for continuous raster images like aerial photography or satellite imagery.&nbsp; For example here are two tiles of orthophotography in both png (on the left) and jpeg (on the right):</p>
<p><img alt="PNG" border="1" height="256" src="http://serverx.esri.com/arcgiscache/DGCountyAerialPhotos/Layers/_alllayers/L05/R000051f3/C00004e39.png" title="PNG" width="256" />&nbsp;&nbsp;&nbsp; <img alt="JPEG" border="1" height="256" src="http://serverx.esri.com/arcgiscache/DGCountyAerialPhotos/Layers/_alllayers/L05/R000051f3/C00004e39.jpg" title="JPEG" width="256" /></p>
<p>&nbsp;</p>
<p>The JPEG tile is 16.39kb.&nbsp; The PNG tile is 85.93kb.&nbsp; That makes the JPEG in this case 1/5 the size of the PNG.&nbsp; While that does not really make that much difference while you are on an internal network, it makes a big difference for web applications.&nbsp; It is important to note that JPEGs do not support transparency so PNG images would be ideal for map caches that need to be transparent (a roads cache on top of an ortho cache for example).&nbsp; <br />
</p>
<p>Try out a demo here:&nbsp; <a href="http://serverx.esri.com/dgaerialsws" target="_blank">http://serverx.esri.com/dgaerialsws</a></p>
<p>This example uses 2 meter <a href="http://www.kansasgis.org/catalog/catalog.cfm" target="_blank">FSA NAIP</a>
color imagery and six inch black and white orthophotos courtesy of the <a href="http://www.lawrenceks.org/infosystems/gis2.shtml" target="_blank">City of Lawrence, Kansas</a>.&nbsp; </p>
<p>Jeremy&nbsp;</p>
<p>&nbsp;</p>
<p><a href="http://serverx.esri.com/dgaerials" target="_blank"></a><br />
&nbsp;</p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=60" width="1" height="1">";s:8:"category";s:22:"ArcGISADF.NETMap Cache";s:7:"summary";s:2281:"<p>ArcGIS Server Service Pack 1 is out and available for <a href="http://support.esri.com/index.cfm?fa=downloads.patchesServicePacks.viewPatch&amp;PID=66&amp;MetaID=1224" target="_blank">download</a>.&nbsp; It has many fixes along with some very key enhancements.&nbsp; One of the biggest enhancements is the ability to create map caches in different image type formats.&nbsp; At 9.2 final you only had the option of creating PNG24 images for you map cache.&nbsp; While PNG24 images are visually appealing and work well with images with a lot of vector data they are inefficient for continuous raster images like aerial photography or satellite imagery.&nbsp; For example here are two tiles of orthophotography in both png (on the left) and jpeg (on the right):</p>
<p><img alt="PNG" border="1" height="256" src="http://serverx.esri.com/arcgiscache/DGCountyAerialPhotos/Layers/_alllayers/L05/R000051f3/C00004e39.png" title="PNG" width="256" />&nbsp;&nbsp;&nbsp; <img alt="JPEG" border="1" height="256" src="http://serverx.esri.com/arcgiscache/DGCountyAerialPhotos/Layers/_alllayers/L05/R000051f3/C00004e39.jpg" title="JPEG" width="256" /></p>
<p>&nbsp;</p>
<p>The JPEG tile is 16.39kb.&nbsp; The PNG tile is 85.93kb.&nbsp; That makes the JPEG in this case 1/5 the size of the PNG.&nbsp; While that does not really make that much difference while you are on an internal network, it makes a big difference for web applications.&nbsp; It is important to note that JPEGs do not support transparency so PNG images would be ideal for map caches that need to be transparent (a roads cache on top of an ortho cache for example).&nbsp; <br />
</p>
<p>Try out a demo here:&nbsp; <a href="http://serverx.esri.com/dgaerialsws" target="_blank">http://serverx.esri.com/dgaerialsws</a></p>
<p>This example uses 2 meter <a href="http://www.kansasgis.org/catalog/catalog.cfm" target="_blank">FSA NAIP</a>
color imagery and six inch black and white orthophotos courtesy of the <a href="http://www.lawrenceks.org/infosystems/gis2.shtml" target="_blank">City of Lawrence, Kansas</a>.&nbsp; </p>
<p>Jeremy&nbsp;</p>
<p>&nbsp;</p>
<p><a href="http://serverx.esri.com/dgaerials" target="_blank"></a><br />
&nbsp;</p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=60" width="1" height="1">";}i:14;a:11:{s:5:"title";s:56:"Using the Callback control framework with a map resource";s:4:"link";s:133:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/archive/2006/12/18/Using-the-Callback-control-framework-with-a-map-resource.aspx";s:7:"pubdate";s:29:"Mon, 18 Dec 2006 23:51:00 GMT";s:4:"guid";s:39:"b60b3f0a-e2bd-4be5-8a18-822c697649ab:46";s:2:"dc";a:1:{s:7:"creator";s:6:"Jeremy";}s:5:"slash";a:1:{s:8:"comments";s:1:"5";}s:8:"comments";s:69:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/comments/46.aspx";s:3:"wfw";a:1:{s:10:"commentrss";s:78:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/commentrss.aspx?PostID=46";}s:11:"description";s:9827:"<p>Let&#39;s build on the <a href="http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/archive/2006/12/18/Using-the-Callback-control-framework.aspx" target="_blank">sample</a> that Ryan put together and use the callback control framework to refresh a map control.&nbsp; In this case we need to send back callback results of the map control to the control being called back to (the callback button).&nbsp; To illustrate this lets add a map, map control, and a couple of Callback Button controls to the map design time in Microsoft&#39;s Visual Studio 2005.&nbsp; We want to give the user the ability to add and remove a dynamic dataset via the CallbackButtonCustomControl. <br />&nbsp;</p><p>To do this we need a method that adds a dynamic resource to the MapResourceManagerInstance.<br />&nbsp;</p><p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;">private</span><span style="font-size:10pt;font-family:'Courier New';"> <span style="color:blue;">void</span> createAndAddResource(<span style="color:blue;">string</span>
resourceName, <span style="color:teal;">GISResourceItemDefinition</span>
definition, <span style="color:blue;">bool</span> insertIntoBeginning)</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span>{</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:teal;">MapResourceItem</span>
resourceItem = <span style="color:blue;">new</span> <span style="color:teal;">MapResourceItem</span>();</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>resourceItem.Definition = definition;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>resourceItem.Name = resourceName;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>resourceItem.DisplaySettings = <span style="color:blue;">new</span> ESRI.ArcGIS.ADF.Web.<span style="color:teal;">DisplaySettings</span>();</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>resourceItem.DisplaySettings.Visible = <span style="color:blue;">true</span>;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>resourceItem.DisplaySettings.Transparency = 20;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>resourceItem.DisplaySettings.DisplayInTableOfContents
= <span style="color:blue;">false</span>;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>resourceItem.DisplaySettings.ImageDescriptor.TransparentBackground = <span style="color:blue;">true</span>;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>resourceItem.DisplaySettings.ImageDescriptor.TransparentColor =
System.Drawing.<span style="color:teal;">Color</span>.FromArgb(1, 2, 3);</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">if</span>
(insertIntoBeginning)</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp; </span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>{</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Map1.MapResourceManagerInstance.ResourceItems.Insert(0, resourceItem);</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">else</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Map1.MapResourceManagerInstance.ResourceItems.Add(resourceItem);</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>resourceItem.CreateResource();</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Map1.InitializeFunctionalities();</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span>}</span></p>

<p>&nbsp;</p><p>&nbsp;</p><p>Within the CallbackButton1_Clicked event we call the method to create and display the dynamic resource and then use the callback control framework to pass the CallbackResults from the map to the control.<br />&nbsp;

</p><p class="MsoNormal" style="margin-left:0.5in;"><span style="font-size:10pt;font-family:'Courier New';color:blue;">&nbsp; string</span><span style="font-size:10pt;font-family:'Courier New';"> resourceName = <span style="color:maroon;">&quot;Dynamic Data&quot;</span>;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:teal;">GISResourceItemDefinition</span>
definition = <span style="color:blue;">null</span>;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>definition = <span style="color:blue;">new</span>
<span style="color:teal;">GISResourceItemDefinition</span>();</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>definition.ResourceDefinition = <span style="color:maroon;">&quot;(default)@DGCountyAerialPhotos&quot;</span>;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>definition.DataSourceDefinition = <span style="color:maroon;">&quot;http://localhost/arcgis/services&quot;</span>;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>definition.DataSourceType = <span style="color:maroon;">&quot;ArcGIS Server Internet&quot;</span>;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>definition.DataSourceShared = <span style="color:blue;">true</span>;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; createAndAddResource(resourceName,
definition, <span style="color:blue;">false</span>);</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';">&nbsp;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">if</span>
(Map1.ImageBlendingMode == <span style="color:teal;">ImageBlendingMode</span>.WebTier)</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Map1.Refresh();</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">else</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Map1.RefreshResource(resourceName);</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>CallbackButton1.CallbackResults.CopyFrom(Map1.CallbackResults);</span></p>

<p>&nbsp;</p><p><br />So now we can add dynamic data to a map on a callback.</p><p>Try the <a href="http://serverx.esri.com/blogimages/DEC-18-2006/CallBackMap.zip">sample app</a> out here:&nbsp; <a href="http://serverx.esri.com/callbackbuttonsample/map.aspx" target="_blank">http://serverx.esri.com/callbackbuttonsample/map.aspx</a>&nbsp;</p><p>Jeremy&nbsp;</p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=46" width="1" height="1">";s:8:"category";s:19:"ADF.NETCode Snippet";s:7:"summary";s:9827:"<p>Let&#39;s build on the <a href="http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/archive/2006/12/18/Using-the-Callback-control-framework.aspx" target="_blank">sample</a> that Ryan put together and use the callback control framework to refresh a map control.&nbsp; In this case we need to send back callback results of the map control to the control being called back to (the callback button).&nbsp; To illustrate this lets add a map, map control, and a couple of Callback Button controls to the map design time in Microsoft&#39;s Visual Studio 2005.&nbsp; We want to give the user the ability to add and remove a dynamic dataset via the CallbackButtonCustomControl. <br />&nbsp;</p><p>To do this we need a method that adds a dynamic resource to the MapResourceManagerInstance.<br />&nbsp;</p><p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';color:blue;">private</span><span style="font-size:10pt;font-family:'Courier New';"> <span style="color:blue;">void</span> createAndAddResource(<span style="color:blue;">string</span>
resourceName, <span style="color:teal;">GISResourceItemDefinition</span>
definition, <span style="color:blue;">bool</span> insertIntoBeginning)</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span>{</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:teal;">MapResourceItem</span>
resourceItem = <span style="color:blue;">new</span> <span style="color:teal;">MapResourceItem</span>();</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>resourceItem.Definition = definition;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>resourceItem.Name = resourceName;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>resourceItem.DisplaySettings = <span style="color:blue;">new</span> ESRI.ArcGIS.ADF.Web.<span style="color:teal;">DisplaySettings</span>();</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>resourceItem.DisplaySettings.Visible = <span style="color:blue;">true</span>;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>resourceItem.DisplaySettings.Transparency = 20;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>resourceItem.DisplaySettings.DisplayInTableOfContents
= <span style="color:blue;">false</span>;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>resourceItem.DisplaySettings.ImageDescriptor.TransparentBackground = <span style="color:blue;">true</span>;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>resourceItem.DisplaySettings.ImageDescriptor.TransparentColor =
System.Drawing.<span style="color:teal;">Color</span>.FromArgb(1, 2, 3);</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">if</span>
(insertIntoBeginning)</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp; </span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>{</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Map1.MapResourceManagerInstance.ResourceItems.Insert(0, resourceItem);</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">else</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Map1.MapResourceManagerInstance.ResourceItems.Add(resourceItem);</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>resourceItem.CreateResource();</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Map1.InitializeFunctionalities();</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp; </span>}</span></p>

<p>&nbsp;</p><p>&nbsp;</p><p>Within the CallbackButton1_Clicked event we call the method to create and display the dynamic resource and then use the callback control framework to pass the CallbackResults from the map to the control.<br />&nbsp;

</p><p class="MsoNormal" style="margin-left:0.5in;"><span style="font-size:10pt;font-family:'Courier New';color:blue;">&nbsp; string</span><span style="font-size:10pt;font-family:'Courier New';"> resourceName = <span style="color:maroon;">&quot;Dynamic Data&quot;</span>;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:teal;">GISResourceItemDefinition</span>
definition = <span style="color:blue;">null</span>;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>definition = <span style="color:blue;">new</span>
<span style="color:teal;">GISResourceItemDefinition</span>();</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>definition.ResourceDefinition = <span style="color:maroon;">&quot;(default)@DGCountyAerialPhotos&quot;</span>;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>definition.DataSourceDefinition = <span style="color:maroon;">&quot;http://localhost/arcgis/services&quot;</span>;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>definition.DataSourceType = <span style="color:maroon;">&quot;ArcGIS Server Internet&quot;</span>;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>definition.DataSourceShared = <span style="color:blue;">true</span>;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; createAndAddResource(resourceName,
definition, <span style="color:blue;">false</span>);</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';">&nbsp;</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">if</span>
(Map1.ImageBlendingMode == <span style="color:teal;">ImageBlendingMode</span>.WebTier)</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Map1.Refresh();</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:blue;">else</span></span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Map1.RefreshResource(resourceName);</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}</span></p>

<p class="MsoNormal"><span style="font-size:10pt;font-family:'Courier New';"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>CallbackButton1.CallbackResults.CopyFrom(Map1.CallbackResults);</span></p>

<p>&nbsp;</p><p><br />So now we can add dynamic data to a map on a callback.</p><p>Try the <a href="http://serverx.esri.com/blogimages/DEC-18-2006/CallBackMap.zip">sample app</a> out here:&nbsp; <a href="http://serverx.esri.com/callbackbuttonsample/map.aspx" target="_blank">http://serverx.esri.com/callbackbuttonsample/map.aspx</a>&nbsp;</p><p>Jeremy&nbsp;</p><img src="http://serverx.esri.com/ESRIBlogs/aggbug.aspx?PostID=46" width="1" height="1">";}}s:7:"channel";a:5:{s:5:"title";s:30:"ArcGIS Server Development Blog";s:4:"link";s:65:"http://serverx.esri.com/ESRIBlogs/blogs/arcgisserver/default.aspx";s:2:"dc";a:1:{s:8:"language";s:2:"en";}s:9:"generator";s:38:"CommunityServer 2.1 (Build: 60809.935)";s:7:"tagline";N;}s:9:"textinput";a:0:{}s:5:"image";a:0:{}s:9:"feed_type";s:3:"RSS";s:12:"feed_version";s:3:"2.0";s:5:"stack";a:0:{}s:9:"inchannel";b:0;s:6:"initem";b:0;s:9:"incontent";b:0;s:11:"intextinput";b:0;s:7:"inimage";b:0;s:13:"current_field";s:0:"";s:17:"current_namespace";b:0;s:5:"ERROR";s:0:"";s:19:"_CONTENT_CONSTRUCTS";a:6:{i:0;s:7:"content";i:1;s:7:"summary";i:2;s:4:"info";i:3;s:5:"title";i:4;s:7:"tagline";i:5;s:9:"copyright";}s:13:"last_modified";s:31:"Wed, 09 May 2007 16:00:00 GMT
";s:4:"etag";s:21:"5/9/2007 9:00:00 AM
";}