O:9:"MagpieRSS":20:{s:6:"parser";i:0;s:12:"current_item";a:0:{}s:5:"items";a:10:{i:0;a:13:{s:5:"title";s:18:"Geodata on Mobiles";s:4:"link";s:59:"http://www.rajsingh.org/blog/2011/03/04/geodata-on-mobiles/";s:8:"comments";s:68:"http://www.rajsingh.org/blog/2011/03/04/geodata-on-mobiles/#comments";s:7:"pubdate";s:31:"Fri, 04 Mar 2011 21:56:54 +0000";s:2:"dc";a:1:{s:7:"creator";s:8:"rajsingh";}s:8:"category";s:39:"mass marketiphonemobileopenlayerswfswms";s:4:"guid";s:59:"http://www.rajsingh.org/blog/2011/03/04/geodata-on-mobiles/";s:11:"description";s:221:"I&#8217;m really excited about the work on a high-performance, rock solid mobile client for OGC map and data services. A code sprint on OpenLayers mobile version just finished up. I can&#8217;t wait to get it on my phone!";s:7:"content";a:1:{s:7:"encoded";s:355:"<p>I&#8217;m really excited about the work on a high-performance, rock solid mobile client for OGC map and data services. A <a href="http://wiki.osgeo.org/wiki/Lausanne_Code_Sprint_2011">code sprint</a> on <a href="http://trac.osgeo.org/openlayers/wiki/mobile">OpenLayers mobile</a> version just finished up. I can&#8217;t wait to get it on my phone!</p>
";}s:3:"wfw";a:1:{s:10:"commentrss";s:64:"http://www.rajsingh.org/blog/2011/03/04/geodata-on-mobiles/feed/";}s:5:"slash";a:1:{s:8:"comments";s:1:"0";}s:7:"summary";s:221:"I&#8217;m really excited about the work on a high-performance, rock solid mobile client for OGC map and data services. A code sprint on OpenLayers mobile version just finished up. I can&#8217;t wait to get it on my phone!";s:12:"atom_content";s:355:"<p>I&#8217;m really excited about the work on a high-performance, rock solid mobile client for OGC map and data services. A <a href="http://wiki.osgeo.org/wiki/Lausanne_Code_Sprint_2011">code sprint</a> on <a href="http://trac.osgeo.org/openlayers/wiki/mobile">OpenLayers mobile</a> version just finished up. I can&#8217;t wait to get it on my phone!</p>
";}i:1;a:13:{s:5:"title";s:42:"Handling Changes Over Time in Spatial Data";s:4:"link";s:83:"http://www.rajsingh.org/blog/2010/11/28/handling-changes-over-time-in-spatial-data/";s:8:"comments";s:92:"http://www.rajsingh.org/blog/2010/11/28/handling-changes-over-time-in-spatial-data/#comments";s:7:"pubdate";s:31:"Sun, 28 Nov 2010 15:25:37 +0000";s:2:"dc";a:1:{s:7:"creator";s:8:"rajsingh";}s:8:"category";s:21:"ogcgeoserverogcdocwfs";s:4:"guid";s:83:"http://www.rajsingh.org/blog/2010/11/28/handling-changes-over-time-in-spatial-data/";s:11:"description";s:215:"Great ideas in the Geoserver docs on how to do versioning, and other changes over time in a geospatial database, the right way &#8212; by extending WFS . http://geoserver.org/display/GEOS/Versioning+WFS+-+Extensions";s:7:"content";a:1:{s:7:"encoded";s:371:"<p>Great ideas in the Geoserver docs on how to do versioning, and other changes over time in a geospatial database, the right way &#8212; by extending <i><a href="http://www.opengeospatial.org/standards/wfs">WFS</a></i> .</p>
<p><a href="http://geoserver.org/display/GEOS/Versioning+WFS+-+Extensions">http://geoserver.org/display/GEOS/Versioning+WFS+-+Extensions</a></p>
";}s:3:"wfw";a:1:{s:10:"commentrss";s:88:"http://www.rajsingh.org/blog/2010/11/28/handling-changes-over-time-in-spatial-data/feed/";}s:5:"slash";a:1:{s:8:"comments";s:1:"0";}s:7:"summary";s:215:"Great ideas in the Geoserver docs on how to do versioning, and other changes over time in a geospatial database, the right way &#8212; by extending WFS . http://geoserver.org/display/GEOS/Versioning+WFS+-+Extensions";s:12:"atom_content";s:371:"<p>Great ideas in the Geoserver docs on how to do versioning, and other changes over time in a geospatial database, the right way &#8212; by extending <i><a href="http://www.opengeospatial.org/standards/wfs">WFS</a></i> .</p>
<p><a href="http://geoserver.org/display/GEOS/Versioning+WFS+-+Extensions">http://geoserver.org/display/GEOS/Versioning+WFS+-+Extensions</a></p>
";}i:2;a:13:{s:5:"title";s:41:"The Web Is Reborn  – Technology Review";s:4:"link";s:76:"http://www.rajsingh.org/blog/2010/11/17/the-web-is-reborn-technology-review/";s:8:"comments";s:85:"http://www.rajsingh.org/blog/2010/11/17/the-web-is-reborn-technology-review/#comments";s:7:"pubdate";s:31:"Wed, 17 Nov 2010 17:27:40 +0000";s:2:"dc";a:1:{s:7:"creator";s:8:"rajsingh";}s:8:"category";s:18:"ogcstandardswebdev";s:4:"guid";s:76:"http://www.rajsingh.org/blog/2010/11/17/the-web-is-reborn-technology-review/";s:11:"description";s:185:"This is a great article. Find some quiet time to read it. I finally get the importance of HTML5 and why we should all be excited about it. http://www.technologyreview.com/web/26565/?a=f";s:7:"content";a:1:{s:7:"encoded";s:200:"<p>This is a great article. Find some quiet time to read it. I finally get the importance of HTML5 and why we should all be excited about it.</p>
<p>http://www.technologyreview.com/web/26565/?a=f</p>
";}s:3:"wfw";a:1:{s:10:"commentrss";s:81:"http://www.rajsingh.org/blog/2010/11/17/the-web-is-reborn-technology-review/feed/";}s:5:"slash";a:1:{s:8:"comments";s:1:"0";}s:7:"summary";s:185:"This is a great article. Find some quiet time to read it. I finally get the importance of HTML5 and why we should all be excited about it. http://www.technologyreview.com/web/26565/?a=f";s:12:"atom_content";s:200:"<p>This is a great article. Find some quiet time to read it. I finally get the importance of HTML5 and why we should all be excited about it.</p>
<p>http://www.technologyreview.com/web/26565/?a=f</p>
";}i:3;a:13:{s:5:"title";s:19:"Namespaces ruin XML";s:4:"link";s:60:"http://www.rajsingh.org/blog/2010/10/28/namespaces-ruin-xml/";s:8:"comments";s:69:"http://www.rajsingh.org/blog/2010/10/28/namespaces-ruin-xml/#comments";s:7:"pubdate";s:31:"Thu, 28 Oct 2010 01:27:41 +0000";s:2:"dc";a:1:{s:7:"creator";s:8:"rajsingh";}s:8:"category";s:25:"ogcmusingsstandardswebdev";s:4:"guid";s:60:"http://www.rajsingh.org/blog/2010/10/28/namespaces-ruin-xml/";s:11:"description";s:1159:"I was reading up on FOAF today, and checking out an introduction at XML.com. On first blush, my gut feeling looking at the examples was that the FOAF dialect was messy and cumbersome. However, being the XML geek that I am, I stuck with it for another few minutes and decided it&#8217;s really very simple and straightforward. I think the problem is that namespaces totally ruin the flow of reading for people, and if developers get turned off initially, it&#8217;s hard to ever win their hearts. Now I know all the logical reasons behind namespaces, but there has to be a way to get all the benefits of controlled, typed vocabularies while maintaining ease of reading and writing. My proposal is to slightly modify the way XML elements are checked for their namespace. Right now, you can only have one (default) namespace that doesn&#8217;t have to be prefixed. I say why not make all namespace prefixes optional. Parsers should check the namespaces in the order they are listed at the top of the XML file to locate what namespace the element comes from. Using this method, only XML elements that are present in more than one listed namespace would have [...]";s:7:"content";a:1:{s:7:"encoded";s:1378:"<p>I was reading up on FOAF today, and checking out <a href="http://www.xml.com/pub/a/2004/02/04/foaf.html">an introduction at XML.com</a>. On first blush, my gut feeling looking at the examples was that the FOAF dialect was messy and cumbersome. However, being the XML geek that I am, I stuck with it for another few minutes and decided it&#8217;s really very simple and straightforward.</p>
<p>I think the problem is that namespaces totally ruin the flow of reading for people, and if developers get turned off initially, it&#8217;s hard to ever win their hearts. Now I know all the logical reasons behind namespaces, but there has to be a way to get all the benefits of controlled, typed vocabularies while maintaining ease of reading and writing.</p>
<p>My proposal is to slightly modify the way XML elements are checked for their namespace. Right now, you can only have one (default) namespace that doesn&#8217;t have to be prefixed. I say why not make all namespace prefixes optional. Parsers should check the namespaces in the order they are listed at the top of the XML file to locate what namespace the element comes from. Using this method, only XML elements that are present in more than one listed namespace would have to be prefixed. Sure, it&#8217;s more work for parsers, but that&#8217;s a small price to pay for readability, writeability, and XML adoption.</p>
";}s:3:"wfw";a:1:{s:10:"commentrss";s:65:"http://www.rajsingh.org/blog/2010/10/28/namespaces-ruin-xml/feed/";}s:5:"slash";a:1:{s:8:"comments";s:1:"0";}s:7:"summary";s:1159:"I was reading up on FOAF today, and checking out an introduction at XML.com. On first blush, my gut feeling looking at the examples was that the FOAF dialect was messy and cumbersome. However, being the XML geek that I am, I stuck with it for another few minutes and decided it&#8217;s really very simple and straightforward. I think the problem is that namespaces totally ruin the flow of reading for people, and if developers get turned off initially, it&#8217;s hard to ever win their hearts. Now I know all the logical reasons behind namespaces, but there has to be a way to get all the benefits of controlled, typed vocabularies while maintaining ease of reading and writing. My proposal is to slightly modify the way XML elements are checked for their namespace. Right now, you can only have one (default) namespace that doesn&#8217;t have to be prefixed. I say why not make all namespace prefixes optional. Parsers should check the namespaces in the order they are listed at the top of the XML file to locate what namespace the element comes from. Using this method, only XML elements that are present in more than one listed namespace would have [...]";s:12:"atom_content";s:1378:"<p>I was reading up on FOAF today, and checking out <a href="http://www.xml.com/pub/a/2004/02/04/foaf.html">an introduction at XML.com</a>. On first blush, my gut feeling looking at the examples was that the FOAF dialect was messy and cumbersome. However, being the XML geek that I am, I stuck with it for another few minutes and decided it&#8217;s really very simple and straightforward.</p>
<p>I think the problem is that namespaces totally ruin the flow of reading for people, and if developers get turned off initially, it&#8217;s hard to ever win their hearts. Now I know all the logical reasons behind namespaces, but there has to be a way to get all the benefits of controlled, typed vocabularies while maintaining ease of reading and writing.</p>
<p>My proposal is to slightly modify the way XML elements are checked for their namespace. Right now, you can only have one (default) namespace that doesn&#8217;t have to be prefixed. I say why not make all namespace prefixes optional. Parsers should check the namespaces in the order they are listed at the top of the XML file to locate what namespace the element comes from. Using this method, only XML elements that are present in more than one listed namespace would have to be prefixed. Sure, it&#8217;s more work for parsers, but that&#8217;s a small price to pay for readability, writeability, and XML adoption.</p>
";}i:4;a:13:{s:5:"title";s:21:"OGC services and REST";s:4:"link";s:62:"http://www.rajsingh.org/blog/2010/10/19/ogc-services-and-rest/";s:8:"comments";s:71:"http://www.rajsingh.org/blog/2010/10/19/ogc-services-and-rest/#comments";s:7:"pubdate";s:31:"Tue, 19 Oct 2010 01:57:31 +0000";s:2:"dc";a:1:{s:7:"creator";s:8:"rajsingh";}s:8:"category";s:31:"mass marketclimaterestsoaswewfs";s:4:"guid";s:62:"http://www.rajsingh.org/blog/2010/10/19/ogc-services-and-rest/";s:11:"description";s:1223:"Recently, the REST discussion flared up once again on the OGC&#8217;s Architecture Domain Working Group mailing list. Someone wanted to know if OGC had anything like a ranking of how &#8220;RESTful&#8221; each OGC web service was. The short answer is&#8230;of course, OGC doesn&#8217;t, and no one even knows how one would go about doing this objectively. I, however, took the risk of looking stupid and hazarded some ratings. Here is my post&#8230; The fundamental problem with REST and GIS in my opinion, is that REST optimizes for data *access*, and OGC services are optimized for data *processing*. I consider GIS a type of OLAP system, and we as an industry will continue to resist REST because it would be counter-productive to expose data via atomic resources that all had their own URL (and metadata!?!) because everything we really want to do with the data would get harder. That being said, here&#8217;s how I think OGC services fare&#8230; If you look at the basic architectural constraints that REST espouses, OGC services do pretty well in general with their KVP interfaces (and don&#8217;t get too caught up in KVP vs. SOAP &#8212; Fielding&#8217;s original dissertation said there should be a place for [...]";s:7:"content";a:1:{s:7:"encoded";s:2665:"<p>Recently, the REST discussion flared up once again on the OGC&#8217;s Architecture Domain Working Group mailing list. Someone wanted to know if OGC had anything like a ranking of how &#8220;RESTful&#8221; each OGC web service was. The short answer is&#8230;of course, OGC doesn&#8217;t, and no one even knows how one would go about doing this objectively. I, however, took the risk of looking stupid and hazarded some ratings. Here is my post&#8230;</p>
<p>The fundamental problem with REST and GIS in my opinion, is that REST optimizes for data *access*, and OGC services are optimized for data *processing*. I consider GIS a type of OLAP system, and we as an industry will continue to resist REST because it would be counter-productive to expose data via atomic resources that all had their own URL (and metadata!?!) because everything we really want to do with the data would get harder.</p>
<p>That being said, here&#8217;s how I think OGC services fare&#8230;</p>
<p>If you look at the <a href="http://en.wikipedia.org/wiki/Representational_State_Transfer#Constraints">basic architectural constraints that REST espouses</a>, OGC services do pretty well in general with their KVP interfaces (and don&#8217;t get too caught up in KVP vs. SOAP &#8212; Fielding&#8217;s original dissertation said there should be a place for FTP, WAIS, etc in the REST &#8220;church&#8221;).</p>
<p>However, when you get right down to the core concept behind REST &#8212; to identify and expose individual resources &#8212; our RESTfulness quickly breaks down. I&#8217;d say that WFS, SOS and WMTS do the best job.</p>
<p>WFS can be seen to expose each feature via a URL that doesn&#8217;t change (by doing a GetFeature request on the GML ID), and WFS-T gives you the create-update-delete functionality.</p>
<p>SOS does a similar thing with GetObservation and InsertObservation, but it could be more RESTful if GetObservationById was mandatory.</p>
<p>WMTS can be seen to expose each tile via a URL, but I don&#8217;t think it has create-update-delete functionality.</p>
<p>Of course, no service gets an &#8220;A&#8221; as we invent our own verbs instead of using HTTP GET, PUT, etc., but I&#8217;d give WFS and SOS and solid &#8220;B&#8221;, and WMTS a &#8220;B-/C+&#8221;.</p>
<p>I see WCS as failing utterly in RESTfulness, but it&#8217;s not the fault of WCS, but the inherent difficulty in creating a useful definition of resource when you&#8217;re modeling continuously varying phenomena. I don&#8217;t see it being very useful to call an entire coverage a resource. So I give REST a &#8220;D&#8221; in tackling the thorny case of imagery and environmental data sets.</p>
";}s:3:"wfw";a:1:{s:10:"commentrss";s:67:"http://www.rajsingh.org/blog/2010/10/19/ogc-services-and-rest/feed/";}s:5:"slash";a:1:{s:8:"comments";s:1:"2";}s:7:"summary";s:1223:"Recently, the REST discussion flared up once again on the OGC&#8217;s Architecture Domain Working Group mailing list. Someone wanted to know if OGC had anything like a ranking of how &#8220;RESTful&#8221; each OGC web service was. The short answer is&#8230;of course, OGC doesn&#8217;t, and no one even knows how one would go about doing this objectively. I, however, took the risk of looking stupid and hazarded some ratings. Here is my post&#8230; The fundamental problem with REST and GIS in my opinion, is that REST optimizes for data *access*, and OGC services are optimized for data *processing*. I consider GIS a type of OLAP system, and we as an industry will continue to resist REST because it would be counter-productive to expose data via atomic resources that all had their own URL (and metadata!?!) because everything we really want to do with the data would get harder. That being said, here&#8217;s how I think OGC services fare&#8230; If you look at the basic architectural constraints that REST espouses, OGC services do pretty well in general with their KVP interfaces (and don&#8217;t get too caught up in KVP vs. SOAP &#8212; Fielding&#8217;s original dissertation said there should be a place for [...]";s:12:"atom_content";s:2665:"<p>Recently, the REST discussion flared up once again on the OGC&#8217;s Architecture Domain Working Group mailing list. Someone wanted to know if OGC had anything like a ranking of how &#8220;RESTful&#8221; each OGC web service was. The short answer is&#8230;of course, OGC doesn&#8217;t, and no one even knows how one would go about doing this objectively. I, however, took the risk of looking stupid and hazarded some ratings. Here is my post&#8230;</p>
<p>The fundamental problem with REST and GIS in my opinion, is that REST optimizes for data *access*, and OGC services are optimized for data *processing*. I consider GIS a type of OLAP system, and we as an industry will continue to resist REST because it would be counter-productive to expose data via atomic resources that all had their own URL (and metadata!?!) because everything we really want to do with the data would get harder.</p>
<p>That being said, here&#8217;s how I think OGC services fare&#8230;</p>
<p>If you look at the <a href="http://en.wikipedia.org/wiki/Representational_State_Transfer#Constraints">basic architectural constraints that REST espouses</a>, OGC services do pretty well in general with their KVP interfaces (and don&#8217;t get too caught up in KVP vs. SOAP &#8212; Fielding&#8217;s original dissertation said there should be a place for FTP, WAIS, etc in the REST &#8220;church&#8221;).</p>
<p>However, when you get right down to the core concept behind REST &#8212; to identify and expose individual resources &#8212; our RESTfulness quickly breaks down. I&#8217;d say that WFS, SOS and WMTS do the best job.</p>
<p>WFS can be seen to expose each feature via a URL that doesn&#8217;t change (by doing a GetFeature request on the GML ID), and WFS-T gives you the create-update-delete functionality.</p>
<p>SOS does a similar thing with GetObservation and InsertObservation, but it could be more RESTful if GetObservationById was mandatory.</p>
<p>WMTS can be seen to expose each tile via a URL, but I don&#8217;t think it has create-update-delete functionality.</p>
<p>Of course, no service gets an &#8220;A&#8221; as we invent our own verbs instead of using HTTP GET, PUT, etc., but I&#8217;d give WFS and SOS and solid &#8220;B&#8221;, and WMTS a &#8220;B-/C+&#8221;.</p>
<p>I see WCS as failing utterly in RESTfulness, but it&#8217;s not the fault of WCS, but the inherent difficulty in creating a useful definition of resource when you&#8217;re modeling continuously varying phenomena. I don&#8217;t see it being very useful to call an entire coverage a resource. So I give REST a &#8220;D&#8221; in tackling the thorny case of imagery and environmental data sets.</p>
";}i:5;a:13:{s:5:"title";s:22:"MS word and hyperlinks";s:4:"link";s:63:"http://www.rajsingh.org/blog/2010/10/06/ms-word-and-hyperlinks/";s:8:"comments";s:72:"http://www.rajsingh.org/blog/2010/10/06/ms-word-and-hyperlinks/#comments";s:7:"pubdate";s:31:"Wed, 06 Oct 2010 12:42:06 +0000";s:2:"dc";a:1:{s:7:"creator";s:8:"rajsingh";}s:8:"category";s:19:"ogcmicrosoftmusings";s:4:"guid";s:63:"http://www.rajsingh.org/blog/2010/10/06/ms-word-and-hyperlinks/";s:11:"description";s:197:"When I click on a link in a Word doc, why does it take about 15 seconds for Word to pass the request on to my Web browser? What are the Microsoft gremlins doing with my system during that time?!?!?";s:7:"content";a:1:{s:7:"encoded";s:205:"<p>When I click on a link in a Word doc, why does it take about 15 seconds for Word to pass the request on to my Web browser? What are the Microsoft gremlins doing with my system during that time?!?!?</p>
";}s:3:"wfw";a:1:{s:10:"commentrss";s:68:"http://www.rajsingh.org/blog/2010/10/06/ms-word-and-hyperlinks/feed/";}s:5:"slash";a:1:{s:8:"comments";s:1:"2";}s:7:"summary";s:197:"When I click on a link in a Word doc, why does it take about 15 seconds for Word to pass the request on to my Web browser? What are the Microsoft gremlins doing with my system during that time?!?!?";s:12:"atom_content";s:205:"<p>When I click on a link in a Word doc, why does it take about 15 seconds for Word to pass the request on to my Web browser? What are the Microsoft gremlins doing with my system during that time?!?!?</p>
";}i:6;a:13:{s:5:"title";s:30:"Twitter Updates for 2010-08-29";s:4:"link";s:71:"http://www.rajsingh.org/blog/2010/08/29/twitter-updates-for-2010-08-29/";s:8:"comments";s:80:"http://www.rajsingh.org/blog/2010/08/29/twitter-updates-for-2010-08-29/#comments";s:7:"pubdate";s:31:"Sun, 29 Aug 2010 13:45:00 +0000";s:2:"dc";a:1:{s:7:"creator";s:8:"rajsingh";}s:8:"category";s:16:"Uncategorizedogc";s:4:"guid";s:71:"http://www.rajsingh.org/blog/2010/08/29/twitter-updates-for-2010-08-29/";s:11:"description";s:195:"I checked in at Union Square Farmers Market (70 Union Sq) on #Yelp http://bit.ly/bEW3au # I checked in at Sherman Cafe (257 Washington St) on #Yelp http://bit.ly/9YCkdz # Powered by Twitter Tools";s:7:"content";a:1:{s:7:"encoded";s:763:"<ul class="aktt_tweet_digest">
<li>I checked in at Union Square Farmers Market (70 Union Sq) on #<a href="http://search.twitter.com/search?q=%23Yelp" class="aktt_hashtag">Yelp</a> <a href="http://bit.ly/bEW3au" rel="nofollow">http://bit.ly/bEW3au</a> <a href="http://twitter.com/rajrsingh/statuses/22372032834" class="aktt_tweet_time">#</a></li>
<li>I checked in at Sherman Cafe (257 Washington St) on #<a href="http://search.twitter.com/search?q=%23Yelp" class="aktt_hashtag">Yelp</a> <a href="http://bit.ly/9YCkdz" rel="nofollow">http://bit.ly/9YCkdz</a> <a href="http://twitter.com/rajrsingh/statuses/22372137969" class="aktt_tweet_time">#</a></li>
</ul>
<p class="aktt_credit">Powered by <a href="http://alexking.org/projects/wordpress">Twitter Tools</a></p>
";}s:3:"wfw";a:1:{s:10:"commentrss";s:76:"http://www.rajsingh.org/blog/2010/08/29/twitter-updates-for-2010-08-29/feed/";}s:5:"slash";a:1:{s:8:"comments";s:1:"0";}s:7:"summary";s:195:"I checked in at Union Square Farmers Market (70 Union Sq) on #Yelp http://bit.ly/bEW3au # I checked in at Sherman Cafe (257 Washington St) on #Yelp http://bit.ly/9YCkdz # Powered by Twitter Tools";s:12:"atom_content";s:763:"<ul class="aktt_tweet_digest">
<li>I checked in at Union Square Farmers Market (70 Union Sq) on #<a href="http://search.twitter.com/search?q=%23Yelp" class="aktt_hashtag">Yelp</a> <a href="http://bit.ly/bEW3au" rel="nofollow">http://bit.ly/bEW3au</a> <a href="http://twitter.com/rajrsingh/statuses/22372032834" class="aktt_tweet_time">#</a></li>
<li>I checked in at Sherman Cafe (257 Washington St) on #<a href="http://search.twitter.com/search?q=%23Yelp" class="aktt_hashtag">Yelp</a> <a href="http://bit.ly/9YCkdz" rel="nofollow">http://bit.ly/9YCkdz</a> <a href="http://twitter.com/rajrsingh/statuses/22372137969" class="aktt_tweet_time">#</a></li>
</ul>
<p class="aktt_credit">Powered by <a href="http://alexking.org/projects/wordpress">Twitter Tools</a></p>
";}i:7;a:13:{s:5:"title";s:30:"Twitter Updates for 2010-07-08";s:4:"link";s:71:"http://www.rajsingh.org/blog/2010/07/08/twitter-updates-for-2010-07-08/";s:8:"comments";s:80:"http://www.rajsingh.org/blog/2010/07/08/twitter-updates-for-2010-07-08/#comments";s:7:"pubdate";s:31:"Thu, 08 Jul 2010 13:45:00 +0000";s:2:"dc";a:1:{s:7:"creator";s:8:"rajsingh";}s:8:"category";s:16:"Uncategorizedogc";s:4:"guid";s:71:"http://www.rajsingh.org/blog/2010/07/08/twitter-updates-for-2010-07-08/";s:11:"description";s:113:"The Stanton Social on #Yelp &#34;French onion soup dumplings&#34; http://bit.ly/b3kgA6 # Powered by Twitter Tools";s:7:"content";a:1:{s:7:"encoded";s:459:"<ul class="aktt_tweet_digest">
<li>The Stanton Social on #<a href="http://search.twitter.com/search?q=%23Yelp" class="aktt_hashtag">Yelp</a>  &quot;French onion soup dumplings&quot; <a href="http://bit.ly/b3kgA6" rel="nofollow">http://bit.ly/b3kgA6</a> <a href="http://twitter.com/rajrsingh/statuses/18001877921" class="aktt_tweet_time">#</a></li>
</ul>
<p class="aktt_credit">Powered by <a href="http://alexking.org/projects/wordpress">Twitter Tools</a></p>
";}s:3:"wfw";a:1:{s:10:"commentrss";s:76:"http://www.rajsingh.org/blog/2010/07/08/twitter-updates-for-2010-07-08/feed/";}s:5:"slash";a:1:{s:8:"comments";s:1:"0";}s:7:"summary";s:113:"The Stanton Social on #Yelp &#34;French onion soup dumplings&#34; http://bit.ly/b3kgA6 # Powered by Twitter Tools";s:12:"atom_content";s:459:"<ul class="aktt_tweet_digest">
<li>The Stanton Social on #<a href="http://search.twitter.com/search?q=%23Yelp" class="aktt_hashtag">Yelp</a>  &quot;French onion soup dumplings&quot; <a href="http://bit.ly/b3kgA6" rel="nofollow">http://bit.ly/b3kgA6</a> <a href="http://twitter.com/rajrsingh/statuses/18001877921" class="aktt_tweet_time">#</a></li>
</ul>
<p class="aktt_credit">Powered by <a href="http://alexking.org/projects/wordpress">Twitter Tools</a></p>
";}i:8;a:13:{s:5:"title";s:50:"White House moves Recovery.gov to Amazon’s cloud";s:4:"link";s:88:"http://www.rajsingh.org/blog/2010/05/13/white-house-moves-recovery-gov-to-amazons-cloud/";s:8:"comments";s:97:"http://www.rajsingh.org/blog/2010/05/13/white-house-moves-recovery-gov-to-amazons-cloud/#comments";s:7:"pubdate";s:31:"Thu, 13 May 2010 21:51:05 +0000";s:2:"dc";a:1:{s:7:"creator";s:8:"rajsingh";}s:8:"category";s:38:"ogcamazoncloudec2mass marketsdiwhere20";s:4:"guid";s:35:"http://www.rajsingh.org/blog/?p=211";s:11:"description";s:167:"Very interesting. Another signal that geo must integrate seamlessly with mainstream IT to avoid marginalization. White House moves Recovery.gov to Amazon&#8217;s cloud";s:7:"content";a:1:{s:7:"encoded";s:380:"<p>Very interesting. Another signal that geo must integrate seamlessly with mainstream IT to avoid marginalization.</p>
<p><a href="http://radar.oreilly.com/2010/05/white-house-moves-recoverygov.html?utm_source=feedburner&#038;utm_medium=feed&#038;utm_campaign=Feed%3A+oreilly%2Fradar%2Fatom+%28O%27Reilly+Radar%29 ">White House moves Recovery.gov to Amazon&#8217;s cloud</a></p>
";}s:3:"wfw";a:1:{s:10:"commentrss";s:93:"http://www.rajsingh.org/blog/2010/05/13/white-house-moves-recovery-gov-to-amazons-cloud/feed/";}s:5:"slash";a:1:{s:8:"comments";s:1:"0";}s:7:"summary";s:167:"Very interesting. Another signal that geo must integrate seamlessly with mainstream IT to avoid marginalization. White House moves Recovery.gov to Amazon&#8217;s cloud";s:12:"atom_content";s:380:"<p>Very interesting. Another signal that geo must integrate seamlessly with mainstream IT to avoid marginalization.</p>
<p><a href="http://radar.oreilly.com/2010/05/white-house-moves-recoverygov.html?utm_source=feedburner&#038;utm_medium=feed&#038;utm_campaign=Feed%3A+oreilly%2Fradar%2Fatom+%28O%27Reilly+Radar%29 ">White House moves Recovery.gov to Amazon&#8217;s cloud</a></p>
";}i:9;a:13:{s:5:"title";s:30:"Twitter Updates for 2010-04-22";s:4:"link";s:71:"http://www.rajsingh.org/blog/2010/04/22/twitter-updates-for-2010-04-22/";s:8:"comments";s:80:"http://www.rajsingh.org/blog/2010/04/22/twitter-updates-for-2010-04-22/#comments";s:7:"pubdate";s:31:"Thu, 22 Apr 2010 13:45:00 +0000";s:2:"dc";a:1:{s:7:"creator";s:8:"rajsingh";}s:8:"category";s:16:"Uncategorizedogc";s:4:"guid";s:71:"http://www.rajsingh.org/blog/2010/04/22/twitter-updates-for-2010-04-22/";s:11:"description";s:70:"why isn&#39;t there an ArcPad for the iPad? # Powered by Twitter Tools";s:7:"content";a:1:{s:7:"encoded";s:285:"<ul class="aktt_tweet_digest">
<li>why isn&#39;t there an ArcPad for the iPad? <a href="http://twitter.com/rajrsingh/statuses/12587436199" class="aktt_tweet_time">#</a></li>
</ul>
<p class="aktt_credit">Powered by <a href="http://alexking.org/projects/wordpress">Twitter Tools</a></p>
";}s:3:"wfw";a:1:{s:10:"commentrss";s:76:"http://www.rajsingh.org/blog/2010/04/22/twitter-updates-for-2010-04-22/feed/";}s:5:"slash";a:1:{s:8:"comments";s:1:"0";}s:7:"summary";s:70:"why isn&#39;t there an ArcPad for the iPad? # Powered by Twitter Tools";s:12:"atom_content";s:285:"<ul class="aktt_tweet_digest">
<li>why isn&#39;t there an ArcPad for the iPad? <a href="http://twitter.com/rajrsingh/statuses/12587436199" class="aktt_tweet_time">#</a></li>
</ul>
<p class="aktt_credit">Powered by <a href="http://alexking.org/projects/wordpress">Twitter Tools</a></p>
";}}s:7:"channel";a:8:{s:5:"title";s:17:"rajsingh.org blog";s:4:"link";s:28:"http://www.rajsingh.org/blog";s:11:"description";s:51:"the geoweb, interoperability, OGC, and random rants";s:13:"lastbuilddate";s:31:"Sat, 05 Mar 2011 03:54:50 +0000";s:8:"language";s:2:"en";s:2:"sy";a:2:{s:12:"updateperiod";s:6:"hourly";s:15:"updatefrequency";s:1:"1";}s:9:"generator";s:27:"http://wordpress.org/?v=3.1";s:7:"tagline";s:51:"the geoweb, interoperability, OGC, and random rants";}s:9:"textinput";a:0:{}s:5:"image";a:0:{}s:9:"feed_type";s:3:"RSS";s:12:"feed_version";s:3:"2.0";s:5:"stack";a:0:{}s:9:"inchannel";b:0;s:6:"initem";b:0;s:9:"incontent";b:0;s:11:"intextinput";b:0;s:7:"inimage";b:0;s:13:"current_field";s:0:"";s:17:"current_namespace";b:0;s:5:"ERROR";s:0:"";s:19:"_CONTENT_CONSTRUCTS";a:6:{i:0;s:7:"content";i:1;s:7:"summary";i:2;s:4:"info";i:3;s:5:"title";i:4;s:7:"tagline";i:5;s:9:"copyright";}s:4:"etag";s:36:""28bbb50a69e7a2772e2d006d3fadd8b8"
";s:13:"last_modified";s:31:"Sat, 05 Mar 2011 03:54:50 GMT
";}