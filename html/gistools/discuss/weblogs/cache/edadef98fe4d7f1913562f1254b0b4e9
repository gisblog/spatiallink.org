O:9:"magpierss":20:{s:6:"parser";i:0;s:12:"current_item";a:0:{}s:5:"items";a:10:{i:0;a:12:{s:5:"title";s:33:"Designing SOA Frameworks with GIS";s:4:"link";s:74:"http://www.jdoneill.com/blog/2005/10/25/designing-soa-frameworks-with-gis/";s:8:"comments";s:83:"http://www.jdoneill.com/blog/2005/10/25/designing-soa-frameworks-with-gis/#comments";s:7:"pubdate";s:31:"Tue, 25 Oct 2005 14:02:06 +0000";s:2:"dc";a:1:{s:7:"creator";s:3:"dop";}s:8:"category";s:35:"GISJavaArcObjectsDevWeb ServicesSOA";s:4:"guid";s:74:"http://www.jdoneill.com/blog/2005/10/25/designing-soa-frameworks-with-gis/";s:11:"description";s:334:"Consider an example of an organization where various systems - such as finance, billing, and even GIS - need to interact with each other.  Maybe spatial boundaries, like acreage reporting, help determine billing.  Moreover, some of the applications need to be exposed to the outside to help modernize the business process.  This [...]";s:7:"content";a:1:{s:7:"encoded";s:1761:"	<p>Consider an example of an organization where various systems - such as finance, billing, and even GIS - need to interact with each other.  Maybe spatial boundaries, like acreage reporting, help determine billing.  Moreover, some of the applications need to be exposed to the outside to help modernize the business process.  This is the foundation for a loosely-coupled system based on services.  Ideally, the services are open so that any participating business process can invoke them.<br />
But what defines a service.  There seem to be many vendor provided definitions, which makes sense as service architectures are not new.  I typically adhere to the narrowest and most technical of definitions, like a service has a well-defined interface, an implementation of the interface, and when deployed, a binding.  Java classes certainly fall within this narrow scope of a service and stateless EJB components provide a lot of advantages as services - scalability, resource utilization, security, leveraging existing business processes, etc.<br />
With the EJB 1.4 spec, service endpoints can be modeled as stateless session beans.  We can wrap access to an EIS or existing spatial business component through data access interfaces or J2EE connector architecture interfaces.  Clients interact with the EJB services using HTTP based SOAP protocol.  In using this approach we need application adapters, another very common service component type.  Data access through SDO&#8217;s are a productive alternative as it frees the developer form technical details on how to access back end data sources.  I have been working on a simplified access approach for ArcObjects (ArcGIS Server) and hope to be able to post information soon about the technical details.
</p>
";}s:3:"wfw";a:1:{s:10:"commentrss";s:79:"http://www.jdoneill.com/blog/2005/10/25/designing-soa-frameworks-with-gis/feed/";}s:7:"summary";s:334:"Consider an example of an organization where various systems - such as finance, billing, and even GIS - need to interact with each other.  Maybe spatial boundaries, like acreage reporting, help determine billing.  Moreover, some of the applications need to be exposed to the outside to help modernize the business process.  This [...]";s:12:"atom_content";s:1761:"	<p>Consider an example of an organization where various systems - such as finance, billing, and even GIS - need to interact with each other.  Maybe spatial boundaries, like acreage reporting, help determine billing.  Moreover, some of the applications need to be exposed to the outside to help modernize the business process.  This is the foundation for a loosely-coupled system based on services.  Ideally, the services are open so that any participating business process can invoke them.<br />
But what defines a service.  There seem to be many vendor provided definitions, which makes sense as service architectures are not new.  I typically adhere to the narrowest and most technical of definitions, like a service has a well-defined interface, an implementation of the interface, and when deployed, a binding.  Java classes certainly fall within this narrow scope of a service and stateless EJB components provide a lot of advantages as services - scalability, resource utilization, security, leveraging existing business processes, etc.<br />
With the EJB 1.4 spec, service endpoints can be modeled as stateless session beans.  We can wrap access to an EIS or existing spatial business component through data access interfaces or J2EE connector architecture interfaces.  Clients interact with the EJB services using HTTP based SOAP protocol.  In using this approach we need application adapters, another very common service component type.  Data access through SDO&#8217;s are a productive alternative as it frees the developer form technical details on how to access back end data sources.  I have been working on a simplified access approach for ArcObjects (ArcGIS Server) and hope to be able to post information soon about the technical details.
</p>
";}i:1;a:12:{s:5:"title";s:42:"Get Data Path from Feature Layer in ArcGIS";s:4:"link";s:73:"http://www.jdoneill.com/blog/2005/09/14/get-data-path-from-feature-layer/";s:8:"comments";s:82:"http://www.jdoneill.com/blog/2005/09/14/get-data-path-from-feature-layer/#comments";s:7:"pubdate";s:31:"Wed, 14 Sep 2005 20:33:07 +0000";s:2:"dc";a:1:{s:7:"creator";s:3:"dop";}s:8:"category";s:24:"JavaPythonArcGIS Desktop";s:4:"guid";s:73:"http://www.jdoneill.com/blog/2005/09/14/get-data-path-from-feature-layer/";s:11:"description";s:289:"In order for a Java application to be a serious player inside of ArcGIS Desktop it not only needs to deal with native ArcGIS types, but it needs to deal with features from the current map session, like a Feature Layer in the map document.  This is a bit trickier than a Feature Class [...]";s:7:"content";a:1:{s:7:"encoded";s:2430:"	<p><img src="http://www.jdoneill.com/blog/wp-images/posts/geotools.jpg" alt="arcgis and geotools" />In order for a Java application to be a serious player inside of ArcGIS Desktop it not only needs to deal with native ArcGIS types, but it needs to deal with features from the current map session, like a Feature Layer in the map document.  This is a bit trickier than a Feature Class from disk as the path to the feature data is not inherently known.<br />
The geoprocessor programming model exposed in the Python API provides useful modules to solve the problem.  The <code>Describe()</code> method exposed by the <code>geoprocessor</code> object is similar to the old ArcInfo command in that it deals with many properties on ArcGIS data elements.  Once an element is identified as feature type, we can use the Python <code>os</code> module to manipulate the full pathname.<br />
The code below steps through a simple demonstration of this:  </p>
	<p>Import the standard libraries<br />
<code>import win32com.client, sys, os</code><br />
Create the Geoprocessor object<br />
<code>GP = win32com.client.Dispatch("esriGeoprocessing.GpDispatch.1")</code><br />
Load custom toolbox with Java apps<br />
<code>GP.AddToolbox("C:/usr/dop/spatial/toolbox/jdONeill Spatial Tools.tbx")</code><br />
Work with the Feature Layer input<br />
<code>try:<br />
    &nbsp;&nbsp;featureLayer = sys.argv[1]<br />
    &nbsp;&nbsp;feature = GP.Describe(featureLayer)<br />
    &nbsp;&nbsp;featureClass = os.path.abspath(feature.CatalogPath)</code><br />
Process the custom Java method<br />
    &nbsp;&nbsp;<code>GP.Toolbox = jdoneill_tools</code><br />
    &nbsp;&nbsp;<code>GP.OpenAttributeTable(featureClass)</code></p>
	<p>I understand that many ESRI developers may think this is a lot to go through when there are multiple options with API&#8217;s that have better support inside ArcGIS Desktop.  The reason this may become a solution for developers and GIS architects to consider is when confronted with an IT department that has mandated J2EE as the enterprise IT solution.  This leaves GIS as a part of the enterprise with loads of potential desktop code needed to be converted into an enterprise API.  By showing that Java components can work with native features in the current mapping session of a desktop application, I hope to make the connection that the components can be the same components making up a J2EE enterprise system.
</p>
";}s:3:"wfw";a:1:{s:10:"commentrss";s:78:"http://www.jdoneill.com/blog/2005/09/14/get-data-path-from-feature-layer/feed/";}s:7:"summary";s:289:"In order for a Java application to be a serious player inside of ArcGIS Desktop it not only needs to deal with native ArcGIS types, but it needs to deal with features from the current map session, like a Feature Layer in the map document.  This is a bit trickier than a Feature Class [...]";s:12:"atom_content";s:2430:"	<p><img src="http://www.jdoneill.com/blog/wp-images/posts/geotools.jpg" alt="arcgis and geotools" />In order for a Java application to be a serious player inside of ArcGIS Desktop it not only needs to deal with native ArcGIS types, but it needs to deal with features from the current map session, like a Feature Layer in the map document.  This is a bit trickier than a Feature Class from disk as the path to the feature data is not inherently known.<br />
The geoprocessor programming model exposed in the Python API provides useful modules to solve the problem.  The <code>Describe()</code> method exposed by the <code>geoprocessor</code> object is similar to the old ArcInfo command in that it deals with many properties on ArcGIS data elements.  Once an element is identified as feature type, we can use the Python <code>os</code> module to manipulate the full pathname.<br />
The code below steps through a simple demonstration of this:  </p>
	<p>Import the standard libraries<br />
<code>import win32com.client, sys, os</code><br />
Create the Geoprocessor object<br />
<code>GP = win32com.client.Dispatch("esriGeoprocessing.GpDispatch.1")</code><br />
Load custom toolbox with Java apps<br />
<code>GP.AddToolbox("C:/usr/dop/spatial/toolbox/jdONeill Spatial Tools.tbx")</code><br />
Work with the Feature Layer input<br />
<code>try:<br />
    &nbsp;&nbsp;featureLayer = sys.argv[1]<br />
    &nbsp;&nbsp;feature = GP.Describe(featureLayer)<br />
    &nbsp;&nbsp;featureClass = os.path.abspath(feature.CatalogPath)</code><br />
Process the custom Java method<br />
    &nbsp;&nbsp;<code>GP.Toolbox = jdoneill_tools</code><br />
    &nbsp;&nbsp;<code>GP.OpenAttributeTable(featureClass)</code></p>
	<p>I understand that many ESRI developers may think this is a lot to go through when there are multiple options with API&#8217;s that have better support inside ArcGIS Desktop.  The reason this may become a solution for developers and GIS architects to consider is when confronted with an IT department that has mandated J2EE as the enterprise IT solution.  This leaves GIS as a part of the enterprise with loads of potential desktop code needed to be converted into an enterprise API.  By showing that Java components can work with native features in the current mapping session of a desktop application, I hope to make the connection that the components can be the same components making up a J2EE enterprise system.
</p>
";}i:2;a:12:{s:5:"title";s:31:"Extend ArcGIS Desktop with Java";s:4:"link";s:72:"http://www.jdoneill.com/blog/2005/08/31/extend-arcgis-desktop-with-java/";s:8:"comments";s:81:"http://www.jdoneill.com/blog/2005/08/31/extend-arcgis-desktop-with-java/#comments";s:7:"pubdate";s:31:"Wed, 31 Aug 2005 17:03:31 +0000";s:2:"dc";a:1:{s:7:"creator";s:3:"dop";}s:8:"category";s:32:"JavaGeoToolsPythonArcGIS Desktop";s:4:"guid";s:72:"http://www.jdoneill.com/blog/2005/08/31/extend-arcgis-desktop-with-java/";s:11:"description";s:346:"ESRI’s ArcGIS 9.x desktop platform includes the ArcToolbox application.  The ArcToolbox application was completely rewritten for the 9.0 platform to enable users to access geoprocessing tools individually or within models.   Scripts can be added to the toolbox and run like any other tool inside of ArcGIS Desktop.  Scripts can be written [...]";s:7:"content";a:1:{s:7:"encoded";s:2563:"	<p>ESRI’s ArcGIS 9.x desktop platform includes the ArcToolbox application.  The ArcToolbox application was completely rewritten for the 9.0 platform to enable users to access geoprocessing tools individually or within models.   Scripts can be added to the toolbox and run like any other tool inside of ArcGIS Desktop.  Scripts can be written in a COM compliant scripting language like Python or wrapped inside of a windows batch process.  When combined, scripts can interact with the ArcGIS platform in a bi-directional manner.  </p>
	<p>This allows for a design to incorporate native Java API&#8217;s into ArcGIS desktop products and interact with native ArcGIS types.  An example would be a Java application written with the GeoTools API  to manipulate features inside of a shapefile.  Our Java tool could take as parameters an input shapefile and an output shapefile.  Our Java tool would be a stand alone application in that it has  main method and takes parameters as command line arguments.  In order to deploy it as a custom tool inside of ArcGIS we wrap the tool inside of a Batch file.  Batch files can take expansion variables which can be directed inside of our Java tool.  Now wouldn&#8217;t it be cool if our Java tool could actually interact within the ArcGIS desktop application.  Well it can by further wrapping it within a geoprocessing python script.  </p>
	<p>ESRI introduced a geoprocessor programming model with the release of the ArcGIS 9.x platform.  The geoprocessor object is a COM object and any scripting language that can instantiate a COM IDispatch object may create the geoprocessor object.  Among the methods exposed by the geoprocessor object is the ‘GetParameterAsText()’ method.  We can leverage this method to convert a native ArcGIS parameter as a String parameter for our Java tool.  This allows our tool to be included in complicated ArcGIS models without the need to deal with type conversion.  We can also check to ensure that the correct data type is being sent to our Java tool.  Once we have our native parameters prepared for inclusion into our Java tool we can import a custom toolbox directly inside the python script and call our custom tool as a method call.  </p>
	<p>This is a powerful feature of the ArcGIS 9.x platform that allows developers to extend the platform without the need to replicate Java functionality with custom COM extensions.  One powerful reason to adopt this strategy is to prepare a component architecture for multi-user GIS applications with legacy support inside ArcGIS desktop.</p>
";}s:3:"wfw";a:1:{s:10:"commentrss";s:77:"http://www.jdoneill.com/blog/2005/08/31/extend-arcgis-desktop-with-java/feed/";}s:7:"summary";s:346:"ESRI’s ArcGIS 9.x desktop platform includes the ArcToolbox application.  The ArcToolbox application was completely rewritten for the 9.0 platform to enable users to access geoprocessing tools individually or within models.   Scripts can be added to the toolbox and run like any other tool inside of ArcGIS Desktop.  Scripts can be written [...]";s:12:"atom_content";s:2563:"	<p>ESRI’s ArcGIS 9.x desktop platform includes the ArcToolbox application.  The ArcToolbox application was completely rewritten for the 9.0 platform to enable users to access geoprocessing tools individually or within models.   Scripts can be added to the toolbox and run like any other tool inside of ArcGIS Desktop.  Scripts can be written in a COM compliant scripting language like Python or wrapped inside of a windows batch process.  When combined, scripts can interact with the ArcGIS platform in a bi-directional manner.  </p>
	<p>This allows for a design to incorporate native Java API&#8217;s into ArcGIS desktop products and interact with native ArcGIS types.  An example would be a Java application written with the GeoTools API  to manipulate features inside of a shapefile.  Our Java tool could take as parameters an input shapefile and an output shapefile.  Our Java tool would be a stand alone application in that it has  main method and takes parameters as command line arguments.  In order to deploy it as a custom tool inside of ArcGIS we wrap the tool inside of a Batch file.  Batch files can take expansion variables which can be directed inside of our Java tool.  Now wouldn&#8217;t it be cool if our Java tool could actually interact within the ArcGIS desktop application.  Well it can by further wrapping it within a geoprocessing python script.  </p>
	<p>ESRI introduced a geoprocessor programming model with the release of the ArcGIS 9.x platform.  The geoprocessor object is a COM object and any scripting language that can instantiate a COM IDispatch object may create the geoprocessor object.  Among the methods exposed by the geoprocessor object is the ‘GetParameterAsText()’ method.  We can leverage this method to convert a native ArcGIS parameter as a String parameter for our Java tool.  This allows our tool to be included in complicated ArcGIS models without the need to deal with type conversion.  We can also check to ensure that the correct data type is being sent to our Java tool.  Once we have our native parameters prepared for inclusion into our Java tool we can import a custom toolbox directly inside the python script and call our custom tool as a method call.  </p>
	<p>This is a powerful feature of the ArcGIS 9.x platform that allows developers to extend the platform without the need to replicate Java functionality with custom COM extensions.  One powerful reason to adopt this strategy is to prepare a component architecture for multi-user GIS applications with legacy support inside ArcGIS desktop.</p>
";}i:3;a:12:{s:5:"title";s:30:"Access to ArcGIS Server as EIS";s:4:"link";s:71:"http://www.jdoneill.com/blog/2005/07/27/access-to-arcgis-server-as-eis/";s:8:"comments";s:80:"http://www.jdoneill.com/blog/2005/07/27/access-to-arcgis-server-as-eis/#comments";s:7:"pubdate";s:31:"Wed, 27 Jul 2005 07:55:53 +0000";s:2:"dc";a:1:{s:7:"creator";s:3:"dop";}s:8:"category";s:45:"GISArcGIS ServerJavaArcObjectsWeb ServicesSOA";s:4:"guid";s:71:"http://www.jdoneill.com/blog/2005/07/27/access-to-arcgis-server-as-eis/";s:11:"description";s:329:"In early connecting architectures a client connected to web pages.  As the need for more complex applications rose, additional resources beyond the web page became in demand.  CGI scripts were first on the scene to provide access to additional resources.  These were popular, but were limited and not object based.  Applets [...]";s:7:"content";a:1:{s:7:"encoded";s:3031:"	<p>In early connecting architectures a client connected to web pages.  As the need for more complex applications rose, additional resources beyond the web page became in demand.  CGI scripts were first on the scene to provide access to additional resources.  These were popular, but were limited and not object based.  Applets were an object based solution at the time and provided a better way to exectute code in a web page.  To eliminate security risks present in CGI scripts, Applets do not allow access to resources outside the machine where the application is running.  This left the door open for more solutions like servlets.  </p>
	<p>Servlets provided an object-oriented approach to exectute code that could access resources managed by an application server and could access enterprise resources directly.  An example of connection to an external enterprise resource is Java Database Connectivity (JDBC), which provides a standardized way of connecting to an external resource.  This allowed for a standarized way to access relational databases, but not other types of resources, such as ArcGIS Server.  ArcObjects, the component technology that makes up ArcGIS Server, has evolved over time and many spatial applications rely on it.  It may not be possible to move all the functionality out of an ArcObjects based application to a native application which would not require connection technologies.  The logical approach is to leverage a solution similar to what JDBC provides; that is, a standarized interface with a common API and a way for vendors, like ESRI, to develop drivers that could access the resources.  </p>
	<p>The J2EE Connector Architecture (JCA) allows resource adapters to be designed and implemented for any resource, including ArcGIS Server.  In release 1.0 of the JCA, the connection support was outbound only.  Consequenly connections flow from the application server to the resources outside of the server.  Inbound support has been added to version 1.5.  This allows for transactions along with connections.  This is important technology improvement concerning access to component technologies like ArcObjects as it allows an EIS to interact with a resource adapter on a server.  The server can now pass messages to destinations which have mediators acting on them and ArcGIS Server can play with other business computing systems which make up a Service Oriented Architecture (SOA).  Mediations as described previously, are pieces of code which is always associated with a message destination with a common function being to transform the message data from one message format to another.  This is especially important in an ArcObjects component architecture where the sender and the receiver of a message many not support exactly the same format.  This provides for a programming model which seperates development and deployment activities into separate phases that can be done using different skillsets by different developers resulting with integration into non spatial business systems.
</p>
";}s:3:"wfw";a:1:{s:10:"commentrss";s:76:"http://www.jdoneill.com/blog/2005/07/27/access-to-arcgis-server-as-eis/feed/";}s:7:"summary";s:329:"In early connecting architectures a client connected to web pages.  As the need for more complex applications rose, additional resources beyond the web page became in demand.  CGI scripts were first on the scene to provide access to additional resources.  These were popular, but were limited and not object based.  Applets [...]";s:12:"atom_content";s:3031:"	<p>In early connecting architectures a client connected to web pages.  As the need for more complex applications rose, additional resources beyond the web page became in demand.  CGI scripts were first on the scene to provide access to additional resources.  These were popular, but were limited and not object based.  Applets were an object based solution at the time and provided a better way to exectute code in a web page.  To eliminate security risks present in CGI scripts, Applets do not allow access to resources outside the machine where the application is running.  This left the door open for more solutions like servlets.  </p>
	<p>Servlets provided an object-oriented approach to exectute code that could access resources managed by an application server and could access enterprise resources directly.  An example of connection to an external enterprise resource is Java Database Connectivity (JDBC), which provides a standardized way of connecting to an external resource.  This allowed for a standarized way to access relational databases, but not other types of resources, such as ArcGIS Server.  ArcObjects, the component technology that makes up ArcGIS Server, has evolved over time and many spatial applications rely on it.  It may not be possible to move all the functionality out of an ArcObjects based application to a native application which would not require connection technologies.  The logical approach is to leverage a solution similar to what JDBC provides; that is, a standarized interface with a common API and a way for vendors, like ESRI, to develop drivers that could access the resources.  </p>
	<p>The J2EE Connector Architecture (JCA) allows resource adapters to be designed and implemented for any resource, including ArcGIS Server.  In release 1.0 of the JCA, the connection support was outbound only.  Consequenly connections flow from the application server to the resources outside of the server.  Inbound support has been added to version 1.5.  This allows for transactions along with connections.  This is important technology improvement concerning access to component technologies like ArcObjects as it allows an EIS to interact with a resource adapter on a server.  The server can now pass messages to destinations which have mediators acting on them and ArcGIS Server can play with other business computing systems which make up a Service Oriented Architecture (SOA).  Mediations as described previously, are pieces of code which is always associated with a message destination with a common function being to transform the message data from one message format to another.  This is especially important in an ArcObjects component architecture where the sender and the receiver of a message many not support exactly the same format.  This provides for a programming model which seperates development and deployment activities into separate phases that can be done using different skillsets by different developers resulting with integration into non spatial business systems.
</p>
";}i:4;a:12:{s:5:"title";s:25:"What can I do with a SOA?";s:4:"link";s:65:"http://www.jdoneill.com/blog/2005/06/29/what-can-i-do-with-a-soa/";s:8:"comments";s:74:"http://www.jdoneill.com/blog/2005/06/29/what-can-i-do-with-a-soa/#comments";s:7:"pubdate";s:31:"Wed, 29 Jun 2005 10:32:55 +0000";s:2:"dc";a:1:{s:7:"creator";s:3:"dop";}s:8:"category";s:18:"GISWeb ServicesSOA";s:4:"guid";s:65:"http://www.jdoneill.com/blog/2005/06/29/what-can-i-do-with-a-soa/";s:11:"description";s:362:"A SOA (Service Oriented Architecture) is a component model that inter-relates the different functional units of an application, called services, through well defined interfaces and contracts them between these services.  SOA's exist to allow business IT systems the ability to adapt to inherent changes in the business.  GIS systems are quickly becoming an [...]";s:7:"content";a:1:{s:7:"encoded";s:1736:"	<p>A SOA (Service Oriented Architecture) is a component model that inter-relates the different functional units of an application, called services, through well defined interfaces and contracts them between these services.  SOA&#8217;s exist to allow business IT systems the ability to adapt to inherent changes in the business.  GIS systems are quickly becoming an integral part of the traditional business IT systems where SOA&#8217;s have formed.  This provides for a natural progression of incorporating spatial computing systems into business computing systems through SOA programming models.  </p>
	<p>To use a specific example of this ever growing need, a geospatial portal organization needs to change their design often in order to keep up with available geospatial information.  Changing from one supplier to another, or adding additional suppliers, may be a very complicated software process if the systems between the portal and supplier are incompatible.  WSDL (Web  Service Description Language) interfaces are so flexible that they allow for each supplier to maintain their existing systems as is, and instead only have the need to match the WSDL interface and set up new service level contracts.  This is much simpler design than requiring participants, suppliers, to reconstruct their software applications entirely.  The result is a that all business operations stay the same and system interfaces only slightly change.</p>
	<p>This model is not new, but an alternative to the more traditional tightly-coupled object-oriented models that are prevalent in mainstream GIS systems.  Although SOA-based systems can be built with object-oriented services, the design changes from an object model to a services model.
</p>
";}s:3:"wfw";a:1:{s:10:"commentrss";s:70:"http://www.jdoneill.com/blog/2005/06/29/what-can-i-do-with-a-soa/feed/";}s:7:"summary";s:362:"A SOA (Service Oriented Architecture) is a component model that inter-relates the different functional units of an application, called services, through well defined interfaces and contracts them between these services.  SOA's exist to allow business IT systems the ability to adapt to inherent changes in the business.  GIS systems are quickly becoming an [...]";s:12:"atom_content";s:1736:"	<p>A SOA (Service Oriented Architecture) is a component model that inter-relates the different functional units of an application, called services, through well defined interfaces and contracts them between these services.  SOA&#8217;s exist to allow business IT systems the ability to adapt to inherent changes in the business.  GIS systems are quickly becoming an integral part of the traditional business IT systems where SOA&#8217;s have formed.  This provides for a natural progression of incorporating spatial computing systems into business computing systems through SOA programming models.  </p>
	<p>To use a specific example of this ever growing need, a geospatial portal organization needs to change their design often in order to keep up with available geospatial information.  Changing from one supplier to another, or adding additional suppliers, may be a very complicated software process if the systems between the portal and supplier are incompatible.  WSDL (Web  Service Description Language) interfaces are so flexible that they allow for each supplier to maintain their existing systems as is, and instead only have the need to match the WSDL interface and set up new service level contracts.  This is much simpler design than requiring participants, suppliers, to reconstruct their software applications entirely.  The result is a that all business operations stay the same and system interfaces only slightly change.</p>
	<p>This model is not new, but an alternative to the more traditional tightly-coupled object-oriented models that are prevalent in mainstream GIS systems.  Although SOA-based systems can be built with object-oriented services, the design changes from an object model to a services model.
</p>
";}i:5;a:12:{s:5:"title";s:41:"Integration of enterprise systems and GIS";s:4:"link";s:82:"http://www.jdoneill.com/blog/2005/05/18/integration-of-enterprise-systems-and-gis/";s:8:"comments";s:91:"http://www.jdoneill.com/blog/2005/05/18/integration-of-enterprise-systems-and-gis/#comments";s:7:"pubdate";s:31:"Wed, 18 May 2005 11:13:53 +0000";s:2:"dc";a:1:{s:7:"creator";s:3:"dop";}s:8:"category";s:3:"GIS";s:4:"guid";s:82:"http://www.jdoneill.com/blog/2005/05/18/integration-of-enterprise-systems-and-gis/";s:11:"description";s:393:"Enterprise systems have the ability to fully automate traditional business activities, but this is only the first step in improving efficiency.  To continue to improve productivity from an enterprise system, we must consider application integration and data integration.  Application integration implies that disparate applications have the ability to seamlessly work together to produce [...]";s:7:"content";a:1:{s:7:"encoded";s:1233:"	<p><img src="http://www.jdoneill.com/blog/wp-images/posts/soa_architecture.jpg" alt="soa architecture" />Enterprise systems have the ability to fully automate traditional business activities, but this is only the first step in improving efficiency.  To continue to improve productivity from an enterprise system, we must consider application integration and data integration.  Application integration implies that disparate applications have the ability to seamlessly work together to produce results unattainable by themselves.   Data integration implies that applications which constitute an enterprise system must be able to use and share data results from other applications in the system.  In a utopian enterprise system, all applications would be native to the underlying architecture, however reality dictates otherwise.  Many foreign platform applications have to work with each other to “save the enterprise”.  Most mature GIS systems are built external to the J2EE architecture.  Consequently we need to develop ways to implement a loosely coupled integration of J2EE systems and a modern GIS system.  There are a number of ways to do this including: </p>
	<p>1.	Web Services<br />
2.	Adapters<br />
3.	Messaging
</p>
";}s:3:"wfw";a:1:{s:10:"commentrss";s:87:"http://www.jdoneill.com/blog/2005/05/18/integration-of-enterprise-systems-and-gis/feed/";}s:7:"summary";s:393:"Enterprise systems have the ability to fully automate traditional business activities, but this is only the first step in improving efficiency.  To continue to improve productivity from an enterprise system, we must consider application integration and data integration.  Application integration implies that disparate applications have the ability to seamlessly work together to produce [...]";s:12:"atom_content";s:1233:"	<p><img src="http://www.jdoneill.com/blog/wp-images/posts/soa_architecture.jpg" alt="soa architecture" />Enterprise systems have the ability to fully automate traditional business activities, but this is only the first step in improving efficiency.  To continue to improve productivity from an enterprise system, we must consider application integration and data integration.  Application integration implies that disparate applications have the ability to seamlessly work together to produce results unattainable by themselves.   Data integration implies that applications which constitute an enterprise system must be able to use and share data results from other applications in the system.  In a utopian enterprise system, all applications would be native to the underlying architecture, however reality dictates otherwise.  Many foreign platform applications have to work with each other to “save the enterprise”.  Most mature GIS systems are built external to the J2EE architecture.  Consequently we need to develop ways to implement a loosely coupled integration of J2EE systems and a modern GIS system.  There are a number of ways to do this including: </p>
	<p>1.	Web Services<br />
2.	Adapters<br />
3.	Messaging
</p>
";}i:6;a:12:{s:5:"title";s:39:"geographic reprojection with ArcObjects";s:4:"link";s:80:"http://www.jdoneill.com/blog/2005/04/26/geographic-reprojection-with-arcobjects/";s:8:"comments";s:89:"http://www.jdoneill.com/blog/2005/04/26/geographic-reprojection-with-arcobjects/#comments";s:7:"pubdate";s:31:"Tue, 26 Apr 2005 07:57:07 +0000";s:2:"dc";a:1:{s:7:"creator";s:3:"dop";}s:8:"category";s:14:"JavaArcObjects";s:4:"guid";s:80:"http://www.jdoneill.com/blog/2005/04/26/geographic-reprojection-with-arcobjects/";s:11:"description";s:321:"Recently I was asked how to transform from one spatial reference into another using ArcObjects.  This is one of my favorite subjects, map projections, and is an important concept in maps produced with data obtained from a variety of sources.  Maps produced from data of this sort become part of a larger controlling [...]";s:7:"content";a:1:{s:7:"encoded";s:2132:"	<p>Recently I was asked how to transform from one spatial reference into another using ArcObjects.  This is one of my favorite subjects, map projections, and is an important concept in maps produced with data obtained from a variety of sources.  Maps produced from data of this sort become part of a larger controlling system called a <em>Geographic Information System (GIS)</em>.  Use of a GIS allows map developers to retrieve and overlay maps with an extensive variety of other types of data.  Such a transformation from one coordinate system into another is a function of <em>map projections</em>.  The following is my estimation at the easiest way to do a projection conversion with ArcObjects, using the <code>projectEx()</code> method off of the <code>IGeometry2</code> interface:  </p>
	<p>&nbsp;<code>IPoint point = new Point();</code><br />
&nbsp;<code>IGeometry2 geometry = new IGeometry2Proxy(point);</code><br />
&nbsp;<code>point.putCoords(1,1);</code></p>
	<p>&nbsp;<code>ISpatialReferenceFactory env = new SpatialReferenceEnvironment();</code><br />
&nbsp;<code>ISpatialReference fromRef =<br />
&nbsp;&nbsp;env.createGeographicCoordinateSystem(esriSRGeoCSType.esriSRGeoCS_WGS1984);</code><br />
&nbsp;<code>geometry.setSpatialReferenceByRef(fromRef);</code></p>
	<p>&nbsp;<code>ISpatialReference toRef =<br />
&nbsp;&nbsp;env.createProjectedCoordinateSystem(esriSRProjCSType.esriSRProjCS_World_Robinson);</code><br />
&nbsp;<code>ITransformation trans =<br />
&nbsp;&nbsp;env.createGeoTransformation(<br />
&nbsp;&nbsp;&nbsp;esriSRGeoTransformation2Type.<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;esriSRGeoTransformation_NAD_1927_TO_NAD_1983_NADCON<br />
&nbsp;&nbsp;&nbsp;&nbsp;);</code><br />
&nbsp;<code>IGeoTransformation geoTrans = new IGeoTransformationProxy(trans);</code><br />
&nbsp;<code>geometry.projectEx(<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toRef,<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;esriTransformDirection.esriTransformForward,<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geoTrans,false,<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0);</code></p>
";}s:3:"wfw";a:1:{s:10:"commentrss";s:85:"http://www.jdoneill.com/blog/2005/04/26/geographic-reprojection-with-arcobjects/feed/";}s:7:"summary";s:321:"Recently I was asked how to transform from one spatial reference into another using ArcObjects.  This is one of my favorite subjects, map projections, and is an important concept in maps produced with data obtained from a variety of sources.  Maps produced from data of this sort become part of a larger controlling [...]";s:12:"atom_content";s:2132:"	<p>Recently I was asked how to transform from one spatial reference into another using ArcObjects.  This is one of my favorite subjects, map projections, and is an important concept in maps produced with data obtained from a variety of sources.  Maps produced from data of this sort become part of a larger controlling system called a <em>Geographic Information System (GIS)</em>.  Use of a GIS allows map developers to retrieve and overlay maps with an extensive variety of other types of data.  Such a transformation from one coordinate system into another is a function of <em>map projections</em>.  The following is my estimation at the easiest way to do a projection conversion with ArcObjects, using the <code>projectEx()</code> method off of the <code>IGeometry2</code> interface:  </p>
	<p>&nbsp;<code>IPoint point = new Point();</code><br />
&nbsp;<code>IGeometry2 geometry = new IGeometry2Proxy(point);</code><br />
&nbsp;<code>point.putCoords(1,1);</code></p>
	<p>&nbsp;<code>ISpatialReferenceFactory env = new SpatialReferenceEnvironment();</code><br />
&nbsp;<code>ISpatialReference fromRef =<br />
&nbsp;&nbsp;env.createGeographicCoordinateSystem(esriSRGeoCSType.esriSRGeoCS_WGS1984);</code><br />
&nbsp;<code>geometry.setSpatialReferenceByRef(fromRef);</code></p>
	<p>&nbsp;<code>ISpatialReference toRef =<br />
&nbsp;&nbsp;env.createProjectedCoordinateSystem(esriSRProjCSType.esriSRProjCS_World_Robinson);</code><br />
&nbsp;<code>ITransformation trans =<br />
&nbsp;&nbsp;env.createGeoTransformation(<br />
&nbsp;&nbsp;&nbsp;esriSRGeoTransformation2Type.<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;esriSRGeoTransformation_NAD_1927_TO_NAD_1983_NADCON<br />
&nbsp;&nbsp;&nbsp;&nbsp;);</code><br />
&nbsp;<code>IGeoTransformation geoTrans = new IGeoTransformationProxy(trans);</code><br />
&nbsp;<code>geometry.projectEx(<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toRef,<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;esriTransformDirection.esriTransformForward,<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;geoTrans,false,<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0,<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0);</code></p>
";}i:7;a:12:{s:5:"title";s:21:"Spherical Earth Model";s:4:"link";s:62:"http://www.jdoneill.com/blog/2005/04/09/spherical-earth-model/";s:8:"comments";s:71:"http://www.jdoneill.com/blog/2005/04/09/spherical-earth-model/#comments";s:7:"pubdate";s:31:"Sat, 09 Apr 2005 19:51:31 +0000";s:2:"dc";a:1:{s:7:"creator";s:3:"dop";}s:8:"category";s:10:"DevGeodesy";s:4:"guid";s:62:"http://www.jdoneill.com/blog/2005/04/09/spherical-earth-model/";s:11:"description";s:303:"The difficulty of various concepts regarding the earth is removed when assuming it to be a sphere.  Imagine a plane passing through the center of a spherical earth.  Its intersection with the level surface forms a continuous line around the earth.  Any portion of the line is a level line, and the [...]";s:7:"content";a:1:{s:7:"encoded";s:875:"	<p><img src="http://www.jdoneill.com/blog/wp-images/posts/great-circle.gif" alt="great circle drawing" />The difficulty of various concepts regarding the earth is removed when assuming it to be a sphere.  Imagine a plane passing through the center of a spherical earth.  Its intersection with the level surface forms a continuous line around the earth.  Any portion of the line is a level line, and the circle defined by intersection of the plane with a mean level of the earth is called the great circle of the earth.  The distance along the great circle arc provides us with the shortest distance between two points on a spherical model of the earth.  An example of determining the distance between two points defined by geographic coordinates (spherical latitude and longitude) can be found under the <a href="http://www.jdoneill.com/research.php">research</a> tab.
</p>
";}s:3:"wfw";a:1:{s:10:"commentrss";s:67:"http://www.jdoneill.com/blog/2005/04/09/spherical-earth-model/feed/";}s:7:"summary";s:303:"The difficulty of various concepts regarding the earth is removed when assuming it to be a sphere.  Imagine a plane passing through the center of a spherical earth.  Its intersection with the level surface forms a continuous line around the earth.  Any portion of the line is a level line, and the [...]";s:12:"atom_content";s:875:"	<p><img src="http://www.jdoneill.com/blog/wp-images/posts/great-circle.gif" alt="great circle drawing" />The difficulty of various concepts regarding the earth is removed when assuming it to be a sphere.  Imagine a plane passing through the center of a spherical earth.  Its intersection with the level surface forms a continuous line around the earth.  Any portion of the line is a level line, and the circle defined by intersection of the plane with a mean level of the earth is called the great circle of the earth.  The distance along the great circle arc provides us with the shortest distance between two points on a spherical model of the earth.  An example of determining the distance between two points defined by geographic coordinates (spherical latitude and longitude) can be found under the <a href="http://www.jdoneill.com/research.php">research</a> tab.
</p>
";}i:8;a:12:{s:5:"title";s:34:"J2EE 5.0 Spec Early Draft Released";s:4:"link";s:74:"http://www.jdoneill.com/blog/2005/04/07/j2ee-50-spec-early-draft-released/";s:8:"comments";s:83:"http://www.jdoneill.com/blog/2005/04/07/j2ee-50-spec-early-draft-released/#comments";s:7:"pubdate";s:31:"Thu, 07 Apr 2005 07:12:01 +0000";s:2:"dc";a:1:{s:7:"creator";s:3:"dop";}s:8:"category";s:7:"JavaDev";s:4:"guid";s:74:"http://www.jdoneill.com/blog/2005/04/07/j2ee-50-spec-early-draft-released/";s:11:"description";s:248:"The first early draft of JSR 244, or J2EE 5.0, has been released.  The spec leverages many aspects of J2SE 5.0 and the focus seems to be on ease of development and deployment.  As I dig deeper into the spec I hope to comment on the improvements.   ";s:7:"content";a:1:{s:7:"encoded";s:309:"	<p>The first early draft of <a href="http://www.jcp.org/en/jsr/detail?id=244">JSR 244</a>, or J2EE 5.0, has been released.  The spec leverages many aspects of J2SE 5.0 and the focus seems to be on ease of development and deployment.  As I dig deeper into the spec I hope to comment on the improvements.
</p>
";}s:3:"wfw";a:1:{s:10:"commentrss";s:79:"http://www.jdoneill.com/blog/2005/04/07/j2ee-50-spec-early-draft-released/feed/";}s:7:"summary";s:248:"The first early draft of JSR 244, or J2EE 5.0, has been released.  The spec leverages many aspects of J2SE 5.0 and the focus seems to be on ease of development and deployment.  As I dig deeper into the spec I hope to comment on the improvements.   ";s:12:"atom_content";s:309:"	<p>The first early draft of <a href="http://www.jcp.org/en/jsr/detail?id=244">JSR 244</a>, or J2EE 5.0, has been released.  The spec leverages many aspects of J2SE 5.0 and the focus seems to be on ease of development and deployment.  As I dig deeper into the spec I hope to comment on the improvements.
</p>
";}i:9;a:12:{s:5:"title";s:27:"Agent Controller on Solaris";s:4:"link";s:68:"http://www.jdoneill.com/blog/2005/03/16/agent-controller-on-solaris/";s:8:"comments";s:77:"http://www.jdoneill.com/blog/2005/03/16/agent-controller-on-solaris/#comments";s:7:"pubdate";s:31:"Wed, 16 Mar 2005 10:06:43 +0000";s:2:"dc";a:1:{s:7:"creator";s:3:"dop";}s:8:"category";s:17:"JavaWSADProfiling";s:4:"guid";s:68:"http://www.jdoneill.com/blog/2005/03/16/agent-controller-on-solaris/";s:11:"description";s:374:"Recently I have been debating what the intention is for the remote attachment to servers option in Websphere Studio Application Developer (WSAD).  Using this feature involves setting up an Agent Controller on the remote server machine.  Agent Controller provides information about running applications to other applications for testing or debugging tools.  Considering [...]";s:7:"content";a:1:{s:7:"encoded";s:4412:"	<p>Recently I have been debating what the intention is for the remote attachment to servers option in Websphere Studio Application Developer (WSAD).  Using this feature involves setting up an Agent Controller on the remote server machine.  Agent Controller provides information about running applications to other applications for testing or debugging tools.  Considering the fact that WSAD is only available on Windows and Linux platforms and Agent Controller gets shipped with WSAD, I naturally thought that WSAD only supported remote attachment to servers on those platforms.  Turns out the following is true: </p>
	<p> &nbsp;&nbsp;1. The remote platforms supported for remote deployment and test are Windows and Linux. </p>
	<p>However, for applications that are already deployed and running on remote platforms, the Agent Controller supports attaching to applications running on many other platforms, including AIX(R), Solaris, and OS/390(R).</p>
	<p>Here are the steps to get Agent Controller installed/uninstall on the Solaris platform.  </p>
	<p>Note:<br />
If you want to profile your applications on Solaris, ensure that Java development kit 1.3.0 or higher is installed.  To install or upgrade Agent Controller on a separate Solaris, follow these steps: </p>
	<p>&nbsp;&nbsp;1. Ensure that the Java development kit 1.3.0 or higher is installed. </p>
	<p>&nbsp;&nbsp;2. Log in as root and go to the directory where Agent Controller setup.jar installation package that you transferred is located. </p>
	<p>&nbsp;&nbsp;3.Issue the command:<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>java -Djava.compiler=NONE -jar setup.jar</code></p>
	<p>&nbsp;&nbsp;&nbsp;&nbsp;4. Follow the on-screen instructions. Here are some considerations when installing Agent Controller: </p>
	<p>By default, Agent Controller is installed in <code>/opt/IBMRAC</code> on Solaris.<br />
For the Specify where the Java Runtime file (java) is located prompt, type the location where java.exe can be found (for example, <code>/usr/java/jre/bin</code>).<br />
For the WebSphere Application Server V5 and V5.1 installed location prompt, type the locations of WebSphere Application Server Version 5 and WebSphere Application Server Version 5.1, if they installed (for example, <code>/usr/WebSphere/AppServer</code>). You may leave these fields blank if they are not installed.<br />
On the Host List page of the wizard, you specify computers that can access the Agent Controller you are currently installing. Usually these are the computers where WebSphere Studio Application Developer is installed.<br />
This computer only radio button does not allow any computer other than this one to access Agent Controller. This is the default.<br />
The Specific computers radio button allows you to specify the host name or the network name of one or more computers that can access Agent Controller. The host names are specified as a space delimited list.<br />
The Any computer radio button allows all computers to access Agent Controller.<br />
On the Security page of the wizard, specify whether Agent Controller will require encrypted and authenticated communications. If security is disabled, only the host list is used to control access to Agent Controller. If security is enabled, clients are able to connect to Agent Controller only if they contain the necessary certificates to authenticate Agent Controller for Secure Socket Communications. Also, all clients are required to log in to Agent Controller. If you select <em>Enabled</em>, you will be asked to enter the users that are allowed access to Agent Controller. Multiple user names must be separated by spaces. By default, security is disabled. </p>
	<p>&nbsp;&nbsp;&nbsp;&nbsp;5. Start the server by opening the <code>/opt/IBMRAC/bin</code> directory and issuing the command:<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>./RAStart.sh</code></p>
	<p>&nbsp;&nbsp;&nbsp;&nbsp;6. To stop the server, open the <code>/opt/IBMRAC/bin</code> directory, and issue the command:<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;./RAStop.sh</p>
	<p>Uninstalling on Solaris<br />
To uninstall Agent Controller, ensure that the Java development kit is installed and log on as root. Go to the directory <code>/opt/IBMRAC/bin</code>, and issue the command:<br />
&nbsp;&nbsp;&nbsp;&nbsp;<code>./uninstall.sh</code>
</p>
";}s:3:"wfw";a:1:{s:10:"commentrss";s:73:"http://www.jdoneill.com/blog/2005/03/16/agent-controller-on-solaris/feed/";}s:7:"summary";s:374:"Recently I have been debating what the intention is for the remote attachment to servers option in Websphere Studio Application Developer (WSAD).  Using this feature involves setting up an Agent Controller on the remote server machine.  Agent Controller provides information about running applications to other applications for testing or debugging tools.  Considering [...]";s:12:"atom_content";s:4412:"	<p>Recently I have been debating what the intention is for the remote attachment to servers option in Websphere Studio Application Developer (WSAD).  Using this feature involves setting up an Agent Controller on the remote server machine.  Agent Controller provides information about running applications to other applications for testing or debugging tools.  Considering the fact that WSAD is only available on Windows and Linux platforms and Agent Controller gets shipped with WSAD, I naturally thought that WSAD only supported remote attachment to servers on those platforms.  Turns out the following is true: </p>
	<p> &nbsp;&nbsp;1. The remote platforms supported for remote deployment and test are Windows and Linux. </p>
	<p>However, for applications that are already deployed and running on remote platforms, the Agent Controller supports attaching to applications running on many other platforms, including AIX(R), Solaris, and OS/390(R).</p>
	<p>Here are the steps to get Agent Controller installed/uninstall on the Solaris platform.  </p>
	<p>Note:<br />
If you want to profile your applications on Solaris, ensure that Java development kit 1.3.0 or higher is installed.  To install or upgrade Agent Controller on a separate Solaris, follow these steps: </p>
	<p>&nbsp;&nbsp;1. Ensure that the Java development kit 1.3.0 or higher is installed. </p>
	<p>&nbsp;&nbsp;2. Log in as root and go to the directory where Agent Controller setup.jar installation package that you transferred is located. </p>
	<p>&nbsp;&nbsp;3.Issue the command:<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>java -Djava.compiler=NONE -jar setup.jar</code></p>
	<p>&nbsp;&nbsp;&nbsp;&nbsp;4. Follow the on-screen instructions. Here are some considerations when installing Agent Controller: </p>
	<p>By default, Agent Controller is installed in <code>/opt/IBMRAC</code> on Solaris.<br />
For the Specify where the Java Runtime file (java) is located prompt, type the location where java.exe can be found (for example, <code>/usr/java/jre/bin</code>).<br />
For the WebSphere Application Server V5 and V5.1 installed location prompt, type the locations of WebSphere Application Server Version 5 and WebSphere Application Server Version 5.1, if they installed (for example, <code>/usr/WebSphere/AppServer</code>). You may leave these fields blank if they are not installed.<br />
On the Host List page of the wizard, you specify computers that can access the Agent Controller you are currently installing. Usually these are the computers where WebSphere Studio Application Developer is installed.<br />
This computer only radio button does not allow any computer other than this one to access Agent Controller. This is the default.<br />
The Specific computers radio button allows you to specify the host name or the network name of one or more computers that can access Agent Controller. The host names are specified as a space delimited list.<br />
The Any computer radio button allows all computers to access Agent Controller.<br />
On the Security page of the wizard, specify whether Agent Controller will require encrypted and authenticated communications. If security is disabled, only the host list is used to control access to Agent Controller. If security is enabled, clients are able to connect to Agent Controller only if they contain the necessary certificates to authenticate Agent Controller for Secure Socket Communications. Also, all clients are required to log in to Agent Controller. If you select <em>Enabled</em>, you will be asked to enter the users that are allowed access to Agent Controller. Multiple user names must be separated by spaces. By default, security is disabled. </p>
	<p>&nbsp;&nbsp;&nbsp;&nbsp;5. Start the server by opening the <code>/opt/IBMRAC/bin</code> directory and issuing the command:<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>./RAStart.sh</code></p>
	<p>&nbsp;&nbsp;&nbsp;&nbsp;6. To stop the server, open the <code>/opt/IBMRAC/bin</code> directory, and issue the command:<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;./RAStop.sh</p>
	<p>Uninstalling on Solaris<br />
To uninstall Agent Controller, ensure that the Java development kit is installed and log on as root. Go to the directory <code>/opt/IBMRAC/bin</code>, and issue the command:<br />
&nbsp;&nbsp;&nbsp;&nbsp;<code>./uninstall.sh</code>
</p>
";}}s:7:"channel";a:7:{s:5:"title";s:8:"jdoneill";s:4:"link";s:28:"http://www.jdoneill.com/blog";s:11:"description";s:20:"jdoneill blog portal";s:7:"pubdate";s:31:"Tue, 25 Oct 2005 22:04:33 +0000";s:9:"generator";s:27:"http://wordpress.org/?v=1.5";s:8:"language";s:2:"en";s:7:"tagline";s:20:"jdoneill blog portal";}s:9:"textinput";a:0:{}s:5:"image";a:0:{}s:9:"feed_type";s:3:"RSS";s:12:"feed_version";s:3:"2.0";s:5:"stack";a:0:{}s:9:"inchannel";b:0;s:6:"initem";b:0;s:9:"incontent";b:0;s:11:"intextinput";b:0;s:7:"inimage";b:0;s:13:"current_field";s:0:"";s:17:"current_namespace";b:0;s:5:"ERROR";s:0:"";s:19:"_CONTENT_CONSTRUCTS";a:6:{i:0;s:7:"content";i:1;s:7:"summary";i:2;s:4:"info";i:3;s:5:"title";i:4;s:7:"tagline";i:5;s:9:"copyright";}s:4:"etag";s:36:""39955f9ce414d86e172bc80211d246bc"
";s:13:"last_modified";s:31:"Tue, 25 Oct 2005 22:04:33 GMT
";}